<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="DpPrdDispStats">

	<sql id="DispHistoryWhere">
		<if test="strDtm != null and strDtm != ''.toString()">
			<![CDATA[
		    AND A.UPD_DTM >= TO_DATE(#{strDtm}||'000000','YYYYMMDDHH24MISS')
		    ]]>
		</if>
		<if test="endDtm != null and endDtm != ''.toString()">
		    <![CDATA[
		    AND A.UPD_DTM < TO_DATE(#{endDtm}||'000000','YYYYMMDDHH24MISS')+1
		    ]]>
		</if>
	</sql>

	<select id="selectDispHistoryCount" parameterType="HashMap" resultType="integer">
		/* DpPrdDispStats.selectDispHistoryCount */
		SELECT
			COUNT(*)
		FROM
		(
			SELECT
				ROW_NUMBER() OVER (PARTITION BY A.CO_CD, A.PRD_ID, A.BZPLC_ID, A.OPR_UNIT_ID,A.SEQ ORDER BY A.UPD_DTM DESC) RN,
				A.DISP_STATS_CD,
				TO_NUMBER(A.PRD_ID) PRD_ID_VIEW,
				A.CO_CD,
				A.UPD_DTM,
				A.REG_DTM,
				A.MRO_PRD_STATS_CD,
				A.PRD_USE_YN,
				A.SAFT_INVN_YN,
				A.PURG_INFO_PSB_YN,
				A.DISP_RSLT_STR_DTM,
				A.DISP_RSLT_END_DTM,
				B.AUTO_LOGIC_EM_YN,
				B.DISP_STATS_CHGRSN,
				A.REGPSN_ID,
				A.BZPLC_ID,
				A.OPR_UNIT_ID
			FROM TB_DP_PRD_DISP_STATS_INFO_HST A
			LEFT OUTER JOIN TB_DP_PRD_DISP_REG_HST B
			ON B.CO_CD = A.CO_CD
			AND B.BZPLC_ID = A.BZPLC_ID
			AND B.PRD_ID = A.PRD_ID
			AND B.OPR_UNIT_ID = A.OPR_UNIT_ID
			AND A.DISP_RSLT_STR_DTM BETWEEN B.DISP_REG_STR_DTM AND B.DISP_REG_END_DTM
			WHERE 1=1
				AND A.CO_CD = #{coCd}
				AND A.PRD_ID = LPAD(#{prdId},18,0)
				<if test="bzplcId != null and bzplcId != ''.toString()">
				    AND A.BZPLC_ID = #{bzplcId}
				</if>
		)A
		WHERE 0=0
		 	<include refid="DispHistoryWhere" />
	</select>

	<select id="selectDispHistoryList" parameterType="HashMap" resultType="HashMap">
		/* DpPrdDispStats.selectDispHistoryList */
		SELECT
			A.*,
			B.OPRTR_NM,
			FN_COM_DTL_CDNM('KO','DISP_STATS_CD',A.DISP_STATS_CD) AS DISP_STATS_NM,
			FN_COM_DTL_CDNM('KO','MRO_PRD_STATS_CD',A.MRO_PRD_STATS_CD) AS MRO_PRD_STATS_CD_NM,
			FN_COM_DTL_CDNM('KO','USE_YN',A.PRD_USE_YN) AS PRD_USE_YN_NM,
			C.BZPLC_NM,
			D.OPR_UNIT_NM
		FROM
		(
			SELECT
				ROW_NUMBER() OVER (PARTITION BY A.CO_CD, A.PRD_ID, A.BZPLC_ID, A.OPR_UNIT_ID,A.SEQ ORDER BY A.UPD_DTM DESC) RN,
				A.DISP_STATS_CD,
				TO_NUMBER(A.PRD_ID) PRD_ID_VIEW,
				A.CO_CD,
				A.UPD_DTM,
				A.REG_DTM,
				A.MRO_PRD_STATS_CD,
				A.PRD_USE_YN,
				A.SAFT_INVN_YN,
				A.PURG_INFO_PSB_YN,
				A.DISP_RSLT_STR_DTM,
				A.DISP_RSLT_END_DTM,
				B.AUTO_LOGIC_EM_YN,
				CASE WHEN A.REGPSN_ID = 'SYSTEM' THEN '' ELSE B.DISP_STATS_CHGRSN END DISP_STATS_CHGRSN,
				A.REGPSN_ID,
				A.BZPLC_ID,
				A.OPR_UNIT_ID
			FROM TB_DP_PRD_DISP_STATS_INFO_HST A
			LEFT OUTER JOIN TB_DP_PRD_DISP_REG_HST B
			ON B.CO_CD = A.CO_CD
			AND B.BZPLC_ID = A.BZPLC_ID
			AND B.PRD_ID = A.PRD_ID
			AND B.OPR_UNIT_ID = A.OPR_UNIT_ID
			AND A.DISP_RSLT_STR_DTM BETWEEN B.DISP_REG_STR_DTM AND B.DISP_REG_END_DTM
			WHERE 1=1
				AND A.CO_CD = #{coCd}
				AND A.PRD_ID = LPAD(#{prdId},18,0)
				<if test="bzplcId != null and bzplcId != ''.toString()">
				    AND A.BZPLC_ID = #{bzplcId}
				</if>
		)A
		LEFT OUTER JOIN TB_CO_MBR_OPRTR_INFO B
		ON A.CO_CD = B.CO_CD
			AND A.REGPSN_ID = B.OPRTR_ID
		LEFT OUTER JOIN TB_CC_BZPLC_BASIS C
			ON C.CO_CD = A.CO_CD
			AND C.BZPLC_ID = A.BZPLC_ID
		LEFT OUTER JOIN TB_CC_OPR_UNIT_BASIS D
			ON D.CO_CD = A.CO_CD
			AND D.BZPLC_ID = A.BZPLC_ID
			AND D.OPR_UNIT_ID = A.OPR_UNIT_ID
		WHERE 0=0
		 	<include refid="DispHistoryWhere" />
		ORDER BY A.REG_DTM DESC, A.OPR_UNIT_ID ASC
		OFFSET #{startNum} ROWS FETCH FIRST #{rowCount} ROWS ONLY
	</select>

	<insert id="insertToPrdDispReg" parameterType="hashMap">
     /* DpPrdDispStats.insertToPrdDispReg */
     INSERT INTO TB_DP_PRD_DISP_REG_HST(CO_CD,BZPLC_ID,PRD_ID,OPR_UNIT_ID,SEQ,DISP_STATS_CD,
        AUTO_LOGIC_EM_YN,DISP_STATS_CHGRSN,DISP_REG_STR_DTM,DISP_REG_END_DTM,
        REGPSN_ID,REG_DTM,UPDPSN_ID,UPD_DTM)
     VALUES(#{coCd},#{bzplcId},#{prdId},#{oprUnitId},FN_PC_HIST_SEQ_CRT('PRD_DISP_REG_HST'),#{dispStatsCd},
        #{autoLogicEmYn},#{dispStatsChgrsn},
        #{dispRegStrDtm},'99991231235959',#{regpsnId},SYSDATE,#{updpsnId},SYSDATE)
     </insert>

     <insert id="insertToPrdDispRegHist" statementType="CALLABLE">
     /* DpPrdDispStats.insertToPrdDispRegHist */
     { Call SP_PC_PRD_DISP_REG_HIST(
                  #{rtnCd,         mode=OUT, jdbcType=VARCHAR, javaType=String}    /* OUT VARCHAR2  리턴코드 */
                , #{rtnMsg,        mode=OUT, jdbcType=VARCHAR, javaType=String}    /* OUT VARCHAR2  리턴메시지 */
                , #{iudGb,        mode=IN, jdbcType=VARCHAR}
                , #{coCd,          mode=IN, jdbcType=VARCHAR}
                , #{bzplcId,       mode=IN, jdbcType=VARCHAR}
                , #{prdId,         mode=IN, jdbcType=VARCHAR}
                , #{oprUnitId,       mode=IN, jdbcType=VARCHAR}
                , #{dispRegStrDtm,     mode=IN, jdbcType=VARCHAR}
                , #{regpsnId,      mode=IN, jdbcType=VARCHAR}
     )}
     </insert>

     <insert id="insertToPrdDispStatsInfoHist" statementType="CALLABLE">
     /* DpPrdDispStats.insertToPrdDispStatsInfoHist */
     { Call SP_PC_PRD_DISP_STATS_INFO_HIST(
                  #{rtnCd,         mode=OUT, jdbcType=VARCHAR, javaType=String}    /* OUT VARCHAR2  리턴코드 */
                , #{rtnMsg,        mode=OUT, jdbcType=VARCHAR, javaType=String}    /* OUT VARCHAR2  리턴메시지 */
                , #{coCd,          mode=IN, jdbcType=VARCHAR}
                , #{bzplcId,       mode=IN, jdbcType=VARCHAR}
                , #{prdId,         mode=IN, jdbcType=VARCHAR}
                , #{regpsnId,      mode=IN, jdbcType=VARCHAR}
     )}
     </insert>

	<select id="selectPcPrdDispHistCount" parameterType="hashMap" resultType="INTEGER">
		SELECT COUNT(1)
		FROM TB_DP_PRD_DISP_REG_HST
		WHERE CO_CD = #{coCd}
		  AND PRD_ID = LPAD(#{prdId},18,0)
		  AND BZPLC_ID = #{bzplcId}
		  AND OPR_UNIT_ID = #{oprUnitId}
		  AND DISP_REG_STR_DTM = #{dispRegStrDtm}
	</select>



</mapper>