<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="EvtInfo">

	<resultMap id="resultEvtInfo" type="HashMap">
	<result property="CO_CD" column="CO_CD"/>
	<result property="EVT_SEQ" column="EVT_SEQ"/>
	<result property="EVT_FORM_CD" column="EVT_FORM_CD"/>
	<result property="MALL_SPR_CD" column="MALL_SPR_CD"/>
	<result property="EXPS_NOTIC_SPR_CD" column="EXPS_NOTIC_SPR_CD"/>
	<result property="EVT_STR_DT" column="EVT_STR_DT"/>
	<result property="EVT_END_DT" column="EVT_END_DT"/>
	<result property="STAMP_CNT" column="STAMP_CNT"/>
	<result property="PWNR_ANCMT_YN" column="PWNR_ANCMT_YN"/>
	<result property="PWNR_ANCMT_DT" column="PWNR_ANCMT_DT"/>
	<result property="EVT_NM" column="EVT_NM"/>
	<result property="CPN_EVT_NO" column="CPN_EVT_NO"/>
	<result property="PC_LST_DOC_REG_ID" column="PC_LST_DOC_REG_ID"/>
	<result property="PC_DTL_DOC_REG_ID" column="PC_DTL_DOC_REG_ID"/>
	<result property="MBL_LST_DOC_REG_ID" column="MBL_LST_DOC_REG_ID"/>
	<result property="MBL_DTL_DOC_REG_ID" column="MBL_DTL_DOC_REG_ID"/>
	<result property="MBATT" column="MBATT"/>
	<result property="PWNR_ANCMT_CTS" column="PWNR_ANCMT_CTS" jdbcType="CLOB" javaType="java.lang.String"/>
	<result property="USE_YN" column="USE_YN"/>
	<result property="REGPSN_ID" column="REGPSN_ID"/>
	<result property="REG_DTM" column="REG_DTM"/>
	<result property="UPDPSN_ID" column="UPDPSN_ID"/>
	<result property="UPD_DTM" column="UPD_DTM"/>
	<result property="EVT_FORM_CD_NM" column="EVT_FORM_CD_NM"/>
	<result property="MALL_SPR_CD_NM" column="MALL_SPR_CD_NM"/>
	<result property="EXPS_NOTIC_SPR_CD_NM" column="EXPS_NOTIC_SPR_CD_NM"/>
	<result property="PWNR_ANCMT_YN_NM" column="PWNR_ANCMT_YN_NM"/>
	<result property="USE_YN_NM" column="USE_YN_NM"/>
	<result property="REGPSN_ID_NM" column="REGPSN_ID_NM"/>
	<result property="UPDPSN_ID_NM" column="UPDPSN_ID_NM"/>
	<result property="EVT_SPR_CD_NM" column="EVT_SPR_CD_NM"/>
	<result property="PRTC_COUNT" column="PRTC_COUNT"/>
	<result property="READ_COL" column="READ_COL"/>
	<result property="CPN_EVT_NO_NM" column="CPN_EVT_NO_NM"/>
	<result property="PC_LST_DOC_REG_ID_NM" column="PC_LST_DOC_REG_ID_NM"/>
	<result property="PC_LST_DOC_REG_ID_REG_SEQ" column="PC_LST_DOC_REG_ID_REG_SEQ"/>
	<result property="PC_LST_DOC_REG_ID_ATFL_STOR_PATH" column="PC_LST_DOC_REG_ID_ATFL_STOR_PATH"/>
	<result property="PC_LST_DOC_REG_ID_ORI_ATFL_NM" column="PC_LST_DOC_REG_ID_ORI_ATFL_NM"/>
	<result property="PC_DTL_DOC_REG_ID_NM" column="PC_DTL_DOC_REG_ID_NM"/>
	<result property="PC_DTL_DOC_REG_ID_REG_SEQ" column="PC_DTL_DOC_REG_ID_REG_SEQ"/>
	<result property="PC_DTL_DOC_REG_ID_ATFL_STOR_PATH" column="PC_DTL_DOC_REG_ID_ATFL_STOR_PATH"/>
	<result property="PC_DTL_DOC_REG_ID_ORI_ATFL_NM" column="PC_DTL_DOC_REG_ID_ORI_ATFL_NM"/>
	<result property="MBL_LST_DOC_REG_ID_NM" column="MBL_LST_DOC_REG_ID_NM"/>
	<result property="MBL_LST_DOC_REG_ID_REG_SEQ" column="MBL_LST_DOC_REG_ID_REG_SEQ"/>
	<result property="MBL_LST_DOC_REG_ID_ATFL_STOR_PATH" column="MBL_LST_DOC_REG_ID_ATFL_STOR_PATH"/>
	<result property="MBL_LST_DOC_REG_ID_ORI_ATFL_NM" column="MBL_LST_DOC_REG_ID_ORI_ATFL_NM"/>
	<result property="MBL_DTL_DOC_REG_ID_NM" column="MBL_DTL_DOC_REG_ID_NM"/>
	<result property="MBL_DTL_DOC_REG_ID_REG_SEQ" column="MBL_DTL_DOC_REG_ID_REG_SEQ"/>
	<result property="MBL_DTL_DOC_REG_ID_ATFL_STOR_PATH" column="MBL_DTL_DOC_REG_ID_ATFL_STOR_PATH"/>
	<result property="MBL_DTL_DOC_REG_ID_ORI_ATFL_NM" column="MBL_DTL_DOC_REG_ID_ORI_ATFL_NM"/>
	</resultMap>


	<resultMap id="prtcCtsMap" type="HashMap">				
		<result property="PRTC_CTS" column="PRTC_CTS" jdbcType="CLOB" javaType="java.lang.String"/>		
	</resultMap>
	
	
	
	<select id="selectEvtInfoList" parameterType="HashMap" resultMap="resultEvtInfo">
		/* 이벤트 목록 조회 - EvtInfo_SQL.selectEvtInfoList */

		SELECT CO_CD
		     , EVT_SEQ
		     , EVT_FORM_CD
		     , MALL_SPR_CD
		     , EXPS_NOTIC_SPR_CD
		     , EVT_STR_DT
		     , EVT_END_DT
		     , STAMP_CNT
		     , PWNR_ANCMT_YN
		     , PWNR_ANCMT_DT
		     , EVT_NM
		     , CPN_EVT_NO
		     , PC_LST_DOC_REG_ID
		     , PC_DTL_DOC_REG_ID
		     , MBL_LST_DOC_REG_ID
		     , MBL_DTL_DOC_REG_ID
		     , MBATT
		     , PWNR_ANCMT_CTS
		     , USE_YN
		     , REGPSN_ID
		     , TO_CHAR(REG_DTM, 'YYYY.MM.DD') AS REG_DTM
		     , UPDPSN_ID
		     , TO_CHAR(UPD_DTM, 'YYYY.MM.DD') AS UPD_DTM
		
		     , EVT_FORM_CD_NM
		     , MALL_SPR_CD_NM
		     , EXPS_NOTIC_SPR_CD_NM
		
		     , PWNR_ANCMT_YN_NM
		     , USE_YN_NM
		
		     , REGPSN_ID_NM
		     , UPDPSN_ID_NM
		     
		     , EVT_SPR_CD_NM
		     
		     , PRTC_COUNT
		     
		     , '' AS READ_COL
		     
		  FROM (
		        SELECT A.CO_CD
		             , A.EVT_SEQ
		             , A.EVT_FORM_CD
		             , A.MALL_SPR_CD
		             , A.EXPS_NOTIC_SPR_CD
		             , TO_CHAR(TO_DATE(A.EVT_STR_DT, 'YYYYMMDD'), 'YYYY.MM.DD') AS EVT_STR_DT
		             , TO_CHAR(TO_DATE(A.EVT_END_DT, 'YYYYMMDD'), 'YYYY.MM.DD') AS EVT_END_DT
		             , A.STAMP_CNT
		             , A.PWNR_ANCMT_YN
		             , TO_CHAR(TO_DATE(A.PWNR_ANCMT_DT, 'YYYYMMDD'), 'YYYY.MM.DD') AS PWNR_ANCMT_DT
		             , A.EVT_NM
		             , A.CPN_EVT_NO
		             , A.PC_LST_DOC_REG_ID
		             , A.PC_DTL_DOC_REG_ID
		             , A.MBL_LST_DOC_REG_ID
		             , A.MBL_DTL_DOC_REG_ID
		             , A.MBATT
		             , A.PWNR_ANCMT_CTS
		             , A.USE_YN
		             , A.REGPSN_ID
		             , A.REG_DTM
		             , A.UPDPSN_ID
		             , A.UPD_DTM
		
		             , D.COM_DTL_CD_NM AS EVT_FORM_CD_NM
		             , E.COM_DTL_CD_NM AS MALL_SPR_CD_NM
		             , F.COM_DTL_CD_NM AS EXPS_NOTIC_SPR_CD_NM
		
		             , CASE WHEN A.PWNR_ANCMT_YN = 'Y' THEN '발표'
		                    WHEN A.PWNR_ANCMT_YN = 'N' THEN '미발표'
		                    ELSE ''
		               END AS PWNR_ANCMT_YN_NM
		               
		             , CASE WHEN A.USE_YN = 'Y' THEN '사용'
		                    WHEN A.USE_YN = 'N' THEN '미사용'
		                    ELSE ''
		               END AS USE_YN_NM
		
		             , B.OPRTR_NM AS REGPSN_ID_NM
		             , C.OPRTR_NM AS UPDPSN_ID_NM
		     
		             , CASE WHEN TO_CHAR(SYSDATE, 'YYYYMMDD') <![CDATA[ < ]]> A.EVT_STR_DT THEN '대기'
		                    WHEN TO_CHAR(SYSDATE, 'YYYYMMDD') BETWEEN A.EVT_STR_DT AND A.EVT_END_DT THEN '진행중'
		                    WHEN TO_CHAR(SYSDATE, 'YYYYMMDD') <![CDATA[ > ]]> A.EVT_END_DT THEN '종료'
		                    ELSE ''
		               END AS EVT_SPR_CD_NM
		
		             , CASE WHEN EVT_FORM_CD = '10' THEN 0
		                    WHEN EVT_FORM_CD = '20' THEN ( 
		                                                  SELECT COUNT(1)
		                                                    FROM TB_SA_EVT_PRTC_DTLS X
		                                                   WHERE X.CO_CD = A.CO_CD
		                                                     AND X.EVT_SEQ = A.EVT_SEQ
		                                                     AND X.RPLY_DEL_YN = 'N' 
		                                                 )
		                    WHEN EVT_FORM_CD = '30' THEN ( 
		                                                  SELECT COUNT(1)
		                                                    FROM (
		                                                          SELECT COUNT(1)
		                                                            FROM TB_SA_EVT_PRTC_DTLS X
		                                                           WHERE X.CO_CD = A.CO_CD
		                                                             AND X.EVT_SEQ = A.EVT_SEQ
		                                                           GROUP BY X.CO_CD
		                                                               , X.EVT_SEQ
		                                                               , X.MBR_ID
		                                                         ) Y
		                                                 )
		                    ELSE 0
		               END AS PRTC_COUNT
		
		          FROM TB_SA_EVT_INFO A
		             , TB_CO_MBR_OPRTR_INFO B
		             , TB_CO_MBR_OPRTR_INFO C
		             , TB_CO_COM_CD_DTL D
		             , TB_CO_COM_CD_DTL E
		             , TB_CO_COM_CD_DTL F
		
		         WHERE A.CO_CD = B.CO_CD(+)
		           AND A.REGPSN_ID = B.OPRTR_ID(+)
		
		           AND A.CO_CD = C.CO_CD(+)
		           AND A.UPDPSN_ID = C.OPRTR_ID(+)
		   
		           AND A.EVT_FORM_CD = D.COM_DTL_CD
		           AND D.LANG_CD = 'KO'
		           AND D.COM_CLSF_CD =  'EVT_FORM_CD'
		           AND D.USE_YN = 'Y'
		   
		           AND A.MALL_SPR_CD = E.COM_DTL_CD
		           AND E.LANG_CD = 'KO'
		           AND E.COM_CLSF_CD =  'MALL_SPR_CD'
		           AND E.USE_YN = 'Y'
		   
		           AND A.EXPS_NOTIC_SPR_CD = F.COM_DTL_CD
		           AND F.LANG_CD = 'KO'
		           AND F.COM_CLSF_CD =  'EXPS_NOTIC_SPR_CD'
		           AND F.USE_YN = 'Y'
		           
				<if test="evtSprCd != null and evtSprCd != '' ">
		            <choose>
		                <when test='evtSprCd == "READY"'>
		           			AND TO_CHAR(SYSDATE, 'YYYYMMDD') <![CDATA[ < ]]> A.EVT_STR_DT
		                </when>
		                <when test='evtSprCd == "ING"'>
		           			AND TO_CHAR(SYSDATE, 'YYYYMMDD') BETWEEN A.EVT_STR_DT AND A.EVT_END_DT
		                </when>
		                <when test='evtSprCd == "END"'>
		           			AND TO_CHAR(SYSDATE, 'YYYYMMDD') <![CDATA[ > ]]> A.EVT_END_DT
		                </when>
		                <otherwise>
		                
		                </otherwise>
		            </choose>
				</if>
		           
				<if test="evtFormCd != null and evtFormCd != '' ">
		        	AND A.EVT_FORM_CD = #{evtFormCd}
				</if>
				
				<if test="useYn != null and useYn != '' ">
		        	AND A.USE_YN = #{useYn}
				</if>
			
				<if test="mallSprCd != null and mallSprCd != '' ">
		        	AND A.MALL_SPR_CD = #{mallSprCd}
				</if>
			
				<if test="evtStrDt != null and evtStrDt != '' and evtEndDt != null and evtEndDt != '' ">
		        	AND A.REG_DTM BETWEEN TO_DATE(#{evtStrDt} || '000000', 'YYYYMMDDHH24MISS') AND TO_DATE(#{evtEndDt} || '235959', 'YYYYMMDDHH24MISS') 
				</if>
			
				<if test="evtNm != null and evtNm != '' ">
		        	AND A.EVT_NM LIKE '%' || #{evtNm} || '%'
				</if>
			
				<if test="expsNoticSprCd != null and expsNoticSprCd != '' ">
		        	AND A.EXPS_NOTIC_SPR_CD = #{expsNoticSprCd}
				</if>
			
				<if test="oprUnitIds != null and oprUnitIds.size > 0 ">
		            AND (A.CO_CD, A.EVT_SEQ) IN (
		                                        SELECT CO_CD
		                                             , EVT_SEQ
		                                          FROM TB_SA_EVT_OPR_UNIT_DTL X
		                                             , TB_OD_ODR_INQ_TGT_DTLS T1
		                                             , TB_OD_ODR_INQ_TGT_DTLS T2
		                                         WHERE T1.SES_ID = #{sesId}
		                                           AND T1.INQ_COND_DTLS = #{inqCondDtls}
		                                           AND T1.COL_ITM = 'OPR_UNIT_ID'
		                                           AND T1.COND_DATA_VAL = X.OPR_UNIT_ID
		                                           AND T2.SES_ID = #{sesId}
		                                           AND T2.INQ_COND_DTLS = #{inqCondDtls}
		                                           AND T2.COL_ITM = 'BZPLC_ID'
		                                           AND T2.COND_DATA_VAL = X.BZPLC_ID
		                                       )
		
				</if>
			
		       ) A
		
				<if test="sortColumn != null and sortColumn != ''">
		 			ORDER BY A.${sortColumn} ${sortType}
				</if>
			
				<if test="sortColumn == null or sortColumn == ''">
					ORDER BY A.USE_YN DESC
				     		, EVT_SPR_CD_NM DESC
			     			, A.REG_DTM DESC
				</if>
		
				<if test="excelDownloadYn != null and excelDownloadYn != ''">
					<if test='excelDownloadYn == "N"'>
						OFFSET #{startNum} ROWS FETCH FIRST #{rowCount} ROWS ONLY
					</if>
				</if>

	</select>

	<select id="selectEvtInfoListCount" parameterType="HashMap" resultType="Integer">
		/* 이벤트 목록 건수 조회 - EvtInfo_SQL.selectEvtInfoListCount */

		SELECT COUNT(1)
		
		  FROM TB_SA_EVT_INFO A
		     , TB_CO_MBR_OPRTR_INFO B
		     , TB_CO_MBR_OPRTR_INFO C
		     , TB_CO_COM_CD_DTL D
		     , TB_CO_COM_CD_DTL E
		     , TB_CO_COM_CD_DTL F
		
		 WHERE A.CO_CD = B.CO_CD(+)
		   AND A.REGPSN_ID = B.OPRTR_ID(+)
		
		   AND A.CO_CD = C.CO_CD(+)
		   AND A.UPDPSN_ID = C.OPRTR_ID(+)
		
		   AND A.EVT_FORM_CD = D.COM_DTL_CD
		
		   AND D.LANG_CD = 'KO'
		   AND D.COM_CLSF_CD =  'EVT_FORM_CD'
		   AND D.USE_YN = 'Y'
		
		   AND A.MALL_SPR_CD = E.COM_DTL_CD
		
		   AND E.LANG_CD = 'KO'
		   AND E.COM_CLSF_CD =  'MALL_SPR_CD'
		   AND E.USE_YN = 'Y'
		
		   AND A.EXPS_NOTIC_SPR_CD = F.COM_DTL_CD
		
		   AND F.LANG_CD = 'KO'
		   AND F.COM_CLSF_CD =  'EXPS_NOTIC_SPR_CD'
		   AND F.USE_YN = 'Y'
		   
				<if test="evtSprCd != null and evtSprCd != '' ">
		            <choose>
		                <when test='evtSprCd == "READY"'>
		   					AND TO_CHAR(SYSDATE, 'YYYYMMDD') <![CDATA[ < ]]> A.EVT_STR_DT
		                </when>
		                <when test='evtSprCd == "ING"'>
		   					AND TO_CHAR(SYSDATE, 'YYYYMMDD') BETWEEN A.EVT_STR_DT AND A.EVT_END_DT
		                </when>
		                <when test='evtSprCd == "END"'>
		   					AND TO_CHAR(SYSDATE, 'YYYYMMDD') <![CDATA[ > ]]> A.EVT_END_DT
		                </when>
		                <otherwise>
		                </otherwise>
		            </choose>
				</if>
		           
				<if test="evtFormCd != null and evtFormCd != '' ">
		   			AND A.EVT_FORM_CD = #{evtFormCd}
				</if>
				<if test="useYn != null and useYn != '' ">
		   			AND A.USE_YN = #{useYn}
				</if>
				<if test="mallSprCd != null and mallSprCd != '' ">
		   			AND A.MALL_SPR_CD = #{mallSprCd}
				</if>
				<if test="evtStrDt != null and evtStrDt != '' and evtEndDt != null and evtEndDt != '' ">
		   			AND A.REG_DTM BETWEEN TO_DATE(#{evtStrDt} || '000000', 'YYYYMMDDHH24MISS') AND TO_DATE(#{evtEndDt} || '235959', 'YYYYMMDDHH24MISS') 
				</if>
				<if test="evtNm != null and evtNm != '' ">
		   			AND A.EVT_NM LIKE '%' || #{evtNm} || '%'
				</if>
				<if test="expsNoticSprCd != null and expsNoticSprCd != '' ">
		   			AND A.EXPS_NOTIC_SPR_CD = #{expsNoticSprCd}
				</if>
				<if test="oprUnitIds != null and oprUnitIds.size > 0 ">
				    AND (A.CO_CD, A.EVT_SEQ) IN (
				                                SELECT CO_CD
				                                     , EVT_SEQ
				                                  FROM TB_SA_EVT_OPR_UNIT_DTL X
				                                     , TB_OD_ODR_INQ_TGT_DTLS T1
				                                     , TB_OD_ODR_INQ_TGT_DTLS T2
				                                 WHERE T1.SES_ID = #{sesId}
				                                   AND T1.INQ_COND_DTLS = #{inqCondDtls}
				                                   AND T1.COL_ITM = 'OPR_UNIT_ID'
				                                   AND T1.COND_DATA_VAL = X.OPR_UNIT_ID
				                                   AND T2.SES_ID = #{sesId}
				                                   AND T2.INQ_COND_DTLS = #{inqCondDtls}
				                                   AND T2.COL_ITM = 'BZPLC_ID'
				                                   AND T2.COND_DATA_VAL = X.BZPLC_ID
				                               )
				</if>
	
	</select>

	<select id="selectEvtInfoSeq" parameterType="HashMap" resultType="HashMap">
		/* 이벤트 시퀀스 값 조회 - EvtInfo_SQL.selectEvtInfoSeq */
		
		SELECT SQ_SA_EVT_INFO_01.NEXTVAL AS EVT_SEQ
		  FROM DUAL

	</select>

    <insert id="insertEvtInfo" parameterType="HashMap">
		/* 이벤트 기본 정보 등록 - EvtInfo.insertEvtInfo */

		INSERT INTO TB_SA_EVT_INFO
		     ( CO_CD
		     , EVT_SEQ
		     , EVT_FORM_CD
		     , MALL_SPR_CD
		     , EXPS_NOTIC_SPR_CD
		     , EVT_STR_DT
		     , EVT_END_DT
		     , STAMP_CNT
		     , PWNR_ANCMT_YN
		     , PWNR_ANCMT_DT
		     , EVT_NM
		     , CPN_EVT_NO
		     , PC_LST_DOC_REG_ID
		     , PC_DTL_DOC_REG_ID
		     , MBL_LST_DOC_REG_ID
		     , MBL_DTL_DOC_REG_ID
		     , MBATT
		     , MBATT_EXPS_YN
		     , PWNR_ANCMT_CTS
		     , USE_YN
		     , REGPSN_ID
		     , REG_DTM
		     , UPDPSN_ID
		     , UPD_DTM
		     , CONT_CUST_PRTC_YN
		     , URL_ADDR
		     , EXPS_YN
		     , NOTLOGN_INC_YN
		     )
		VALUES
		     ( #{coCd}
		     , #{evtSeq}
		     , #{evtFormCd}
		     , #{mallSprCd}
		     , #{expsNoticSprCd}
		     , #{evtStrDt}
		     , #{evtEndDt}
		     , #{stampCnt}
		     , #{pwnrAncmtYn}
		     , #{pwnrAncmtDt}
		     , TRIM(#{evtNm})
		     , #{cpnEvtNo}
		     , #{pcLstDocRegId}
		     , #{pcDtlDocRegId}
		     , #{mblLstDocRegId}
		     , #{mblDtlDocRegId}
		     , #{MBATT}
		     , #{mbattExpsYn}
		     , #{pwnrAncmtCts}
		     , #{useYn}
		     , #{regpsnId}
		     , SYSDATE
		     , #{updpsnId}
		     , SYSDATE
		     , #{contCustPrtcYn}
		     , #{urlAddr}
		     , #{expsYn}
		     , #{notlognIncYn}
		     )

    </insert>

	<update id="updateEvtInfo" parameterType="hashMap">
		/* 이벤트 기본 정보 수정 - EvtInfo.updateEvtInfo */

		UPDATE TB_SA_EVT_INFO
		
		   SET EVT_FORM_CD = #{evtFormCd}
		     , MALL_SPR_CD = #{mallSprCd}
		     , EXPS_NOTIC_SPR_CD = #{expsNoticSprCd}
		     , EVT_STR_DT = #{evtStrDt}
		     , EVT_END_DT = #{evtEndDt}
		     , STAMP_CNT = #{stampCnt}
		     , PWNR_ANCMT_YN = #{pwnrAncmtYn}
		     , PWNR_ANCMT_DT = #{pwnrAncmtDt}
		     , EVT_NM = TRIM(#{evtNm})
		     , CPN_EVT_NO = #{cpnEvtNo}
		     , PC_LST_DOC_REG_ID = #{pcLstDocRegId}
		     , PC_DTL_DOC_REG_ID = #{pcDtlDocRegId}
		     , MBL_LST_DOC_REG_ID = #{mblLstDocRegId}
		     , MBL_DTL_DOC_REG_ID = #{mblDtlDocRegId}
		     , MBATT = #{MBATT}
		     , MBATT_EXPS_YN = #{mbattExpsYn}
		     , PWNR_ANCMT_CTS = #{pwnrAncmtCts}
		     , USE_YN = #{useYn}
		     , UPDPSN_ID = #{updpsnId}
		     , UPD_DTM = SYSDATE
		     , CONT_CUST_PRTC_YN = #{contCustPrtcYn}
			 , URL_ADDR = #{urlAddr}
			 , EXPS_YN = #{expsYn}
			 , NOTLOGN_INC_YN = #{notlognIncYn}
		 WHERE CO_CD = #{coCd}
		   AND EVT_SEQ = #{evtSeq}

	</update>

	<delete id="deleteEvtOprUnit" parameterType="hashMap">
		/* 이벤트 운영단위 정보 삭제 - EvtInfo.deleteEvtOprUnit */

		DELETE 
		  FROM TB_SA_EVT_OPR_UNIT_DTL
		 WHERE CO_CD = #{coCd}
		   AND EVT_SEQ = #{evtSeq}
		   AND BZPLC_ID = #{bzplcId}
		   AND OPR_UNIT_ID = #{oprUnitId}

	</delete>

    <insert id="insertEvtOprUnit" parameterType="HashMap">
		/* 이벤트 운영단위 정보 등록 - EvtInfo.insertEvtOprUnit */

		INSERT INTO TB_SA_EVT_OPR_UNIT_DTL
		     ( CO_CD
		     , EVT_SEQ
		     , BZPLC_ID
		     , OPR_UNIT_ID
		     , REGPSN_ID
		     , REG_DTM
		     , UPDPSN_ID
		     , UPD_DTM
		     )
		VALUES
		     ( #{coCd}
		     , #{evtSeq}
		     , #{bzplcId}
		     , #{oprUnitId}
		     , #{regpsnId}
		     , SYSDATE
		     , #{updpsnId}
		     , SYSDATE
		     )

    </insert>

	<select id="selectEvtInfo" parameterType="HashMap" resultMap="resultEvtInfo">
		/* 이벤트 상세 - EvtInfo_SQL.selectEvtInfo */

		SELECT A.CO_CD
		     , A.EVT_SEQ
		     , A.EVT_FORM_CD
		     , A.MALL_SPR_CD
		     , A.EXPS_NOTIC_SPR_CD
		     , A.EVT_STR_DT
		     , A.EVT_END_DT
		     , A.STAMP_CNT
		     , A.PWNR_ANCMT_YN
		     , A.PWNR_ANCMT_DT
		     , A.EVT_NM
		     , A.CPN_EVT_NO
		     , A.PC_LST_DOC_REG_ID
		     , A.PC_DTL_DOC_REG_ID
		     , A.MBL_LST_DOC_REG_ID
		     , A.MBL_DTL_DOC_REG_ID
		     , A.MBATT
		     , A.MBATT_EXPS_YN
		     , A.PWNR_ANCMT_CTS
		     , A.USE_YN
		     , A.NOTLOGN_INC_YN
		     , A.REGPSN_ID
		     , TO_CHAR(A.REG_DTM, 'YYYY.MM.DD HH24:MI:SS') AS REG_DTM
		     , A.UPDPSN_ID
		     , TO_CHAR(A.UPD_DTM, 'YYYY.MM.DD HH24:MI:SS') AS UPD_DTM
			 , A.CONT_CUST_PRTC_YN 
			 , A.EXPS_YN
		     , B.CPN_NM AS CPN_EVT_NO_NM
		
		     , C.OPRTR_NM AS REGPSN_ID_NM
		     , D.OPRTR_NM AS UPDPSN_ID_NM
		     
		     , E.ATFL_NM AS PC_LST_DOC_REG_ID_NM
		     , E.DOC_REG_SEQ AS PC_LST_DOC_REG_ID_REG_SEQ
		     , E.ATFL_STOR_PATH AS PC_LST_DOC_REG_ID_ATFL_STOR_PATH
		     , E.ORI_ATFL_NM AS PC_LST_DOC_REG_ID_ORI_ATFL_NM
		     
		     , F.ATFL_NM AS PC_DTL_DOC_REG_ID_NM
		     , F.DOC_REG_SEQ AS PC_DTL_DOC_REG_ID_REG_SEQ
		     , F.ATFL_STOR_PATH AS PC_DTL_DOC_REG_ID_ATFL_STOR_PATH
		     , F.ORI_ATFL_NM AS PC_DTL_DOC_REG_ID_ORI_ATFL_NM
		     
		     , G.ATFL_NM AS MBL_LST_DOC_REG_ID_NM
		     , G.DOC_REG_SEQ AS MBL_LST_DOC_REG_ID_REG_SEQ
		     , G.ATFL_STOR_PATH AS MBL_LST_DOC_REG_ID_ATFL_STOR_PATH
		     , G.ORI_ATFL_NM AS MBL_LST_DOC_REG_ID_ORI_ATFL_NM
		     
		     , H.ATFL_NM AS MBL_DTL_DOC_REG_ID_NM
		     , H.DOC_REG_SEQ AS MBL_DTL_DOC_REG_ID_REG_SEQ
		     , H.ATFL_STOR_PATH AS MBL_DTL_DOC_REG_ID_ATFL_STOR_PATH
		     , H.ORI_ATFL_NM AS MBL_DTL_DOC_REG_ID_ORI_ATFL_NM
		     , A.URL_ADDR AS URL_ADDR
		     
		  FROM TB_SA_EVT_INFO A
		     , TB_SA_CPN_INFO B
		     , TB_CO_MBR_OPRTR_INFO C
		     , TB_CO_MBR_OPRTR_INFO D
		     , TB_CO_ATFL_DTLS E
		     , TB_CO_ATFL_DTLS F
		     , TB_CO_ATFL_DTLS G
		     , TB_CO_ATFL_DTLS H
		
		 WHERE A.CO_CD = B.CO_CD(+)
		   AND A.CPN_EVT_NO = B.CPN_EVT_NO(+)
		   
		   AND A.CO_CD = C.CO_CD(+)
		   AND A.REGPSN_ID = C.OPRTR_ID(+)
		
		   AND A.CO_CD = D.CO_CD(+)
		   AND A.UPDPSN_ID = D.OPRTR_ID(+)
		
		   AND A.PC_LST_DOC_REG_ID = E.DOC_REG_ID(+)
		   AND E.DOC_REG_SEQ(+) = '1'
		 
		   AND A.PC_DTL_DOC_REG_ID = F.DOC_REG_ID(+)
		   AND F.DOC_REG_SEQ(+) = '1'
		 
		   AND A.MBL_LST_DOC_REG_ID = G.DOC_REG_ID(+)
		   AND G.DOC_REG_SEQ(+) = '1'
		 
		   AND A.MBL_DTL_DOC_REG_ID = H.DOC_REG_ID(+)
		   AND H.DOC_REG_SEQ(+) = '1'
		 
		   AND A.CO_CD = #{coCd}
		   AND A.EVT_SEQ = #{evtSeq}

	</select>
	
	<select id="selectEvtOprUnitList" parameterType="HashMap" resultType="HashMap">
		/* 이벤트 운영단위상세 - EvtInfo_SQL.selectEvtOprUnitList */

		SELECT A.CO_CD
		     , A.EVT_SEQ
		     , A.BZPLC_ID
		     , A.OPR_UNIT_ID
		     , B.OPR_UNIT_NM
		
		  FROM TB_SA_EVT_OPR_UNIT_DTL A
		     , TB_CC_OPR_UNIT_BASIS B
		  
		 WHERE A.CO_CD = B.CO_CD(+)
		   AND A.BZPLC_ID = B.BZPLC_ID(+)
		   AND A.OPR_UNIT_ID = B.OPR_UNIT_ID(+)
		 
		   AND A.CO_CD = #{coCd}
		   AND A.EVT_SEQ = #{evtSeq}

	</select>

	<delete id="deleteEvtInfo" parameterType="hashMap">
		/* 이벤트 정보 삭제 - EvtInfo.deleteEvtInfo */

		DELETE 
		  FROM TB_SA_EVT_INFO
		 WHERE CO_CD = #{coCd}
		   AND EVT_SEQ = #{evtSeq}

	</delete>

	<delete id="deleteEvtOprUnitAll" parameterType="hashMap">
		/* 이벤트 운영단위 정보 삭제 (전체) - EvtInfo.deleteEvtOprUnitAll */

		DELETE 
		  FROM TB_SA_EVT_OPR_UNIT_DTL
		 WHERE CO_CD = #{coCd}
		   AND EVT_SEQ = #{evtSeq}

	</delete>

	<select id="selectEvtPrtcDtlsList" parameterType="HashMap" resultMap="prtcCtsMap">	
		/* 이벤트 - 응모형- 참여자목록 조회 - EvtInfo_SQL.selectEvtPrtcDtlsList */
	
		SELECT '0' AS CHK
		     	, CO_CD
		     	, EVT_SEQ
		     	, EVT_PRTC_SEQ
		     	, MBR_ID
		     	, PRTC_CTS
		     	, TO_CHAR(PRTC_DTM, 'YYYY.MM.DD HH24:MI:SS') AS PRTC_DTM
		     	, RPLY_OPUB_YN
		     	, RPLY_DEL_YN
		     	, REGPSN_ID
		     	, TO_CHAR(REG_DTM, 'YYYY.MM.DD') AS REG_DTM
		     	, UPDPSN_ID
		     	, TO_CHAR(UPD_DTM, 'YYYY.MM.DD') AS UPD_DTM
		
		     	, CASE WHEN LENGTH(MBR_NM) = 2 THEN SUBSTR(MBR_NM, 1, 1) || LPAD('*', (LENGTH(MBR_NM)-1), '*')
		               WHEN LENGTH(MBR_NM) = 3 THEN SUBSTR(MBR_NM, 1, 1) || LPAD('*', (LENGTH(MBR_NM)-2), '*') || SUBSTR(MBR_NM, 3, 1)
		               ELSE SUBSTR(MBR_NM, 1, 2) || LPAD('*', (LENGTH(MBR_NM)-2), '*')
		          END AS MBR_NM
		     
		        , SUBSTR(LOGN_ID, 1, 3) || LPAD('*', (LENGTH(LOGN_ID)-3), '*') AS LOGN_ID
		
		        , RPLY_OPUB_YN_NM
		        , RPLY_DEL_YN_NM
		
		  FROM (
		        SELECT A.CO_CD
		             , A.EVT_SEQ
		             , A.EVT_PRTC_SEQ
		             , A.MBR_ID
		             , A.PRTC_CTS
		             , A.PRTC_DTM
		             , A.RPLY_OPUB_YN
		             , A.RPLY_DEL_YN
		             , A.REGPSN_ID
		             , A.REG_DTM
		             , A.UPDPSN_ID
		             , A.UPD_DTM
		             
		             , B.MBR_NM
		             , C.LOGN_ID
		
		             , CASE WHEN A.RPLY_OPUB_YN = 'Y' THEN '공개'
		                    WHEN A.RPLY_OPUB_YN = 'N' THEN '비공개'
		                    ELSE ''
		               END AS RPLY_OPUB_YN_NM
		               
		             , CASE WHEN A.RPLY_DEL_YN = 'Y' THEN '삭제'
		                    WHEN A.RPLY_DEL_YN = 'N' THEN '-'
		                    ELSE ''
		               END AS RPLY_DEL_YN_NM
		
		          FROM TB_SA_EVT_PRTC_DTLS A
		             , TB_CC_MBR_BASIS B
		             , TB_CO_MBR_LOGN_INFO C
		 
		         WHERE A.CO_CD = B.CO_CD
		           AND A.MBR_ID = B.MBR_ID
		         
		           AND A.CO_CD = C.CO_CD(+)
		           AND A.MBR_ID = C.MBR_ID(+)
		         
		           AND A.CO_CD = #{coCd}
		           AND A.EVT_SEQ = #{evtSeq}
		           
				<if test="mbrIds != null and mbrIds.size > 0 ">
		           AND A.MBR_ID IN 
					<foreach collection="mbrIds" item="item" open="(" close=")" separator=",">
						#{item.MBR_ID}
					</foreach>
				</if>
			
				<if test="startDate != null and startDate != '' and endDate != null and endDate != '' ">
		            AND A.PRTC_DTM BETWEEN TO_DATE(#{startDate} || '000000', 'YYYYMMDDHH24MISS') AND TO_DATE(#{endDate} || '235959', 'YYYYMMDDHH24MISS') 
				</if>
			
				<if test="rplyOpubYn != null and rplyOpubYn != '' ">
		            AND A.RPLY_OPUB_YN = #{rplyOpubYn}
				</if>
		
		       ) A
		
				<if test="sortColumn != null and sortColumn != ''">
					ORDER BY A.${sortColumn} ${sortType}
				</if>
			
				<if test="sortColumn == null or sortColumn == ''">
		 			ORDER BY A.EVT_PRTC_SEQ DESC
				</if>
		
				<if test="excelDownloadYn != null and excelDownloadYn != ''">
					<if test='excelDownloadYn == "N"'>
						OFFSET #{startNum} ROWS FETCH FIRST #{rowCount} ROWS ONLY
					</if>
				</if>

	</select>
	
	<select id="selectEvtPrtcDtlsListCount" parameterType="HashMap" resultType="Integer">
		/* 이벤트 - 응모형- 참여자목록 건수 조회 - EvtInfo_SQL.selectEvtPrtcDtlsListCount */

		SELECT COUNT(1)
		
		  FROM TB_SA_EVT_PRTC_DTLS A
		     , TB_CC_MBR_BASIS B
		     , TB_CO_MBR_LOGN_INFO C
		 
		 WHERE A.CO_CD = B.CO_CD
		   AND A.MBR_ID = B.MBR_ID
		         
		   AND A.CO_CD = C.CO_CD(+)
		   AND A.MBR_ID = C.MBR_ID(+)
		         
		   AND A.CO_CD = #{coCd}
		   AND A.EVT_SEQ = #{evtSeq}
		           
				<if test="mbrIds != null and mbrIds.size > 0 ">
		   			AND A.MBR_ID IN 
					<foreach collection="mbrIds" item="item" open="(" close=")" separator=",">
						#{item.MBR_ID}
					</foreach>
				</if>
			
				<if test="startDate != null and startDate != '' and endDate != null and endDate != '' ">
		   			AND A.PRTC_DTM BETWEEN TO_DATE(#{startDate} || '000000', 'YYYYMMDDHH24MISS') AND TO_DATE(#{endDate} || '235959', 'YYYYMMDDHH24MISS') 
				</if>
				<if test="rplyOpubYn != null and rplyOpubYn != '' ">
		   			AND A.RPLY_OPUB_YN = #{rplyOpubYn}
				</if>

	</select>

	<update id="updateEvtPrtcDtls" parameterType="hashMap">
		/* 댓글 공개 여부 수정 - EvtInfo.updateEvtPrtcDtls */

		UPDATE TB_SA_EVT_PRTC_DTLS
		
		   SET RPLY_OPUB_YN = #{rplyOpubYn}
		     , UPDPSN_ID = #{updpsnId}
		     , UPD_DTM = SYSDATE
		
		 WHERE CO_CD = #{coCd}
		   AND EVT_SEQ = #{evtSeq}
		   AND EVT_PRTC_SEQ = #{evtPrtcSeq}

	</update>

	<select id="selectEvtPrtcDtlsStampList" parameterType="HashMap" resultType="HashMap">
		/* 이벤트 - 스템프형- 참여자목록 조회 - EvtInfo_SQL.selectEvtPrtcDtlsStampList */

		SELECT CO_CD
		     , EVT_SEQ
		     , EVT_PRTC_SEQ
		     , MBR_ID     
		     , TO_CHAR(PRTC_DTM, 'YYYY.MM.DD HH24:MI:SS') AS PRTC_DTM    
		        
		     , CASE WHEN LENGTH(MBR_NM) = 2 THEN SUBSTR(MBR_NM, 1, 1) || LPAD('*', (LENGTH(MBR_NM)-1), '*')
		            WHEN LENGTH(MBR_NM) = 3 THEN SUBSTR(MBR_NM, 1, 1) || LPAD('*', (LENGTH(MBR_NM)-2), '*') || SUBSTR(MBR_NM, 3, 1)
		            ELSE SUBSTR(MBR_NM, 1, 2) || LPAD('*', (LENGTH(MBR_NM)-2), '*')
		             END AS MBR_NM
		     
		     , SUBSTR(LOGN_ID, 1, 3) || LPAD('*', (LENGTH(LOGN_ID)-3), '*') AS LOGN_ID
		     
		     , PRTC_COUNT
		     
		     , CASE WHEN PRTC_COUNT <![CDATA[ < ]]> #{stampCnt} THEN '미 완료'
		            ELSE '완료'
		             END AS PRTC_COUNT_NM
		             
		     , CASE WHEN (
		                  SELECT COUNT(1)
		                    FROM TB_SA_CPN_PUBC_USE_DTLS X
		                   WHERE X.CO_CD = #{coCd}
		                     AND X.CPN_EVT_NO = #{cpnEvtNo}
		                     AND X.CPN_PUBC_MBR_ID = Z.MBR_ID
		                 ) > 0 THEN 'Y'
		            ELSE 'N'
		             END AS CPN_DOWNLOAD_YN
		
		     , NVL((
		            SELECT CPN_NO
		              FROM TB_SA_CPN_PUBC_USE_DTLS X
		             WHERE X.CO_CD = #{coCd}
		               AND X.CPN_EVT_NO = #{cpnEvtNo}
		               AND X.CPN_PUBC_MBR_ID = Z.MBR_ID
		           ), '-') AS CPN_NO
		
		  FROM (
		        SELECT A.CO_CD
		             , A.EVT_SEQ
		             , MAX(A.EVT_PRTC_SEQ) AS EVT_PRTC_SEQ
		             , A.MBR_ID            
		             , MAX(A.PRTC_DTM) AS PRTC_DTM            
		                      
		             , B.MBR_NM
		
		             , C.LOGN_ID
		             
		             , COUNT(1) AS PRTC_COUNT
		
		          FROM TB_SA_EVT_PRTC_DTLS A
		             , TB_CC_MBR_BASIS B
		             , TB_CO_MBR_LOGN_INFO C
		 
		         WHERE A.CO_CD = B.CO_CD(+)
		           AND A.MBR_ID = B.MBR_ID(+)
		         
		           AND A.CO_CD = C.CO_CD(+)
		           AND A.MBR_ID = C.MBR_ID(+)
		         
		           AND A.CO_CD = #{coCd}
		           AND A.EVT_SEQ = #{evtSeq}
		           
				<if test="mbrIds != null and mbrIds.size > 0 ">
		            AND A.MBR_ID IN 
					<foreach collection="mbrIds" item="item" open="(" close=")" separator=",">
						#{item.MBR_ID}
					</foreach>
				</if>
			
		         GROUP BY A.CO_CD
		             , A.EVT_SEQ
		             , A.MBR_ID
		
		             , B.MBR_NM
		             , C.LOGN_ID
		       ) Z
		
		 WHERE 1 = 1
		 
		 <if test="startDate != null and startDate != '' and endDate != null and endDate != '' ">
		    AND Z.PRTC_COUNT <![CDATA[ >= ]]> #{stampCnt}
		    AND Z.PRTC_DTM BETWEEN TO_DATE(#{startDate} || '000000', 'YYYYMMDDHH24MISS') AND TO_DATE(#{endDate} || '235959', 'YYYYMMDDHH24MISS') 
		</if>
			
		<if test="endYn != null and endYn != ''">
            <choose>
                <when test='endYn == "Y"'>
   					AND Z.PRTC_COUNT <![CDATA[ >= ]]> #{stampCnt}
                </when>
                <when test='endYn == "N"'>
   					AND Z.PRTC_COUNT <![CDATA[ < ]]> #{stampCnt}
                </when>
                <otherwise>
                </otherwise>
            </choose>
		</if>
	
		<if test="sortColumn != null and sortColumn != ''">
 			ORDER BY ${sortColumn} ${sortType}
		</if>
		<if test="sortColumn == null or sortColumn == ''">
 			ORDER BY EVT_PRTC_SEQ DESC
		</if>
		<if test="excelDownloadYn != null and excelDownloadYn != ''">
			<if test='excelDownloadYn == "N"'>
 				OFFSET #{startNum} ROWS FETCH FIRST #{rowCount} ROWS ONLY
			</if>
		</if>
	
	</select>

	<select id="selectEvtPrtcDtlsStampListCount" parameterType="HashMap" resultType="Integer">
		/* 이벤트 - 스템프형- 참여자목록 건수 조회 - EvtInfo_SQL.selectEvtPrtcDtlsStampListCount */

		SELECT COUNT(1)
		
		  FROM (
		        SELECT A.CO_CD
		             , A.EVT_SEQ
		             , MAX(A.EVT_PRTC_SEQ) AS EVT_PRTC_SEQ
		             , A.MBR_ID
		             --, MAX(A.PRTC_CTS) AS PRTC_CTS
		             , MAX(A.PRTC_DTM) AS PRTC_DTM
		             , A.RPLY_OPUB_YN
		             , A.RPLY_DEL_YN
		             , MAX(A.REGPSN_ID) AS REGPSN_ID
		             , MAX(A.REG_DTM) AS REG_DTM
		             , MAX(A.UPDPSN_ID) AS UPDPSN_ID
		             , MAX(A.UPD_DTM) AS UPD_DTM
		             
		             , B.MBR_NM
		             , C.LOGN_ID
		             
		             , COUNT(1) AS PRTC_COUNT
		
		          FROM TB_SA_EVT_PRTC_DTLS A
		             , TB_CC_MBR_BASIS B
		             , TB_CO_MBR_LOGN_INFO C
		 
		         WHERE A.CO_CD = B.CO_CD
		           AND A.MBR_ID = B.MBR_ID
		         
		           AND A.CO_CD = C.CO_CD(+)
		           AND A.MBR_ID = C.MBR_ID(+)
		         
		           AND A.CO_CD = #{coCd}
		           AND A.EVT_SEQ = #{evtSeq}
		           
				<if test="mbrIds != null and mbrIds.size > 0 ">
		            AND A.MBR_ID IN 
					<foreach collection="mbrIds" item="item" open="(" close=")" separator=",">
						#{item.MBR_ID}
					</foreach>
				</if>
			
		         GROUP BY A.CO_CD
		             , A.EVT_SEQ
		             --, A.EVT_PRTC_SEQ
		             , A.MBR_ID
		             --, A.PRTC_CTS
		             --, A.PRTC_DTM
		             , A.RPLY_OPUB_YN
		             , A.RPLY_DEL_YN
		             --, A.REGPSN_ID
		             --, A.REG_DTM
		             --, A.UPDPSN_ID
		             --, A.UPD_DTM
		             
		             , B.MBR_NM
		
		             , C.LOGN_ID
		       ) A
		
		 WHERE 1 = 1
		 
		 <if test="startDate != null and startDate != '' and endDate != null and endDate != '' ">
		    AND A.PRTC_COUNT <![CDATA[ >= ]]> #{stampCnt}
		    AND A.PRTC_DTM BETWEEN TO_DATE(#{startDate} || '000000', 'YYYYMMDDHH24MISS') AND TO_DATE(#{endDate} || '235959', 'YYYYMMDDHH24MISS') 
				
		</if>
		<if test="endYn != null and endYn != ''">
            <choose>
                <when test='endYn == "Y"'>
   					AND A.PRTC_COUNT <![CDATA[ >= ]]> #{stampCnt}
                </when>
                <when test='endYn == "N"'>
   					AND A.PRTC_COUNT <![CDATA[ < ]]> #{stampCnt}
                </when>
                <otherwise>
                </otherwise>
            </choose>
		</if>
	
	</select>

	<select id="selectEvtPrtcDtlsStampAllList" parameterType="HashMap" resultType="HashMap">
		/* 이벤트 - 스템프형- 참여자목록 (전체) - EvtInfo_SQL.selectEvtPrtcDtlsStampAllList */

		SELECT ROWNUM AS RN
		     , A.CO_CD
		     , A.EVT_SEQ
		     , A.EVT_PRTC_SEQ
		     , A.MBR_ID
		     , A.PRTC_CTS
		     , TO_CHAR(A.PRTC_DTM, 'YYYY.MM.DD HH24:MI:SS') AS PRTC_DTM
		     , A.RPLY_OPUB_YN
		     , A.RPLY_DEL_YN
		     , A.REGPSN_ID
		     , TO_CHAR(A.REG_DTM, 'YYYY.MM.DD') AS REG_DTM
		     , A.UPDPSN_ID
		     , TO_CHAR(A.UPD_DTM, 'YYYY.MM.DD') AS UPD_DTM
		     
		     , B.MBR_NM
		     , C.LOGN_ID
		
		  FROM TB_SA_EVT_PRTC_DTLS A
		     , TB_CC_MBR_BASIS B
		     , TB_CO_MBR_LOGN_INFO C
		
		 WHERE A.CO_CD = B.CO_CD
		   AND A.MBR_ID = B.MBR_ID
		 
		   AND A.CO_CD = C.CO_CD(+)
		   AND A.MBR_ID = C.MBR_ID(+)
		 
		   AND A.CO_CD = #{coCd}
		   AND A.EVT_SEQ = #{evtSeq}
		   AND A.MBR_ID = #{mbrId}
		   
		 ORDER BY A.PRTC_DTM DESC

	</select>

	<select id="selectEvtInfoMbrList" parameterType="HashMap" resultType="HashMap">
		/* 이벤트 목록 (회원) 조회 - EvtInfo_SQL.selectEvtInfoMbrList */

		SELECT CO_CD
		     , EVT_SEQ
		     , EVT_FORM_CD
		     , MALL_SPR_CD
		     , EXPS_NOTIC_SPR_CD
		     , EVT_STR_DT
		     , EVT_END_DT
		     , STAMP_CNT
		     , PWNR_ANCMT_YN
		     , PWNR_ANCMT_DT
		     , EVT_NM
		     , CPN_EVT_NO
		     , PC_LST_DOC_REG_ID
		     , PC_DTL_DOC_REG_ID
		     , MBL_LST_DOC_REG_ID
		     , MBL_DTL_DOC_REG_ID
		     , MBATT
		     , PWNR_ANCMT_CTS
		     , USE_YN
		     , REGPSN_ID
		     , TO_CHAR(REG_DTM, 'YYYY.MM.DD') AS REG_DTM
		     , UPDPSN_ID
		     , TO_CHAR(UPD_DTM, 'YYYY.MM.DD') AS UPD_DTM
		
		     , EVT_FORM_CD_NM
		     , MALL_SPR_CD_NM
		     , EXPS_NOTIC_SPR_CD_NM
		
		     , PWNR_ANCMT_YN_NM
		     , USE_YN_NM
		
		     , REGPSN_ID_NM
		     , UPDPSN_ID_NM
		     
		     , EVT_SPR_CD_NM
		
		     , TO_CHAR(PRTC_DTM, 'YYYY.MM.DD') AS PRTC_DTM
		     
		  FROM (
		        SELECT A.CO_CD
		             , A.EVT_SEQ
		             , A.EVT_FORM_CD
		             , A.MALL_SPR_CD
		             , A.EXPS_NOTIC_SPR_CD
		             , TO_CHAR(TO_DATE(A.EVT_STR_DT, 'YYYYMMDD'), 'YYYY.MM.DD') AS EVT_STR_DT
		             , TO_CHAR(TO_DATE(A.EVT_END_DT, 'YYYYMMDD'), 'YYYY.MM.DD') AS EVT_END_DT
		             , A.STAMP_CNT
		             , A.PWNR_ANCMT_YN
		             , TO_CHAR(TO_DATE(A.PWNR_ANCMT_DT, 'YYYYMMDD'), 'YYYY.MM.DD') AS PWNR_ANCMT_DT
		             , A.EVT_NM
		             , A.CPN_EVT_NO
		             , A.PC_LST_DOC_REG_ID
		             , A.PC_DTL_DOC_REG_ID
		             , A.MBL_LST_DOC_REG_ID
		             , A.MBL_DTL_DOC_REG_ID
		             , A.MBATT
		             , A.PWNR_ANCMT_CTS
		             , A.USE_YN
		             , A.REGPSN_ID
		             , A.REG_DTM
		             , A.UPDPSN_ID
		             , A.UPD_DTM
		
		             , D.COM_DTL_CD_NM AS EVT_FORM_CD_NM
		             , E.COM_DTL_CD_NM AS MALL_SPR_CD_NM
		             , F.COM_DTL_CD_NM AS EXPS_NOTIC_SPR_CD_NM
		
		             , CASE WHEN A.PWNR_ANCMT_YN = 'Y' THEN '발표'
		                    WHEN A.PWNR_ANCMT_YN = 'N' THEN '미발표'
		                    ELSE ''
		                     END AS PWNR_ANCMT_YN_NM
		             , CASE WHEN A.USE_YN = 'Y' THEN '사용'
		                    WHEN A.USE_YN = 'N' THEN '미사용'
		                    ELSE ''
		                     END AS USE_YN_NM
		
		             , B.OPRTR_NM AS REGPSN_ID_NM
		             , C.OPRTR_NM AS UPDPSN_ID_NM
		     
		             , CASE WHEN TO_CHAR(SYSDATE, 'YYYYMMDD') <![CDATA[ > ]]> EVT_END_DT THEN '종료'
		                    ELSE '진행 중'
		                     END AS EVT_SPR_CD_NM
		
		             , (
		                SELECT /*+ INDEX_DESC(X TB_SA_EVT_PRTC_DTLS_PK) */
		                       PRTC_DTM
		                  FROM TB_SA_EVT_PRTC_DTLS X
		                 WHERE X.CO_CD = A.CO_CD
		                   AND X.EVT_SEQ = A.EVT_SEQ
		                   AND X.MBR_ID = #{mbrId}
		                   AND ROWNUM <![CDATA[ <= ]]> 1
		               ) AS PRTC_DTM
		
		          FROM TB_SA_EVT_INFO A
		             , TB_CO_MBR_OPRTR_INFO B
		             , TB_CO_MBR_OPRTR_INFO C
		             , TB_CO_COM_CD_DTL D
		             , TB_CO_COM_CD_DTL E
		             , TB_CO_COM_CD_DTL F
		
		         WHERE A.CO_CD = B.CO_CD(+)
		           AND A.REGPSN_ID = B.OPRTR_ID(+)
		
		           AND A.CO_CD = C.CO_CD(+)
		           AND A.UPDPSN_ID = C.OPRTR_ID(+)
		   
		           AND A.EVT_FORM_CD = D.COM_DTL_CD
		
		           AND D.LANG_CD = 'KO'
		           AND D.COM_CLSF_CD =  'EVT_FORM_CD'
		           AND D.USE_YN = 'Y'
		   
		           AND A.MALL_SPR_CD = E.COM_DTL_CD
		
		           AND E.LANG_CD = 'KO'
		           AND E.COM_CLSF_CD =  'MALL_SPR_CD'
		           AND E.USE_YN = 'Y'
		   
		           AND A.EXPS_NOTIC_SPR_CD = F.COM_DTL_CD
		
		           AND F.LANG_CD = 'KO'
		           AND F.COM_CLSF_CD =  'EXPS_NOTIC_SPR_CD'
		           AND F.USE_YN = 'Y'
		           
		           AND (A.CO_CD, A.EVT_SEQ) IN (
		                                        SELECT CO_CD
		                                             , EVT_SEQ
		                                          FROM TB_SA_EVT_PRTC_DTLS X
		                                         WHERE X.MBR_ID = #{mbrId}
		                                       )
		                                       
				<if test="evtSprCd != null and evtSprCd != '' ">
		            <choose>
		                <when test='evtSprCd == "ING"'>
		          	 		AND A.EVT_END_DT <![CDATA[ >= ]]> TO_CHAR(SYSDATE, 'YYYYMMDD') 
		                </when>
		                <when test='evtSprCd == "END"'>
		           			AND A.EVT_END_DT <![CDATA[ < ]]> TO_CHAR(SYSDATE, 'YYYYMMDD') 
		                </when>
		                <otherwise>
		                </otherwise>
		            </choose>
				</if>
				
				<if test="evtFormCd != null and evtFormCd != '' ">
		            AND A.EVT_FORM_CD = #{evtFormCd}
				</if>
				<if test="evtNm != null and evtNm != '' ">
		            AND A.EVT_NM LIKE '%' || #{evtNm} || '%'
				</if>
			
		       ) A
		
		 WHERE 1 = 1
		 
		<if test="evtStrDt != null and evtStrDt != '' and evtEndDt != null and evtEndDt != '' ">
   			AND A.PRTC_DTM BETWEEN TO_DATE(#{evtStrDt} || '000000', 'YYYYMMDDHH24MISS') AND TO_DATE(#{evtEndDt} || '235959', 'YYYYMMDDHH24MISS') 
		</if>
	
		<if test="sortColumn != null and sortColumn != ''">
 			ORDER BY A.${sortColumn} ${sortType}
		</if>
		<if test="sortColumn == null or sortColumn == ''">
 			ORDER BY A.EVT_SEQ DESC
		</if>
		
		OFFSET #{startNum} ROWS FETCH FIRST #{rowCount} ROWS ONLY

	</select>

	<select id="selectEvtInfoMbrListCount" parameterType="HashMap" resultType="Integer">
		/* 이벤트 목록 (회원) 건수 조회 - EvtInfo_SQL.selectEvtInfoMbrListCount */

		SELECT COUNT(1)
		     
		  FROM (
		        SELECT A.CO_CD
		             , A.EVT_SEQ
		             , A.EVT_FORM_CD
		             , A.MALL_SPR_CD
		             , A.EXPS_NOTIC_SPR_CD
		             , TO_CHAR(TO_DATE(A.EVT_STR_DT, 'YYYYMMDD'), 'YYYY.MM.DD') AS EVT_STR_DT
		             , TO_CHAR(TO_DATE(A.EVT_END_DT, 'YYYYMMDD'), 'YYYY.MM.DD') AS EVT_END_DT
		             , A.STAMP_CNT
		             , A.PWNR_ANCMT_YN
		             , TO_CHAR(TO_DATE(A.PWNR_ANCMT_DT, 'YYYYMMDD'), 'YYYY.MM.DD') AS PWNR_ANCMT_DT
		             , A.EVT_NM
		             , A.CPN_EVT_NO
		             , A.PC_LST_DOC_REG_ID
		             , A.PC_DTL_DOC_REG_ID
		             , A.MBL_LST_DOC_REG_ID
		             , A.MBL_DTL_DOC_REG_ID
		             , A.MBATT
		             , A.PWNR_ANCMT_CTS
		             , A.USE_YN
		             , A.REGPSN_ID
		             , A.REG_DTM
		             , A.UPDPSN_ID
		             , A.UPD_DTM
		
		             , D.COM_DTL_CD_NM AS EVT_FORM_CD_NM
		             , E.COM_DTL_CD_NM AS MALL_SPR_CD_NM
		             , F.COM_DTL_CD_NM AS EXPS_NOTIC_SPR_CD_NM
		
		             , CASE WHEN A.PWNR_ANCMT_YN = 'Y' THEN '발표'
		                    WHEN A.PWNR_ANCMT_YN = 'N' THEN '미발표'
		                    ELSE ''
		                     END AS PWNR_ANCMT_YN_NM
		             , CASE WHEN A.USE_YN = 'Y' THEN '사용'
		                    WHEN A.USE_YN = 'N' THEN '미사용'
		                    ELSE ''
		                     END AS USE_YN_NM
		
		             , B.OPRTR_NM AS REGPSN_ID_NM
		             , C.OPRTR_NM AS UPDPSN_ID_NM
		     
		             , CASE WHEN TO_CHAR(SYSDATE, 'YYYYMMDD') <![CDATA[ > ]]> EVT_END_DT THEN '종료'
		                    ELSE '진행 중'
		                     END AS EVT_SPR_CD_NM
		
		             , (
		                SELECT /*+ INDEX_DESC(X TB_SA_EVT_PRTC_DTLS_PK) */
		                       PRTC_DTM
		                  FROM TB_SA_EVT_PRTC_DTLS X
		                 WHERE X.CO_CD = A.CO_CD
		                   AND X.EVT_SEQ = A.EVT_SEQ
		                   AND X.MBR_ID = #{mbrId}
		                   AND ROWNUM <![CDATA[ <= ]]> 1
		               ) AS PRTC_DTM
		
		          FROM TB_SA_EVT_INFO A
		             , TB_CO_MBR_OPRTR_INFO B
		             , TB_CO_MBR_OPRTR_INFO C
		             , TB_CO_COM_CD_DTL D
		             , TB_CO_COM_CD_DTL E
		             , TB_CO_COM_CD_DTL F
		
		         WHERE A.CO_CD = B.CO_CD(+)
		           AND A.REGPSN_ID = B.OPRTR_ID(+)
		
		           AND A.CO_CD = C.CO_CD(+)
		           AND A.UPDPSN_ID = C.OPRTR_ID(+)
		   
		           AND A.EVT_FORM_CD = D.COM_DTL_CD
		
		           AND D.LANG_CD = 'KO'
		           AND D.COM_CLSF_CD =  'EVT_FORM_CD'
		           AND D.USE_YN = 'Y'
		   
		           AND A.MALL_SPR_CD = E.COM_DTL_CD
		
		           AND E.LANG_CD = 'KO'
		           AND E.COM_CLSF_CD =  'MALL_SPR_CD'
		           AND E.USE_YN = 'Y'
		   
		           AND A.EXPS_NOTIC_SPR_CD = F.COM_DTL_CD
		
		           AND F.LANG_CD = 'KO'
		           AND F.COM_CLSF_CD =  'EXPS_NOTIC_SPR_CD'
		           AND F.USE_YN = 'Y'
		           
		           AND (A.CO_CD, A.EVT_SEQ) IN (
		                                        SELECT CO_CD
		                                             , EVT_SEQ
		                                          FROM TB_SA_EVT_PRTC_DTLS X
		                                         WHERE X.MBR_ID = #{mbrId}
		                                       )
		                                       
				<if test="evtSprCd != null and evtSprCd != '' ">
		            <choose>
		                <when test='evtSprCd == "ING"'>
		           			AND A.EVT_END_DT <![CDATA[ >= ]]> TO_CHAR(SYSDATE, 'YYYYMMDD') 
		                </when>
		                <when test='evtSprCd == "END"'>
		           			AND A.EVT_END_DT <![CDATA[ < ]]> TO_CHAR(SYSDATE, 'YYYYMMDD') 
		                </when>
		                <otherwise>
		                </otherwise>
		            </choose>
				</if>
				
				<if test="evtFormCd != null and evtFormCd != '' ">
		            AND A.EVT_FORM_CD = #{evtFormCd}
				</if>
				<if test="evtNm != null and evtNm != '' ">
		            AND A.EVT_NM LIKE '%' || #{evtNm} || '%'
				</if>
			
		       ) A
		
		 WHERE 1 = 1
		 
		<if test="evtStrDt != null and evtStrDt != '' and evtEndDt != null and evtEndDt != '' ">
   			AND A.PRTC_DTM BETWEEN TO_DATE(#{evtStrDt} || '000000', 'YYYYMMDDHH24MISS') AND TO_DATE(#{evtEndDt} || '235959', 'YYYYMMDDHH24MISS') 
		</if>

	</select>

</mapper>
