<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.ssp.bo.sa.brndhl">

    <!--
    ******************************************************************************
    * SELECT : 전문관
    * 작성자 : 87minho
    * 작성 일자 : 2023.03.14
    ******************************************************************************
    -->
    <select id="selectBrndhlList" parameterType="HashMap" resultType="HashMap">
        /* 전문관 목록 조회 - Brndhl_SQL.com.ssp.bo.sa.brndhl.selectBrndhlList */
        SELECT S.CO_CD
                , S.BRNDHL_SEQ
                , S.MALL_SPR_CD 
                , S.EXPS_NOTIC_SPR_CD
                , S.EXPS_NOTIC_SPR_CD_NM
                , S.PC_LST_VIEW_TYPE_CD
                , S.MBL_LST_VIEW_TYPE_CD
                , S.BRNDHL_NM
                , S.DISP_STR_DT
                , S.DISP_END_DT
                , S.PC_MNU_DOC_REG_ID
                , S.PC_BNR_DOC_REG_ID 
                , S.MBL_BNR_DOC_REG_ID 
                , S.BRNDHL_DESC 
                , S.DISP_SO
                , S.USE_YN
                , S.REGPSN_ID
                , S.REG_DTM
                , S.UPDPSN_ID
                , S.UPD_DTM
                , S.REGPSN_NM
                , S.BRNDHL_STATS
        FROM (            
            SELECT A.CO_CD
                    , A.BRNDHL_SEQ
                    , A.MALL_SPR_CD 
                    , A.EXPS_NOTIC_SPR_CD
                    , FN_COM_DTL_CDNM_NVL('KO', 'EXPS_NOTIC_SPR_CD', A.EXPS_NOTIC_SPR_CD, '-') AS EXPS_NOTIC_SPR_CD_NM
                    , A.PC_LST_VIEW_TYPE_CD
                    , A.MBL_LST_VIEW_TYPE_CD
                    , A.BRNDHL_NM
                    , TO_CHAR(TO_DATE(A.DISP_STR_DT, 'YYYYMMDD'), 'YYYY.MM.DD') AS DISP_STR_DT
                    , TO_CHAR(TO_DATE(A.DISP_END_DT, 'YYYYMMDD'), 'YYYY.MM.DD') AS DISP_END_DT
                    , A.PC_MNU_DOC_REG_ID
                    , A.PC_BNR_DOC_REG_ID 
                    , A.MBL_BNR_DOC_REG_ID 
                    , A.BRNDHL_DESC 
                    , A.DISP_SO
                    , A.USE_YN
                    , A.REGPSN_ID
                    , TO_CHAR(A.REG_DTM, 'YYYY.MM.DD') AS REG_DTM
                    , A.UPDPSN_ID
                    , TO_CHAR(A.UPD_DTM, 'YYYY.MM.DD') AS UPD_DTM
                    , FN_CC_GET_MBR_NM(A.CO_CD, A.REGPSN_ID) AS REGPSN_NM
                    , CASE WHEN TO_CHAR(SYSDATE, 'YYYYMMDD') >= A.DISP_STR_DT 
                    			AND TO_CHAR(SYSDATE, 'YYYYMMDD') <![CDATA[<=]]> A.DISP_END_DT
                                THEN 'ING'
                           WHEN A.DISP_STR_DT > TO_CHAR(SYSDATE, 'YYYYMMDD')
                                THEN 'READY'
                           ELSE 'END'
                      END BRNDHL_STATS
            FROM TB_SA_BRNDHL_INFO A
            WHERE A.CO_CD = #{coCd}
                <if test="useYn != null and !useYn.equals('') ">
                    AND A.USE_YN = #{useYn}
                </if>
                <if test="brndhlNm != null and !brndhlNm.equals('') ">
                    AND A.BRNDHL_NM LIKE '%' || #{brndhlNm} || '%'
                </if>
                <if test="mallSprCd != null and !mallSprCd.equals('') ">
                    AND A.MALL_SPR_CD = #{mallSprCd}
		        </if>
                <if test="fromDate != null and !fromDate.equals('') and toDate != null and !toDate.equals('') ">
                    AND A.REG_DTM >=  TO_DATE(#{fromDate}, 'YYYYMMDD')
                    AND A.REG_DTM - 1 <![CDATA[ < ]]> TO_DATE(#{toDate}, 'YYYYMMDD')
                </if>
                <if test="expsNoticSprCd != null and !expsNoticSprCd.equals('') ">
                    AND A.EXPS_NOTIC_SPR_CD = #{expsNoticSprCd}
                </if>
                <if test="oprUnitId != null and oprUnitId > 0 ">
                    AND EXISTS (
	                                        SELECT 1
	                                        FROM TB_SA_BRNDHL_OPR_UNIT_DTL X
	                                                , TB_OD_ODR_INQ_TGT_DTLS T1
	                                                , TB_OD_ODR_INQ_TGT_DTLS T2
	                                        WHERE A.CO_CD = X.CO_CD
	                                            AND A.BRNDHL_SEQ = X.BRNDHL_SEQ
	                                            AND T1.SES_ID = #{sesId}
	                                            AND T1.INQ_COND_DTLS = #{inqCondDtls}
	                                            AND T1.COL_ITM = 'OPR_UNIT_ID'
	                                            AND T1.COND_DATA_VAL = X.OPR_UNIT_ID
	                                            AND T2.SES_ID = #{sesId}
	                                            AND T2.INQ_COND_DTLS = #{inqCondDtls}
	                                            AND T2.COL_ITM = 'BZPLC_ID'
	                                            AND T2.COND_DATA_VAL = X.BZPLC_ID
                                        )
                </if>
        ) S
        <if test="brndhlStats != null and !brndhlStats.equals('') ">
            WHERE S.BRNDHL_STATS = #{brndhlStats}
        </if>
        <if test="sortColumn != null and sortColumn != ''">
            ORDER BY ${sortColumn} ${sortType}
        </if>
        <if test="sortColumn == null or sortColumn == ''">
            ORDER BY S.USE_YN DESC, S.BRNDHL_STATS DESC, S.EXPS_NOTIC_SPR_CD, NVL(S.DISP_SO, 0), S.REG_DTM DESC
        </if>
        OFFSET #{startNum} ROWS FETCH FIRST #{rowCount} ROWS ONLY
    </select>

    <select id="selectBrndhlListCnt" parameterType="HashMap" resultType="Integer">
        /* 전문관 목록 총 합계 조회 - Brndhl_SQL.com.ssp.bo.sa.brndhl.selectBrndhlListCnt */
        SELECT COUNT(S.BRNDHL_SEQ)
        FROM (            
            SELECT A.CO_CD
                    , A.BRNDHL_SEQ
                    , CASE WHEN TO_CHAR(SYSDATE, 'YYYYMMDD') >= A.DISP_STR_DT 
                    			AND TO_CHAR(SYSDATE, 'YYYYMMDD') <![CDATA[<=]]> A.DISP_END_DT
                                THEN 'ING'
                           WHEN A.DISP_STR_DT > TO_CHAR(SYSDATE, 'YYYYMMDD')
                                THEN 'READY'
                           ELSE 'END'
                      END BRNDHL_STATS
            FROM TB_SA_BRNDHL_INFO A
            WHERE A.CO_CD = #{coCd}
                <if test="useYn != null and !useYn.equals('') ">
                    AND A.USE_YN = #{useYn}
                </if>
                <if test="brndhlNm != null and !brndhlNm.equals('') ">
                    AND A.BRNDHL_NM LIKE '%' || #{brndhlNm} || '%'
                </if>
                <if test="mallSprCd != null and !mallSprCd.equals('') ">
                    AND A.MALL_SPR_CD = #{mallSprCd}
                </if>
                <if test="fromDate != null and !fromDate.equals('') and toDate != null and !toDate.equals('') ">
                    AND A.REG_DTM >=  TO_DATE(#{fromDate}, 'YYYYMMDD')
                    AND A.REG_DTM - 1 <![CDATA[ < ]]> TO_DATE(#{toDate}, 'YYYYMMDD')
                </if>
                <if test="expsNoticSprCd != null and !expsNoticSprCd.equals('') ">
                    AND A.EXPS_NOTIC_SPR_CD = #{expsNoticSprCd}
                </if>
                <if test="oprUnitId != null and oprUnitId > 0 ">
                    AND EXISTS (
                                            SELECT 1
                                            FROM TB_SA_BRNDHL_OPR_UNIT_DTL X
                                                    , TB_OD_ODR_INQ_TGT_DTLS T1
                                                    , TB_OD_ODR_INQ_TGT_DTLS T2
                                            WHERE A.CO_CD = X.CO_CD
                                                AND A.BRNDHL_SEQ = X.BRNDHL_SEQ
                                                AND T1.SES_ID = #{sesId}
                                                AND T1.INQ_COND_DTLS = #{inqCondDtls}
                                                AND T1.COL_ITM = 'OPR_UNIT_ID'
                                                AND T1.COND_DATA_VAL = X.OPR_UNIT_ID
                                                AND T2.SES_ID = #{sesId}
                                                AND T2.INQ_COND_DTLS = #{inqCondDtls}
                                                AND T2.COL_ITM = 'BZPLC_ID'
                                                AND T2.COND_DATA_VAL = X.BZPLC_ID
                                        )
                </if>
        ) S
        <if test="brndhlStats != null and !brndhlStats.equals('') ">
            WHERE S.BRNDHL_STATS = #{brndhlStats}
        </if>
    </select>
    
    <update id="updateBrndhlDispSo" parameterType="HashMap">
        /* 전문관 순서 저장 - Brndhl_SQL.com.ssp.bo.sa.brndhl.updateBrndhlDispSo */
        UPDATE TB_SA_BRNDHL_INFO
        SET DISP_SO = #{dispSo}
            , UPDPSN_ID = #{updpsnId}
            , UPD_DTM = SYSDATE
        WHERE CO_CD = #{coCd}
        AND BRNDHL_SEQ = #{brndhlSeq}
    </update>
    
    <select id="selectBrndhlInfo" parameterType="HashMap" resultType="HashMap">
        /* 전문관 상세 조회 - Brndhl_SQL.com.ssp.bo.sa.brndhl.selectBrndhlInfo */
        SELECT A.CO_CD
                , A.BRNDHL_SEQ
                , A.MALL_SPR_CD
                , A.BRNDHL_NM
                , A.EXPS_NOTIC_SPR_CD
                , A.PC_LST_VIEW_TYPE_CD
                , A.MBL_LST_VIEW_TYPE_CD
                , TO_CHAR(TO_DATE(A.DISP_STR_DT, 'YYYYMMDD'), 'YYYYMMDD') AS DISP_STR_DT
                , TO_CHAR(TO_DATE(A.DISP_END_DT, 'YYYYMMDD'), 'YYYYMMDD') AS DISP_END_DT
                , A.PC_BNR_DOC_REG_ID
                , A.MBL_BNR_DOC_REG_ID
                , A.PC_MNU_DOC_REG_ID
                , A.DISP_SO
                , A.BRNDHL_DESC
                , A.USE_YN
                , A.NOTLOGN_INC_YN		/* SSP-2971 */
                , A.EXPS_YN				/* SSP-3010 */
                , A.REGPSN_ID
                , A.REG_DTM
                , A.UPDPSN_ID
                , A.UPD_DTM
                , B.DOC_REG_SEQ AS PC_BNR_DOC_REG_SEQ
                , B.ATFL_NM AS PC_BNR_ATFL_NM
                , B.ATFL_STOR_PATH AS PC_BNR_ATFL_STOR_PATH
                , B.ORI_ATFL_NM AS PC_BNR_ORI_ATFL_NM
                , C.DOC_REG_SEQ AS MBL_BNR_DOC_REG_SEQ
                , C.ATFL_NM AS MBL_BNR_ATFL_NM
                , C.ATFL_STOR_PATH AS MBL_BNR_ATFL_STOR_PATH
                , C.ORI_ATFL_NM AS MBL_BNR_ORI_ATFL_NM
                , D.DOC_REG_SEQ AS PC_MNU_DOC_REG_SEQ
                , D.ATFL_NM AS PC_MNU_ATFL_NM
                , D.ATFL_STOR_PATH AS PC_MNU_ATFL_STOR_PATH
                , D.ORI_ATFL_NM AS PC_MNU_ORI_ATFL_NM
        FROM TB_SA_BRNDHL_INFO A
            , TB_CO_ATFL_DTLS B
            , TB_CO_ATFL_DTLS C
            , TB_CO_ATFL_DTLS D
        WHERE A.PC_BNR_DOC_REG_ID = B.DOC_REG_ID(+)
        AND A.MBL_BNR_DOC_REG_ID = C.DOC_REG_ID(+)
        AND A.PC_MNU_DOC_REG_ID = D.DOC_REG_ID(+)
        AND A.CO_CD = #{coCd}
        AND BRNDHL_SEQ = #{brndhlSeq}
    </select>

	<select id="selectBrndhlCatgDtlList" parameterType="HashMap" resultType="HashMap">
		/* 전문관 카테고리 상세 - Brndhl_SQL.com.ssp.bo.sa.brndhl.selectBrndhlCatgDtlList */
		SELECT A.CO_CD
		        , A.BRNDHL_SEQ
		     	, A.BRNDHL_CATG_SEQ
		     	, A.CATG_NM
		     	, A.CATG_DISP_SO
		FROM TB_SA_BRNDHL_CATG_DTL A
		WHERE A.CO_CD = #{coCd}
		AND A.BRNDHL_SEQ = #{brndhlSeq}
    </select>

    <select id="selectBrndhlCatgPrdDtlList" parameterType="HashMap" resultType="HashMap">
		/* 전문관 카테고리 상품 상세 - Brndhl_SQL.com.ssp.bo.sa.brndhl.selectBrndhlCatgPrdDtlList */
		WITH TEMP_PRD_ID_INFO AS
		(
		    SELECT /*+ USE_NL(PRD MROPRD) INDEX(PRD TB_PR_PRD_INFO_PK) */
		           PRD.CO_CD
		         , PRD.PRD_ID
		         , TO_NUMBER(PRD.PRD_ID) PRD_ID_VIEW
		         , PRD.PRD_NM
		         , SSP_APP.FN_PR_ATTR_VAL_LIST(PRD.CO_CD, PRD.PRD_ID) ATTR_VAL
		         , MNFR.MNFR_NO
		         , MNFR.MNFR_NM
		         , FN_COM_DTL_CDNM_NVL('KO', 'MALL_SPR_CD', PRD.MALL_SPR_CD, '') AS MALL_SPR_CD_NM
		         , PRD.MALL_SPR_CD
		         , PRD.PRD_CLCD
		         , SSP_APP.FN_PR_FULL_CLSF_NM(PRD.CO_CD, PRD.PRD_CLCD) FULL_PRD_CLSF_NM
		         , PPCI.PRD_CLSF_NM
		         , PRD.PRD_USE_YN
		         , FN_COM_DTL_CDNM('KO', 'DISP_STATS_CD', DPDSI.DISP_STATS_CD) AS DISP_STATS_NM
		         , FN_COM_DTL_CDNM('KO','PUB_ONLY_SPR_CD', MROPRD.PUB_ONLY_SPR_CD) AS PUB_ONLY_SPR_NM
		         , FN_COM_DTL_CDNM('KO','REPR_PRD_SPR_CD', DECODE(RPMD.REPR_PRD_SPR_YN, 'Y', RPMD.REPR_PRD_SPR_RSN_CD, '3')) AS REPR_PRD_SPR_NM
		      FROM SSP_APP.TB_PR_PRD_INFO PRD                   -- 상품기본정보
		     INNER JOIN SSP_APP.TB_PR_MRO_PRD_INFO MROPRD       -- MRO상품기본정보
		        ON PRD.CO_CD = MROPRD.CO_CD 
		       AND PRD.PRD_ID = MROPRD.PRD_ID		        
		     INNER JOIN SSP_APP.TB_PR_MNFR_INFO MNFR            -- 제조원
		        ON MNFR.CO_CD = MROPRD.CO_CD 
		       AND MNFR.MNFR_NO = MROPRD.MNFR_NO		       
		      LEFT JOIN TB_PR_PRD_CLSF_INFO PPCI                -- 카테고리 정보
		        ON (PRD.CO_CD = PPCI.CO_CD 
		       AND PRD.PRD_CLCD = PPCI.PRD_CLCD 
		       AND NVL(PPCI.USE_YN, '') = 'Y' 
		       AND NVL(PPCI.FRT_EXPS_YN, 'Y') = 'Y' 
		       AND NVL(PPCI.DEL_YN, 'N') = 'N')		       
		      LEFT JOIN TB_DP_PRD_DISP_STATS_INFO DPDSI         -- 진열마스터
		        ON (PRD.CO_CD = DPDSI.CO_CD 
		       AND PRD.PRD_ID = DPDSI.PRD_ID 
		       AND DPDSI.PUB_ONLY_SPR_CD = 'P'
		       AND DPDSI.BZPLC_ID = '*' 
		       AND DPDSI.OPR_UNIT_ID = '*'
		       )		       
		      LEFT JOIN TB_PR_REPR_PRD_MNG_DTL RPMD             --대표상품
		        ON (PRD.CO_CD = RPMD.CO_CD 
		       AND PRD.PRD_ID = RPMD.PRD_ID
		       AND RPMD.SSP_PRD_YN = 'Y')
		     WHERE PRD.CO_CD = #{coCd}
		       AND PRD.PRD_USE_YN = 'Y'
		       AND MROPRD.MRO_PRD_STATS_CD = '00'
		     <if test="mallSprCd != null and !mallSprCd.equals('') ">
		     	AND PRD.MALL_SPR_CD = #{mallSprCd}
		     </if>
		)		
		SELECT A.CO_CD
			    , A.BRNDHL_SEQ
			    , A.BRNDHL_CATG_SEQ
			    , A.PRD_ID
			    , TO_NUMBER(A.PRD_ID) AS PRD_ID_VIEW		     
			    , B.PRD_NM
			    , B.ATTR_VAL
			    , B.MNFR_NM AS MNFR
	  	        , B.PUB_ONLY_SPR_NM
		        , B.REPR_PRD_SPR_NM
			    , B.PRD_USE_YN
			    , CASE WHEN B.PRD_USE_YN = 'Y' THEN '사용'
			           WHEN B.PRD_USE_YN = 'N' THEN '미사용'
			           ELSE '미사용'
			      END PRD_USE_YN_NM
			    , B.DISP_STATS_NM
			    , '' AS DELETE_ROW
		FROM TB_SA_BRNDHL_CATG_PRD_DTL A
		     , TEMP_PRD_ID_INFO B
		WHERE A.CO_CD = B.CO_CD(+) 
	    AND A.PRD_ID = B.PRD_ID(+)
	    AND A.CO_CD = #{coCd}
	    AND A.BRNDHL_SEQ = #{brndhlSeq}
	    <if test="brndhlCatgSeq != null and brndhlCatgSeq != '' ">
	    	AND A.BRNDHL_CATG_SEQ = #{brndhlCatgSeq}
        </if>
    </select>
    
    <select id="selectBrndhlOprUnitList" parameterType="HashMap" resultType="HashMap">
        /* 전문관 운영단위 리스트 조회 - Brndhl_SQL.com.ssp.bo.sa.brndhl.selectBrndhlOprUnitList */
        SELECT A.CO_CD
                , A.BRNDHL_SEQ
                , A.BZPLC_ID
                , A.OPR_UNIT_ID
                , B.OPR_UNIT_NM
        FROM TB_SA_BRNDHL_OPR_UNIT_DTL A
            , TB_CC_OPR_UNIT_BASIS B
        WHERE A.CO_CD = B.CO_CD
        AND A.BZPLC_ID = B.BZPLC_ID
        AND A.OPR_UNIT_ID = B.OPR_UNIT_ID
        AND A.CO_CD = #{coCd}
        AND A.BRNDHL_SEQ = #{brndhlSeq}
    </select>

    <select id="selectBrndhlSeq" parameterType="HashMap" resultType="String">
        /* 전문관 시퀀스 값 조회 - Brndhl_SQL.com.ssp.bo.sa.brndhl.selectBrndhlSeq */
        SELECT SQ_SA_BRNDHL_INFO_01.NEXTVAL
        FROM DUAL
    </select>
    
    <insert id="insertBrndhlDtl" parameterType="HashMap">
        /* 전문관 등록 - Brndhl_SQL.com.ssp.bo.sa.brndhl.insertBrndhlDtl */
        INSERT INTO TB_SA_BRNDHL_INFO
        	( CO_CD
            , BRNDHL_SEQ
            , MALL_SPR_CD
            , EXPS_NOTIC_SPR_CD
            , PC_LST_VIEW_TYPE_CD
            , MBL_LST_VIEW_TYPE_CD
            , BRNDHL_NM
            , DISP_STR_DT
            , DISP_END_DT
            , PC_BNR_DOC_REG_ID
            , MBL_BNR_DOC_REG_ID
            , PC_MNU_DOC_REG_ID
            , BRNDHL_DESC
            , DISP_SO
            , USE_YN
            , NOTLOGN_INC_YN		/* SSP-2971 */
            , EXPS_YN				/* SSP-3010 */
            , REGPSN_ID
            , REG_DTM
            , UPDPSN_ID
            , UPD_DTM
        	) 
        VALUES 
        	( #{coCd}
            , #{brndhlSeq}
            , #{mallSprCd}
            , #{expsNoticSprCd}
            , #{pcLstViewTypeCd}
            , #{mblLstViewTypeCd}
            , #{brndhlNm}
            , TO_CHAR(TO_DATE(#{dispStrDt}, 'YYYYMMDD'), 'YYYYMMDD')
            , TO_CHAR(TO_DATE(#{dispEndDt}, 'YYYYMMDD'), 'YYYYMMDD')
            , #{pcBnrDocRegId}
            , #{mblBnrDocRegId}
            , #{pcMnuDocRegId}
            , #{brndhlDesc}
            , (SELECT MAX(DISP_SO) + 1 FROM TB_SA_BRNDHL_INFO)
            , #{useYn}
            , #{notlognIncYn}		/* SSP-2971 */
            , #{expsYn}				/* SSP-3010 */
            , #{regpsnId}
            , SYSDATE
            , #{updpsnId}
            , SYSDATE
        	)
    </insert>

    <update id="updateBrndhlDtl" parameterType="HashMap">
        /* 전문관 수정 - Brndhl_SQL.com.ssp.bo.sa.brndhl.updateBrndhlDtl */
        UPDATE TB_SA_BRNDHL_INFO
            SET MALL_SPR_CD = #{mallSprCd}
                , EXPS_NOTIC_SPR_CD = #{expsNoticSprCd}
                , PC_LST_VIEW_TYPE_CD = #{pcLstViewTypeCd}
                , MBL_LST_VIEW_TYPE_CD = #{mblLstViewTypeCd}
                , BRNDHL_NM = #{brndhlNm}
                , DISP_STR_DT = TO_CHAR(TO_DATE(#{dispStrDt}, 'YYYYMMDD'), 'YYYYMMDD')
                , DISP_END_DT = TO_CHAR(TO_DATE(#{dispEndDt}, 'YYYYMMDD'), 'YYYYMMDD')
                , PC_BNR_DOC_REG_ID = #{pcBnrDocRegId}
                , MBL_BNR_DOC_REG_ID = #{mblBnrDocRegId}
                , PC_MNU_DOC_REG_ID = #{pcMnuDocRegId}
                , BRNDHL_DESC = #{brndhlDesc}
                , USE_YN = #{useYn}
                , NOTLOGN_INC_YN = #{notlognIncYn}		/* SSP-2971 */
                , EXPS_YN = #{expsYn}					/* SSP-3010 */
                , UPDPSN_ID = #{updpsnId}
                , UPD_DTM = SYSDATE
        WHERE CO_CD = #{coCd}
        AND BRNDHL_SEQ = #{brndhlSeq}
    </update>

    <insert id="insertBrndhlOprUnit" parameterType="HashMap">
        /* 전문관 운영단위 등록 - Brndhl_SQL.com.ssp.bo.sa.brndhl.insertBrndhlOprUnit */
        INSERT INTO TB_SA_BRNDHL_OPR_UNIT_DTL
        	( CO_CD
            , BRNDHL_SEQ
            , BZPLC_ID
            , OPR_UNIT_ID
            , REGPSN_ID
            , REG_DTM
            , UPDPSN_ID
            , UPD_DTM
        	) 
        VALUES
        	( #{coCd}
            , #{brndhlSeq}
            , #{bzplcId}
            , #{oprUnitId}
            , #{regpsnId}
            , SYSDATE
            , #{updpsnId}
            , SYSDATE
        	)
    </insert>

    <delete id="deleteBrndhlInfo" parameterType="HashMap">
        /* 전문관 삭제 - Brndhl_SQL.com.ssp.bo.sa.brndhl.deleteBrndhlInfo */
        DELETE 
        FROM TB_SA_BRNDHL_INFO
        WHERE CO_CD = #{coCd}
        AND BRNDHL_SEQ = #{brndhlSeq}
    </delete>
    
    <delete id="deleteBrndhlOprUnit" parameterType="HashMap">
        /* 전문관 운영단위 삭제 - Brndhl_SQL.com.ssp.bo.sa.brndhl.deleteBrndhlOprUnit */
        DELETE 
        FROM TB_SA_BRNDHL_OPR_UNIT_DTL
        WHERE CO_CD = #{coCd}
        AND BRNDHL_SEQ = #{brndhlSeq}
        <if test="bzplcId != null and !bzplcId.equals('') and oprUnitId != null and !oprUnitId.equals('') ">
            AND BZPLC_ID = #{bzplcId}
            AND OPR_UNIT_ID = #{oprUnitId}
        </if>
    </delete>

    <delete id="deleteBrndhlCatgDtl" parameterType="hashMap">
		/* 전문관 기본 상품 카테고리 정보 삭제 - Brndhl_SQL.com.ssp.bo.sa.brndhl.deleteBrndhlCatgDtl */
		DELETE 
		FROM TB_SA_BRNDHL_CATG_DTL
		WHERE CO_CD = #{coCd}
		AND BRNDHL_SEQ = #{brndhlSeq}
        <if test="brndhlCatgSeq != null and !brndhlCatgSeq.equals('') ">
        	AND BRNDHL_CATG_SEQ = #{brndhlCatgSeq}
        </if>
    </delete>

    <select id="selectBrndhlCatgDtlSeq" parameterType="HashMap" resultType="String">
		/* 전문관 카테고리 시퀀스 값 조회 - Brndhl_SQL.com.ssp.bo.sa.brndhl_SQL.selectBrndhlCatgDtlSeq */
		SELECT SQ_SA_BRNDHL_CATG_DTL_01.NEXTVAL
		FROM DUAL
    </select>

    <insert id="insertBrndhlCatgDtl" parameterType="HashMap">
	    /* 전문관 카테고리 정보 등록 - Brndhl_SQL.com.ssp.bo.sa.brndhl.insertBrndhlCatgDtl */
	    INSERT INTO TB_SA_BRNDHL_CATG_DTL
	        ( CO_CD
			, BRNDHL_SEQ
			, BRNDHL_CATG_SEQ
			, CATG_NM
			, CATG_DISP_SO
			, REGPSN_ID
			, REG_DTM
			, UPDPSN_ID
			, UPD_DTM
	     	) 
	    VALUES
		    ( #{coCd}
		    , #{brndhlSeq}
		    , #{brndhlCatgSeq}
		    , #{catgNm}
		    , #{catgDispSo}
		    , #{regpsnId}
		    , SYSDATE
		    , #{updpsnId}
		    , SYSDATE
		    )
    </insert>

    <update id="updateBrndhlCatgDtl" parameterType="hashMap">
		/* 전문관 카테고리 정보 수정 - Brndhl_SQL.com.ssp.bo.sa.brndhl.updateBrndhlCatgDtl */
		UPDATE TB_SA_BRNDHL_CATG_DTL
		SET CATG_NM = #{catgNm}
		    , CATG_DISP_SO = #{catgDispSo}
		    , UPDPSN_ID = #{updpsnId}
		    , UPD_DTM = SYSDATE
		WHERE CO_CD = #{coCd}
	    AND BRNDHL_SEQ = #{brndhlSeq}
	    AND BRNDHL_CATG_SEQ = #{brndhlCatgSeq}
    </update>

    <delete id="deleteBrndhlCatgPrdDtl" parameterType="hashMap">
		/* 전문관 카테고리 상품 정보 삭제 - Brndhl_SQL.com.ssp.bo.sa.brndhl.deleteBrndhlCatgPrdDtl */
		DELETE 
		FROM TB_SA_BRNDHL_CATG_PRD_DTL
        WHERE CO_CD = #{coCd}
        AND BRNDHL_SEQ = #{brndhlSeq}
        <if test="brndhlCatgSeq != null and !brndhlCatgSeq.equals('') ">
        	AND BRNDHL_CATG_SEQ = #{brndhlCatgSeq}
	        <if test="prdId != null and !prdId.equals('') ">
	        	AND PRD_ID = #{prdId}
	        </if>
		</if>
    </delete>

    <insert id="insertBrndhlCatgPrdDtl" parameterType="HashMap">
		/* 전문관 카테고리 상품 정보 등록 - Brndhl_SQL.com.ssp.bo.sa.brndhl.insertBrndhlCatgPrdDtl */
		INSERT INTO TB_SA_BRNDHL_CATG_PRD_DTL
		     ( CO_CD
		     , BRNDHL_SEQ
		     , BRNDHL_CATG_SEQ
		     , PRD_ID
		     , REGPSN_ID
		     , REG_DTM
		     , UPDPSN_ID
		     , UPD_DTM
		     )
		VALUES
		     ( #{coCd}
		     , #{brndhlSeq}
		     , #{brndhlCatgSeq}
		     , #{prdId}
		     , #{regpsnId}
		     , SYSDATE
		     , #{updpsnId}
		     , SYSDATE
		     )
    </insert>
    
    <select id="selectExcelBrndhlList" parameterType="HashMap" resultType="HashMap">
        /* 전문관 엑셀 다운로드 - Brndhl_SQL.com.ssp.bo.sa.brndhl.selectExcelBrndhlList */
        SELECT A.CO_CD
                , A.BRNDHL_SEQ
		        , A.MALL_SPR_CD
		        , FN_COM_DTL_CDNM('KO','MALL_SPR_CD', A.MALL_SPR_CD) AS MALL_SPR_CD_NM
		        , A.EXPS_NOTIC_SPR_CD
		        , FN_COM_DTL_CDNM('KO','EXPS_NOTIC_SPR_CD', A.EXPS_NOTIC_SPR_CD) AS EXPS_NOTIC_SPR_CD_NM
		        , A.PC_LST_VIEW_TYPE_CD
                , A.MBL_LST_VIEW_TYPE_CD
		        , A.BRNDHL_NM
		        , A.DISP_STR_DT
		        , A.DISP_END_DT
		        , A.DISP_SO 
		        , DECODE(A.USE_YN, 'Y', '사용', '미사용') AS USE_YN_NM
		        , B.CATG_NM
		        , B.CATG_DISP_SO 
		        , C.PRD_ID
		        , LTRIM(C.PRD_ID, '0') AS PRD_ID_VIEW   
		        , D.PRD_NM
		        , FN_PR_ATTR_VAL_LIST(D.CO_CD, D.PRD_ID) AS ATTR_VAL
		        , FN_COM_DTL_CDNM('KO','PUB_ONLY_SPR_CD', E.PUB_ONLY_SPR_CD) AS PUB_ONLY_SPR_NM
		        , FN_COM_DTL_CDNM('KO','REPR_PRD_SPR_CD', DECODE(F.REPR_PRD_SPR_YN, 'Y', F.REPR_PRD_SPR_RSN_CD, '3')) AS REPR_PRD_SPR_NM
		        , DECODE(D.PRD_USE_YN, 'Y', '사용', '미사용') AS PRD_USE_YN_NM
		        , FN_COM_DTL_CDNM('KO','DISP_STATS_CD', G.DISP_STATS_CD) AS DISP_STATS_NM
	    FROM TB_SA_BRNDHL_INFO A
		        , TB_SA_BRNDHL_CATG_DTL B
		        , TB_SA_BRNDHL_CATG_PRD_DTL C
		        , TB_PR_PRD_INFO D
		        , TB_PR_MRO_PRD_INFO E
		        , TB_PR_REPR_PRD_MNG_DTL F
		        , TB_DP_PRD_DISP_STATS_INFO G
	    WHERE A.CO_CD = B.CO_CD 
	    AND A.BRNDHL_SEQ = B.BRNDHL_SEQ 
	    AND B.CO_CD = C.CO_CD 
	    AND B.BRNDHL_SEQ = C.BRNDHL_SEQ 
	    AND B.BRNDHL_CATG_SEQ = C.BRNDHL_CATG_SEQ 
	    AND C.CO_CD = D.CO_CD(+)
	    AND C.PRD_ID = D.PRD_ID(+)
	    AND D.CO_CD = E.CO_CD(+)
	    AND D.PRD_ID = E.PRD_ID(+)
	    AND C.CO_CD = F.CO_CD(+)
	    AND C.PRD_ID = F.PRD_ID(+)
	    AND F.SSP_PRD_YN(+) = 'Y'
	    AND D.CO_CD = G.CO_CD(+)
	    AND D.PRD_ID = G.PRD_ID(+)  
	    AND G.PUB_ONLY_SPR_CD(+) = 'P'
	    AND G.BZPLC_ID(+) = '*' 
	    AND G.OPR_UNIT_ID(+) = '*'
		ORDER BY A.USE_YN DESC, A.DISP_SO, A.BRNDHL_SEQ, B.CATG_DISP_SO, B.BRNDHL_CATG_SEQ
    </select>
    
</mapper>