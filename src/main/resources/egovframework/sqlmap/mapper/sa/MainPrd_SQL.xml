<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="MainPrd">

<!--
	******************************************************************************
	* SELECT : 메인상품
	* 작성자 : 87minho
	* 작성 일자 : 2022-03-02
	******************************************************************************
	-->
	<select id="selectMainPrdList" parameterType="HashMap" resultType="HashMap">
		/* 메인상품 목록 조회 - MainPrd_SQL.selectMainPrdList */
		SELECT S.MAIN_PRD_LVL
				, S.CO_CD
				, S.CHN_TP_CD
				, S.MALL_SPR_CD
				, S.MAIN_PRD_EXPS_PST_ID
				, S.MAIN_PRD_EXPS_PST_NM
				, S.HRNK_MAIN_PRD_EXPS_PST_ID
				, S.SRT_SO
				, S.DOC_REG_ID
				, S.URL_CNSOL_SPR_CD
				, S.URL_ADDR
				, S.PRD_CLCD
				, S.AUTO_MNL_SPR_CD
				, S.AUTO_LOGIC_TGT_CD
				, S.SLAMT_WGT
				, S.ODR_CNT_WGT
				, S.INVN_PRD_WGT
				, S.CATG_DEL_YN
				, K.ATFL_NM
				, K.ATFL_STOR_PATH
				, K.ORI_ATFL_NM
				, K.DOC_REG_SEQ
		FROM (
			SELECT 1 AS MAIN_PRD_LVL, #{coCd} AS CO_CD, #{chnTpCd} AS CHN_TP_CD,  COM_DTL_CD AS MALL_SPR_CD, TO_NUMBER(COM_DTL_CD) AS MAIN_PRD_EXPS_PST_ID
						, COM_DTL_CD_NM AS MAIN_PRD_EXPS_PST_NM, NULL AS HRNK_MAIN_PRD_EXPS_PST_ID, SRT_SO
						, NULL AS DOC_REG_ID, NULL AS URL_CNSOL_SPR_CD, NULL AS URL_ADDR, NULL AS PRD_CLCD, NULL AS AUTO_MNL_SPR_CD, NULL AS AUTO_LOGIC_TGT_CD
						, NULL AS SLAMT_WGT, NULL AS ODR_CNT_WGT, NULL AS INVN_PRD_WGT, 'N' AS CATG_DEL_YN
			FROM TB_CO_COM_CD_DTL
			WHERE COM_CLSF_CD = 'MALL_SPR_CD'
			UNION ALL
			SELECT 2 AS MAIN_PRD_LVL, CO_CD, CHN_TP_CD, MALL_SPR_CD, MAIN_PRD_EXPS_PST_ID, MAIN_PRD_EXPS_PST_NM, HRNK_MAIN_PRD_EXPS_PST_ID, SRT_SO
						, DOC_REG_ID, URL_CNSOL_SPR_CD, URL_ADDR, PRD_CLCD, AUTO_MNL_SPR_CD, AUTO_LOGIC_TGT_CD, SLAMT_WGT, ODR_CNT_WGT, INVN_PRD_WGT
						, 'N' AS CATG_DEL_YN
			FROM TB_SA_MAIN_PRD_INFO
			WHERE CHN_TP_CD = #{chnTpCd}
			AND HRNK_MAIN_PRD_EXPS_PST_ID <![CDATA[<>]]> #{mainPrdCatgBestId}
			UNION ALL
			SELECT MAIN_PRD_LVL, CO_CD, CHN_TP_CD, MALL_SPR_CD, MAIN_PRD_EXPS_PST_ID, MAIN_PRD_EXPS_PST_NM,  HRNK_MAIN_PRD_EXPS_PST_ID, SRT_SO
						, DOC_REG_ID, URL_CNSOL_SPR_CD, URL_ADDR, PRD_CLCD, AUTO_MNL_SPR_CD, AUTO_LOGIC_TGT_CD, SLAMT_WGT, ODR_CNT_WGT, INVN_PRD_WGT
						, CATG_DEL_YN
			FROM (
				SELECT 3 AS MAIN_PRD_LVL, CO_CD, NVL(CHN_TP_CD , #{chnTpCd}) AS CHN_TP_CD, MALL_SPR_CD, NVL(MAIN_PRD_EXPS_PST_ID, 0) AS MAIN_PRD_EXPS_PST_ID
						, MAIN_PRD_EXPS_PST_NM, 20000 AS HRNK_MAIN_PRD_EXPS_PST_ID, NVL(SRT_SO, 99999) AS SRT_SO
						, DOC_REG_ID, URL_CNSOL_SPR_CD, URL_ADDR, PRD_CLCD, AUTO_MNL_SPR_CD, AUTO_LOGIC_TGT_CD
						, SLAMT_WGT, ODR_CNT_WGT, INVN_PRD_WGT
						, 'N' AS CATG_DEL_YN
						, 'Y' AS USE_YN
				FROM TB_SA_MAIN_PRD_INFO
				WHERE CO_CD = #{coCd}
				AND CHN_TP_CD = #{chnTpCd}
				AND (MAIN_PRD_EXPS_PST_ID = '20001' OR MAIN_PRD_EXPS_PST_ID = '20002')
				UNION ALL
				SELECT 3 AS MAIN_PRD_LVL, A.CO_CD, NVL(B.CHN_TP_CD , #{chnTpCd}) AS CHN_TP_CD, A.MALL_SPR_CD, NVL(B.MAIN_PRD_EXPS_PST_ID, 0) AS MAIN_PRD_EXPS_PST_ID
							, PRD_CLSF_NM AS MAIN_PRD_EXPS_PST_NM,  #{mainPrdCatgBestId} AS HRNK_MAIN_PRD_EXPS_PST_ID, NVL(A.SRT_SO, 99999) AS SRT_SO
							, B.DOC_REG_ID, B.URL_CNSOL_SPR_CD, B.URL_ADDR, NVL(B.PRD_CLCD, A.PRD_CLCD) AS PRD_CLCD, B.AUTO_MNL_SPR_CD, B.AUTO_LOGIC_TGT_CD
							, B.SLAMT_WGT, B.ODR_CNT_WGT, B.INVN_PRD_WGT
							, CASE WHEN B.HRNK_MAIN_PRD_EXPS_PST_ID IS NOT NULL AND A.PRD_CLCD IS NOT NULL AND (A.USE_YN = 'N' OR A.DEL_YN = 'Y') THEN 'Y'
										ELSE 'N' END AS CATG_DEL_YN
							, A.USE_YN
				FROM TB_PR_PRD_CLSF_INFO A
					, (
							SELECT CO_CD, CHN_TP_CD, MALL_SPR_CD, MAIN_PRD_EXPS_PST_ID, MAIN_PRD_EXPS_PST_NM, HRNK_MAIN_PRD_EXPS_PST_ID, SRT_SO, DOC_REG_ID
									, URL_CNSOL_SPR_CD, URL_ADDR, PRD_CLCD, AUTO_MNL_SPR_CD, AUTO_LOGIC_TGT_CD, SLAMT_WGT, ODR_CNT_WGT, INVN_PRD_WGT
							FROM TB_SA_MAIN_PRD_INFO
							WHERE CO_CD = #{coCd}
								AND CHN_TP_CD = #{chnTpCd}
								AND HRNK_MAIN_PRD_EXPS_PST_ID =  #{mainPrdCatgBestId}
					) B
				WHERE A.CO_CD = B.CO_CD(+)
				AND A.PRD_CLCD =B.PRD_CLCD(+)
				AND A.CO_CD = #{coCd}
				AND A.MALL_SPR_CD = '10'
				AND A.HIER_LVL = 1
			)
			WHERE USE_YN = 'Y' OR MAIN_PRD_EXPS_PST_ID <![CDATA[<>]]> 0
		) S
		, TB_CO_ATFL_DTLS K
		WHERE S.DOC_REG_ID = K.DOC_REG_ID(+)
		START WITH S.HRNK_MAIN_PRD_EXPS_PST_ID IS NULL
		CONNECT BY PRIOR S.MAIN_PRD_EXPS_PST_ID = S.HRNK_MAIN_PRD_EXPS_PST_ID
		ORDER SIBLINGS BY S.SRT_SO
	</select>

	<select id="selectMainPrdDtlListCnt" parameterType="HashMap" resultType="Integer">
		/* 메인상품 상세 목록 총 합계 조회 - MainPrd_SQL.selectMainPrdDtlListCnt */
		SELECT COUNT(1)
		FROM TB_SA_MAIN_PRD_INFO A
		INNER JOIN TB_SA_MAIN_PRD_DTL B
		ON (A.CO_CD = B.CO_CD
				AND A.MAIN_PRD_EXPS_PST_ID = B.MAIN_PRD_EXPS_PST_ID
				AND A.CHN_TP_CD = B.CHN_TP_CD
				AND A.MALL_SPR_CD = B.MALL_SPR_CD)
		LEFT JOIN TB_CC_OPR_UNIT_BASIS C
		ON (B.CO_CD = C.CO_CD
				AND B.BZPLC_ID = C.BZPLC_ID
				AND B.OPR_UNIT_ID = C.OPR_UNIT_ID)
		LEFT JOIN TB_PR_PRD_INFO SPRD
		ON (B.CO_CD = SPRD.CO_CD
				AND B.PRD_ID = SPRD.PRD_ID)
		LEFT JOIN TB_PR_MRO_PRD_INFO MPRD    -- MRO 상품마스터
		ON(SPRD.CO_CD = MPRD.CO_CD
				AND SPRD.PRD_ID = MPRD.PRD_ID)
		LEFT JOIN TB_DP_PRD_DISP_STATS_INFO DPDSI  -- 진열마스터
		ON (
			B.CO_CD = DPDSI.CO_CD AND B.PRD_ID = DPDSI.PRD_ID
			AND (
						(
							MPRD.PUB_ONLY_SPR_CD = 'P' --공용
						AND DPDSI.BZPLC_ID = '*'
						AND DPDSI.OPR_UNIT_ID = '*'
						)
						OR
						(
							MPRD.PUB_ONLY_SPR_CD = 'E' --전용
						AND DPDSI.BZPLC_ID = B.BZPLC_ID
						AND DPDSI.OPR_UNIT_ID = B.OPR_UNIT_ID
						)
				)
			)
		<if test="oprUnitList != null and oprUnitList.size > 0 ">
			INNER JOIN
			TB_OD_ODR_INQ_TGT_DTLS T1
			ON  T1.SES_ID = #{sesId}
			AND T1.INQ_COND_DTLS = #{inqCondDtls}
			AND T1.COL_ITM = 'OPR_UNIT_ID'
			AND T1.COND_DATA_VAL = B.OPR_UNIT_ID
			INNER JOIN
			TB_OD_ODR_INQ_TGT_DTLS T2
			ON  T2.SES_ID = #{sesId}
			AND T2.INQ_COND_DTLS = #{inqCondDtls}
			AND T2.COL_ITM = 'BZPLC_ID'
			AND T2.COND_DATA_VAL = B.BZPLC_ID
		</if>
		WHERE A.CO_CD = #{coCd}
			AND B.MAIN_PRD_EXPS_PST_ID = #{mainPrdExpsPstId}
			AND A.CHN_TP_CD = #{chnTpCd}
			AND A.MALL_SPR_CD = #{mallSprCd}
			<if test="expsNoticSprCd != null and !expsNoticSprCd.equals('') ">
				AND B.EXPS_NOTIC_SPR_CD = #{expsNoticSprCd}
			</if>
	</select>

	<select id="selectMainPrdDtlList" parameterType="HashMap" resultType="HashMap">
		/* 메인상품 상세 목록 조회 - MainPrd_SQL.selectMainPrdDtlList */
		SELECT A.MAIN_PRD_EXPS_PST_NM
				, B.CO_CD
				, B.MAIN_PRD_DTL_SEQ
				, B.MAIN_PRD_EXPS_PST_ID
				, B.CHN_TP_CD
				, B.MALL_SPR_CD
				, B.PRD_ID
				, TO_NUMBER(B.PRD_ID) AS PRD_ID_VIEW
				, SPRD.PRD_NM
				, SPRD.PRD_USE_YN
				, DPDSI.DISP_STATS_CD
				, FN_COM_DTL_CDNM('KO', 'DISP_STATS_CD', DPDSI.DISP_STATS_CD) AS DISP_STATS_NM
				, FN_COM_DTL_CDNM('KO','PUB_ONLY_SPR_CD', MPRD.PUB_ONLY_SPR_CD) AS PUB_ONLY_SPR_NM
				, FN_COM_DTL_CDNM('KO','REPR_PRD_SPR_CD', DECODE(PRPMD.REPR_PRD_SPR_YN, 'Y', PRPMD.REPR_PRD_SPR_RSN_CD, '3')) AS REPR_PRD_SPR_NM
				, B.BZPLC_ID
				, B.OPR_UNIT_ID
				, C.OPR_UNIT_NM
				, B.EXPS_NOTIC_SPR_CD
				, D.COM_DTL_CD_NM AS EXPS_NOTIC_SPR_CD_NM
				, B.DISP_SO
				, TO_CHAR(TO_DATE(B.PRD_REG_DT, 'YYYYMMDD'), 'YYYY-MM-DD') AS PRD_REG_DT
				, B.REGPSN_ID
				, B.REG_DTM
				, B.UPDPSN_ID
				, B.UPD_DTM
				, 0 AS COL_CHK
				, DECODE(B.DISP_SO, NULL, NULL, ROW_NUMBER() OVER(PARTITION BY B.EXPS_NOTIC_SPR_CD, B.BZPLC_ID, B.OPR_UNIT_ID ORDER BY B.DISP_SO)) AS SORT_NO
		FROM TB_SA_MAIN_PRD_INFO A
		INNER JOIN TB_SA_MAIN_PRD_DTL B
		ON (A.CO_CD = B.CO_CD
				AND A.MAIN_PRD_EXPS_PST_ID = B.MAIN_PRD_EXPS_PST_ID
				AND A.CHN_TP_CD = B.CHN_TP_CD
				AND A.MALL_SPR_CD = B.MALL_SPR_CD)
		LEFT JOIN TB_CC_OPR_UNIT_BASIS C
		ON (B.CO_CD = C.CO_CD
				AND B.BZPLC_ID = C.BZPLC_ID
				AND B.OPR_UNIT_ID = C.OPR_UNIT_ID)
		INNER JOIN TB_CO_COM_CD_DTL D
		ON (D.COM_DTL_CD = B.EXPS_NOTIC_SPR_CD 	
		        AND D.LANG_CD = 'KO'
		        AND D.COM_CLSF_CD =  'EXPS_NOTIC_SPR_CD'
		        AND D.USE_YN = 'Y')
		LEFT JOIN TB_PR_PRD_INFO SPRD
		ON (B.CO_CD = SPRD.CO_CD
				AND B.PRD_ID = SPRD.PRD_ID)
		LEFT JOIN TB_PR_MRO_PRD_INFO MPRD    -- MRO 상품마스터
		ON(SPRD.CO_CD = MPRD.CO_CD
				AND SPRD.PRD_ID = MPRD.PRD_ID)
		LEFT JOIN TB_DP_PRD_DISP_STATS_INFO DPDSI  -- 진열마스터
		ON (
			B.CO_CD = DPDSI.CO_CD AND B.PRD_ID = DPDSI.PRD_ID
			AND (
						(
							MPRD.PUB_ONLY_SPR_CD = 'P' --공용
						AND DPDSI.BZPLC_ID = '*'
						AND DPDSI.OPR_UNIT_ID = '*'
						)
						OR
						(
							MPRD.PUB_ONLY_SPR_CD = 'E' --전용
						AND DPDSI.BZPLC_ID = B.BZPLC_ID
						AND DPDSI.OPR_UNIT_ID = B.OPR_UNIT_ID
						)
				)
			)
		LEFT JOIN TB_PR_REPR_PRD_MNG_DTL PRPMD  --대표상품
        ON (B.CO_CD = PRPMD.CO_CD AND B.PRD_ID = PRPMD.PRD_ID AND PRPMD.SSP_PRD_YN = 'Y')
		<if test="oprUnitList != null and oprUnitList.size > 0 ">
			INNER JOIN
			TB_OD_ODR_INQ_TGT_DTLS T1
			ON  T1.SES_ID = #{sesId}
			AND T1.INQ_COND_DTLS = #{inqCondDtls}
			AND T1.COL_ITM = 'OPR_UNIT_ID'
			AND T1.COND_DATA_VAL = B.OPR_UNIT_ID
			INNER JOIN
			TB_OD_ODR_INQ_TGT_DTLS T2
			ON  T2.SES_ID = #{sesId}
			AND T2.INQ_COND_DTLS = #{inqCondDtls}
			AND T2.COL_ITM = 'BZPLC_ID'
			AND T2.COND_DATA_VAL = B.BZPLC_ID
		</if>
		WHERE A.CO_CD = #{coCd}
			AND B.MAIN_PRD_EXPS_PST_ID = #{mainPrdExpsPstId}
			AND A.CHN_TP_CD = #{chnTpCd}
			AND A.MALL_SPR_CD = #{mallSprCd}
			<if test="expsNoticSprCd != null and !expsNoticSprCd.equals('') ">
				AND B.EXPS_NOTIC_SPR_CD = #{expsNoticSprCd}
			</if>
		ORDER BY B.EXPS_NOTIC_SPR_CD, B.BZPLC_ID, B.OPR_UNIT_ID, NVL(B.DISP_SO, 0), B.REG_DTM DESC
	</select>

	<select id="selectMainPrdIdDuplCheckList" parameterType="HashMap" resultType="HashMap">
		/* 메인상품 상세 중복 조회 - MainPrd_SQL.selectMainPrdIdDuplCheckList */
		WITH TEMP_PRD_ID_CHECK_LIST AS
		(
			${queryString}
		)
		, TEMP_PRD_ID_INFO AS
		(
		SELECT /*+ USE_NL(PRD MROPRD) INDEX(PRD TB_PR_PRD_INFO_PK) */
						PRD.CO_CD,
						PRD.PRD_ID ,
						TO_NUMBER(PRD.PRD_ID) PRD_ID_VIEW ,
						PRD.PRD_NM,
						SSP_APP.FN_PR_ATTR_VAL_LIST(PRD.CO_CD, PRD.PRD_ID) ATTR_VAL,
						MNFR.MNFR_NO ,
						MNFR.MNFR_NM ,
						PRD.MALL_SPR_CD,
						PRD.PRD_CLCD,
						SSP_APP.FN_PR_FULL_CLSF_NM(PRD.CO_CD, PRD.PRD_CLCD) FULL_PRD_CLSF_NM,
						PPCI.PRD_CLSF_NM
			FROM SSP_APP.TB_PR_PRD_INFO PRD --상품기본정보
			INNER JOIN SSP_APP.TB_PR_MRO_PRD_INFO MROPRD    --MRO상품기본정보
				ON PRD.CO_CD = MROPRD.CO_CD AND PRD.PRD_ID = MROPRD.PRD_ID
			INNER JOIN SSP_APP.TB_PR_MNFR_INFO MNFR --제조원
				ON MNFR.CO_CD = MROPRD.CO_CD AND MNFR.MNFR_NO = MROPRD.MNFR_NO
			LEFT JOIN TB_PR_PRD_CLSF_INFO PPCI     -- 카테고리 정보
				ON( PRD.CO_CD = PPCI.CO_CD AND PRD.PRD_CLCD = PPCI.PRD_CLCD AND NVL(PPCI.USE_YN,'') = 'Y' AND NVL(PPCI.FRT_EXPS_YN,'Y') = 'Y' AND NVL(PPCI.DEL_YN,'N') = 'N')
			WHERE PRD.CO_CD = #{coCd}
			AND PRD_USE_YN = 'Y'
			AND MRO_PRD_STATS_CD = '00'
			<if test="mallSprCd != null and !mallSprCd.equals('') ">
				AND PRD.MALL_SPR_CD = #{mallSprCd}
			</if>
		)
		SELECT LPAD(A.PRD_ID, 18, '0') AS PRD_ID
				, A.PRD_ID_PARAM
				, CASE WHEN FN_RD_NUMBER_YN(A.PRD_ID) = 'Y' THEN TO_NUMBER(A.PRD_ID) || ''
							ELSE A.PRD_ID
					END PRD_ID_VIEW
				, B.MAIN_PRD_DTL_SEQ
				, C.PRD_NM
				, A.EXPS_NOTIC_SPR_CD
				, A.BZPLC_ID
				, A.OPR_UNIT_ID
	FROM TEMP_PRD_ID_CHECK_LIST A
			, TB_SA_MAIN_PRD_DTL B
			, TEMP_PRD_ID_INFO C
	WHERE A.CO_CD = B.CO_CD(+)
	AND A.MAIN_PRD_EXPS_PST_ID = B.MAIN_PRD_EXPS_PST_ID(+)
	AND A.CHN_TP_CD = B.CHN_TP_CD(+)
	AND A.MALL_SPR_CD = B.MALL_SPR_CD(+)
	AND A.EXPS_NOTIC_SPR_CD = B.EXPS_NOTIC_SPR_CD(+)
	AND A.PRD_ID = B.PRD_ID(+)
	AND A.CO_CD = C.CO_CD(+)
	AND A.PRD_ID = C.PRD_ID(+)
	<if test="expsNoticSprCd != null and expsNoticSprCd != '' ">
		AND A.BZPLC_ID = B.BZPLC_ID(+)
		AND A.OPR_UNIT_ID = B.OPR_UNIT_ID(+)
	</if>
	</select>

	<insert id="insertMainPrd" parameterType="HashMap">
		/* 메인상품 등록 - MainPrd_SQL.insertMainPrd */
		<selectKey keyProperty="mainPrdExpsPstId" resultType="Integer" order="BEFORE">
			SELECT NVL(MAX(MAIN_PRD_EXPS_PST_ID), #{hrnkMainPrdExpsPstId}) + 1
			FROM TB_SA_MAIN_PRD_INFO
			WHERE HRNK_MAIN_PRD_EXPS_PST_ID = #{hrnkMainPrdExpsPstId}
		</selectKey>
		INSERT INTO TB_SA_MAIN_PRD_INFO
		(
			CO_CD
			, CHN_TP_CD
			, MALL_SPR_CD
			, MAIN_PRD_EXPS_PST_ID
			, MAIN_PRD_EXPS_PST_NM
			, HRNK_MAIN_PRD_EXPS_PST_ID
			, SRT_SO
			, DOC_REG_ID
			, URL_CNSOL_SPR_CD
			, URL_ADDR
			, PRD_CLCD
			, AUTO_MNL_SPR_CD
			, AUTO_LOGIC_TGT_CD
			, SLAMT_WGT
			, ODR_CNT_WGT
			, INVN_PRD_WGT
			, REGPSN_ID
			, REG_DTM
			, UPDPSN_ID
			, UPD_DTM
		) VALUES(
			#{coCd}
			, #{chnTpCd}
			, #{mallSprCd}
			, #{mainPrdExpsPstId}
			, #{mainPrdExpsPstNm}
			, #{hrnkMainPrdExpsPstId}
			, #{srtSo}
			, #{docRegId}
			, #{urlCnsolSprCd}
			, #{urlAddr}
			, #{prdClcd}
			, #{autoMnlSprCd}
			, #{autoLogicTgtCd}
			, #{slamtWgt}
			, #{odrCntWgt}
			, #{invnPrdWgt}
			, #{regpsnId}
			, SYSDATE
			, #{updpsnId}
			, SYSDATE
		)
	</insert>

	<update id="updateMainPrd" parameterType="HashMap">
		/* 메인상품 수정 - MainPrd_SQL.updateMainPrd */
		UPDATE TB_SA_MAIN_PRD_INFO
			SET DOC_REG_ID = #{docRegId}
				, URL_CNSOL_SPR_CD = #{urlCnsolSprCd}
				, URL_ADDR = #{urlAddr}
				, PRD_CLCD = #{prdClcd}
				, AUTO_MNL_SPR_CD =  #{autoMnlSprCd}
				, AUTO_LOGIC_TGT_CD = #{autoLogicTgtCd}
				, SLAMT_WGT = #{slamtWgt}
				, ODR_CNT_WGT = #{odrCntWgt}
				, INVN_PRD_WGT = #{invnPrdWgt}
				, UPD_DTM = SYSDATE
				, UPDPSN_ID = #{updpsnId}
			WHERE CO_CD = #{coCd}
				AND CHN_TP_CD = #{chnTpCd}
				AND MALL_SPR_CD = #{mallSprCd}
				AND MAIN_PRD_EXPS_PST_ID = #{mainPrdExpsPstId}
	</update>


	<select id="selectMainPrdDtlDispSo" parameterType="HashMap" resultType="Integer">
		/* 메인상품 상세 개수 조회(전시순서 세팅) - MainPrd_SQL.selectMainPrdDtlDispSo */
		SELECT NVL(MAX(DISP_SO), 0) + 1
		FROM TB_SA_MAIN_PRD_DTL
		WHERE CO_CD = #{coCd}
			AND MAIN_PRD_EXPS_PST_ID = #{mainPrdExpsPstId}
			AND CHN_TP_CD = #{chnTpCd}
			AND MALL_SPR_CD = #{mallSprCd}
			AND EXPS_NOTIC_SPR_CD = #{expsNoticSprCd}
			<if test="oprUnitId != null and !oprUnitId.equals('') ">
				AND BZPLC_ID = #{bzplcId}
				AND OPR_UNIT_ID = #{oprUnitId}
			</if>
	</select>

	<select id="selectMainPrdSprAllCnt" parameterType="HashMap" resultType="Integer">
		/* 메인상품 게시구분:전체 개수 조회 - MainPrd_SQL.selectMainPrdSprAllCnt */
		SELECT COUNT(1)
		FROM TB_SA_MAIN_PRD_DTL
		WHERE CO_CD = #{coCd}
			AND MAIN_PRD_EXPS_PST_ID = #{mainPrdExpsPstId}
			AND CHN_TP_CD = #{chnTpCd}
			AND MALL_SPR_CD = #{mallSprCd}
			AND EXPS_NOTIC_SPR_CD = #{expsNoticSprCd}
	</select>

	<update id="updateMainPrdDtlSo" parameterType="HashMap">
		/* 메인상품 상세 순서 저장 - MainPrd_SQL.updateMainPrdDtlSo */
		UPDATE TB_SA_MAIN_PRD_DTL
			SET DISP_SO = #{dispSo}
				,  UPDPSN_ID = #{updpsnId}
				,  UPD_DTM = SYSDATE
			WHERE CO_CD = #{coCd}
				AND MAIN_PRD_DTL_SEQ = #{mainPrdDtlSeq}
	</update>

	<insert id="insertMainPrdDtl" parameterType="HashMap">
		/* 메인상품 상세 등록 - MainPrd_SQL.insertMainPrdDtl */
		<selectKey keyProperty="mainPrdDtlSeq" resultType="Integer" order="BEFORE">
			SELECT SQ_SA_MAIN_PRD_DTL_01.NEXTVAL FROM DUAL
		</selectKey>
		INSERT INTO TB_SA_MAIN_PRD_DTL
		(
			CO_CD
			, MAIN_PRD_DTL_SEQ
			, MAIN_PRD_EXPS_PST_ID
			, CHN_TP_CD
			, MALL_SPR_CD
			, PRD_ID
			, BZPLC_ID
			, OPR_UNIT_ID
			, EXPS_NOTIC_SPR_CD
			, DISP_SO
			, PRD_REG_DT
			, REGPSN_ID
			, REG_DTM
			, UPDPSN_ID
			, UPD_DTM
			, NOTLOGN_INC_YN
		) VALUES(
			#{coCd}
			,#{mainPrdDtlSeq}
			, #{mainPrdExpsPstId}
			, #{chnTpCd}
			, #{mallSprCd}
			, LPAD(#{prdId}, 18, '0')
			, #{bzplcId}
			, #{oprUnitId}
			, #{expsNoticSprCd}
			, #{dispSo}
			, TO_CHAR(SYSDATE, 'YYYYMMDD')
			, #{regpsnId}
			, SYSDATE
			, #{updpsnId}
			, SYSDATE
			, #{notlognIncYn}
		)
	</insert>

	<delete id="deleteMainPrdDtl" parameterType="HashMap">
	/* 메인상품 상세 삭제 - MainPrd_SQL.deleteMainPrdDtl */
		DELETE FROM TB_SA_MAIN_PRD_DTL
		WHERE CO_CD = #{coCd}
			AND MAIN_PRD_DTL_SEQ = #{mainPrdDtlSeq}
	</delete>

	<delete id="deleteMainPrd" parameterType="HashMap">
	/* 메인상품 삭제 - MainPrd_SQL.deleteMainPrd */
		DELETE FROM TB_SA_MAIN_PRD_INFO
		WHERE CO_CD = #{coCd}
			AND CHN_TP_CD = #{chnTpCd}
			AND MALL_SPR_CD = #{mallSprCd}
			AND MAIN_PRD_EXPS_PST_ID = #{mainPrdExpsPstId}
	</delete>

	<delete id="deleteMainPrdRelDtl" parameterType="HashMap">
	/* 메인상품 상세 삭제(메인상품 삭제 뒤 상세 삭제) - MainPrd_SQL.deleteMainPrdRelDtl */
		DELETE FROM TB_SA_MAIN_PRD_DTL
		WHERE CO_CD = #{coCd}
			AND CHN_TP_CD = #{chnTpCd}
			AND MALL_SPR_CD = #{mallSprCd}
			AND MAIN_PRD_EXPS_PST_ID = #{mainPrdExpsPstId}
	</delete>

</mapper>