<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="RdCategory">
	
        <select id="selectCategoryList" parameterType="HashMap" resultType="HashMap">
        /* RdCategory.selectCategoryList */
		SELECT A.CO_CD              AS CO_CD         
		     , A.PRD_CLCD           AS PRD_CLCD      
		     , A.MALL_SPR_CD        AS MALL_SPR_CD   
		     , A.HRNK_PRD_CLCD      AS HRNK_PRD_CLCD 
		     , A.HIER_LVL           AS HIER_LVL      
		     , A.PRD_CLSF_NM        AS PRD_CLSF_NM   
		     , A.LWST_CD_YN         AS LWST_CD_YN    
		     , A.USE_YN             AS USE_YN        
		     , A.FRT_EXPS_YN        AS FRT_EXPS_YN   
		     , A.MRO_PRD_CLCD       AS MRO_PRD_CLCD  
		     , A.NOTI_ITM_ID        AS NOTI_ITM_ID   
		     , A.MCND_PRD_YN        AS MCND_PRD_YN   
		     , A.SRT_SO             AS SRT_SO        
		     , A.DEL_YN             AS DEL_YN        
             , UPPER(A.PRD_CLSF_NM) AS PRD_CLSF_NM_UPPER
		  FROM SSP_APP.TB_PR_PRD_CLSF_INFO A
	     WHERE 1=1
	       AND A.MALL_SPR_CD       = #{MALL_SPR_CD}
	       AND NVL(A.DEL_YN,'N')  != 'Y'
	     START WITH A.HIER_LVL     = 1
	   CONNECT BY PRIOR A.PRD_CLCD = A.HRNK_PRD_CLCD
		 ORDER SIBLINGS BY A.SRT_SO ASC
    </select>
    
    <select id="selectSubCategoryList" parameterType="HashMap" resultType="HashMap">
        /* RdCategory.selectSubCategoryList*/
        SELECT CO_CD                  AS CO_CD                 
             , PRD_CLCD               AS PRD_CLCD              
             , MALL_SPR_CD            AS MALL_SPR_CD           
             , HRNK_PRD_CLCD          AS HRNK_PRD_CLCD         
             , HIER_LVL               AS HIER_LVL              
             , PRD_CLSF_NM            AS PRD_CLSF_NM           
             , DISP_PRD_FILE_ATTC_ID  AS DISP_PRD_FILE_ATTC_ID 
             , LWST_CD_YN             AS LWST_CD_YN            
             , USE_YN                 AS USE_YN                
             , FRT_EXPS_YN            AS FRT_EXPS_YN           
             , MRO_PRD_CLCD           AS MRO_PRD_CLCD          
             , NOTI_ITM_ID            AS NOTI_ITM_ID           
             , MCND_PRD_YN            AS MCND_PRD_YN           
             , SRT_SO                 AS SRT_SO                
             , UPPER(PRD_CLSF_NM)     AS PRD_CLSF_NM_UPPER
         FROM SSP_APP.TB_PR_PRD_CLSF_INFO
        WHERE 1=1
          AND NVL(DEL_YN,'N') != 'Y'
          AND MALL_SPR_CD      = #{MALL_SPR_CD}
           <choose>
                <when test='null != PRD_CLCD and "" != PRD_CLCD'>
                   AND HRNK_PRD_CLCD = #{PRD_CLCD}
                </when>
                <otherwise>
                   AND HRNK_PRD_CLCD IS NULL
                </otherwise>
            </choose>
        ORDER BY SRT_SO ASC
    </select>
    
    <select id="selectCategory" parameterType="HashMap" resultType="HashMap">
        /* RdCategory.selectCategory */
        SELECT A.CO_CD                                           AS CO_CD    
             , A.PRD_CLCD                                        AS PRD_CLCD 
             , (
                SELECT SSP_APP.FN_PR_FULL_CLSF_NM
                       (
                         A.CO_CD
                       , A.PRD_CLCD
                       )
                  FROM DUAL
               )                                                 AS PRD_CLS_LVL_NM
             , A.MALL_SPR_CD                                     AS MALL_SPR_CD           
             , A.HRNK_PRD_CLCD                                   AS HRNK_PRD_CLCD         
             , A.HIER_LVL                                        AS HIER_LVL              
             , A.PRD_CLSF_NM                                     AS PRD_CLSF_NM           
             , A.DISP_PRD_FILE_ATTC_ID                           AS DISP_PRD_FILE_ATTC_ID 
             , A.LWST_CD_YN                                      AS LWST_CD_YN            
             , A.USE_YN                                          AS USE_YN                
             , A.FRT_EXPS_YN                                     AS FRT_EXPS_YN           
             , A.MRO_PRD_CLCD                                    AS MRO_PRD_CLCD          
             , F.MRO_PRD_CLSF_NM                                 AS MRO_PRD_CLSF_NM       
             , A.NOTI_ITM_ID                                     AS NOTI_ITM_ID           
             , G.NOTI_ITM_NM                                     AS NOTI_ITM_NM           
             , A.MCND_PRD_YN                                     AS MCND_PRD_YN           
             , A.SRT_SO                                          AS SRT_SO                
             , A.DEL_YN                                          AS DEL_YN                
             , A.SEL_MTHD_CD                                     AS SEL_MTHD_CD           
             , A.REGPSN_ID                                       AS REGPSN_ID
             , J.OPRTR_NM                                        AS REGPSN_NM
             , TO_CHAR(A.REG_DTM,'YYYY.MM.DD HH24:MI:SS')        AS REG_DTM
             , A.UPDPSN_ID                                       AS UPDPSN_ID
             , K.OPRTR_NM                                        AS UPDPSN_NM
             , TO_CHAR(A.UPD_DTM,'YYYY.MM.DD HH24:MI:SS')        AS UPD_DTM
             , B.PRD_CLSF_CHRPSN_ID                              AS PR_PRD_CLSF_CHRPSN_ID
             , D.OPRTR_NM                                        AS PR_PRD_CLSF_CHRPSN_NM
             , C.PRD_CLSF_CHRPSN_ID                              AS MD_PRD_CLSF_CHRPSN_ID
             , E.OPRTR_NM                                        AS MD_PRD_CLSF_CHRPSN_NM
             , (                                                 
                   SELECT NVL(COUNT(PRD_ID),0)                   
                     FROM SSP_APP.TB_PR_PRD_INFO                 
                    WHERE PRD_CLCD = A.PRD_CLCD                  
               )                                                 AS PRD_CNT
             , H.PRD_CL_NM                                       AS PRD_CL_NM  
             , (
                   SELECT NVL(COUNT(PRD_ID),0) 
                     FROM SSP_APP.TB_PR_PRD_INFO 
                    WHERE PRD_CLCD = A.PRD_CLCD
               )                                                 AS PRD_CNT
             , (
                   SELECT COUNT(*) 
                     FROM TB_PR_PRD_CLSF_INFO T 
                    WHERE USE_YN = 'Y' 
                    START WITH T.HRNK_PRD_CLCD = A.PRD_CLCD 
                   CONNECT BY PRIOR T.PRD_CLCD = T.HRNK_PRD_CLCD
               )                                                 AS CNT
             , (
                   SELECT COUNT(*) 
                     FROM TB_PR_PRD_CLSF_INFO T 
                    WHERE USE_YN = 'N' 
                    START WITH A.HRNK_PRD_CLCD     = T.PRD_CLCD 
                  CONNECT BY PRIOR T.HRNK_PRD_CLCD = T.PRD_CLCD 
                )                                                AS TOP_CNT
             , SSP_APP.FN_PR_GET_SSP_PRD_NM_SET(A.CO_CD, A.PRD_CLCD) SSP_PRD_CONF_NM
         FROM SSP_APP.TB_PR_PRD_CLSF_INFO                           A
             , (                                                     
                   SELECT CO_CD                                      
                        , PRD_CLCD                                   
                        , PRD_CLSF_CHRPSN_ID                         
                     FROM SSP_APP.TB_PR_PRD_CLSF_CHRPSN_INFO         
                    WHERE PRD_CLSF_CHRPSN_TP_CD   = '10'             
                      AND PRD_CLSF_CHRPSN_SPR_CD  = '10'             
                      AND PRD_CLSF_CHRPSN_USEYN   = 'Y'              
               )                                                     B
             , (                                                     
                   SELECT CO_CD                                      
                        , PRD_CLCD                                   
                        , PRD_CLSF_CHRPSN_ID                         
                     FROM SSP_APP.TB_PR_PRD_CLSF_CHRPSN_INFO         
                    WHERE PRD_CLSF_CHRPSN_TP_CD  = '20'              
                      AND PRD_CLSF_CHRPSN_SPR_CD = '10'              
                      AND PRD_CLSF_CHRPSN_USEYN  = 'Y'               
               )                                                     C
             , SSP_APP.TB_CO_MBR_OPRTR_INFO                          D
             , SSP_APP.TB_CO_MBR_OPRTR_INFO                          E    
             , (                                                     
                   SELECT MRO_PRD_CLCD
                        , SUBSTR(SYS_CONNECT_BY_PATH(MRO_PRD_CLSF_NM, '>'),2) AS MRO_PRD_CLSF_NM
                     FROM SSP_APP.TB_PR_MRO_PRD_CLSF_INFO
                    WHERE USE_YN       = 'Y' 
                      AND PRD_CLSF_LVL = 4
                    START WITH HRNK_MRO_PRD_CLCD IS NULL
                  CONNECT BY PRIOR MRO_PRD_CLCD = HRNK_MRO_PRD_CLCD) F  
             , SSP_APP.TB_PR_NOTI_ITM_BASIS                          G  
             , (
                   SELECT T1.PRD_CLCD,  LISTAGG(T2.PRNM || DECODE(T1.MAND_YN,'Y','*') , ',') WITHIN GROUP(ORDER BY NVL(SRT.SRT_SO,T1.SRT_SO)) AS PRD_CL_NM
                     FROM SSP_APP.TB_PR_PRD_CLSF_ATTR_MAPP T1
                     INNER JOIN SSP_APP.TB_PR_PRD_ATTR_INFO T2
                        ON T1.PRD_ATTR_CD = T2.PRD_ATTR_CD
                     LEFT JOIN SSP_APP.TB_PR_PRD_CLSF_ATTR_SRT_INFO SRT 
                        ON SRT.CO_CD = T1.CO_CD AND SRT.PRD_CLCD = T1.PRD_CLCD AND SRT.INTG_ATTR_CD = T1.PRD_ATTR_CD AND SRT.INTG_ATTR_SPR_CD = '20'
                     WHERE NVL(SRT.EXPS_YN, 'Y') = 'Y'
                    GROUP BY T1.PRD_CLCD
                )                                                    H  
             , TB_CO_MBR_OPRTR_INFO                                  J 
             , TB_CO_MBR_OPRTR_INFO                                  K 
         WHERE 1=1 
           AND A.CO_CD              = B.CO_CD(+)
           AND A.PRD_CLCD           = B.PRD_CLCD(+)
           AND A.CO_CD              = C.CO_CD(+)
           AND A.PRD_CLCD           = C.PRD_CLCD(+)
           AND B.PRD_CLSF_CHRPSN_ID = D.EMP_NO(+)
           AND C.PRD_CLSF_CHRPSN_ID = E.EMP_NO(+) 
           AND A.MRO_PRD_CLCD       = F.MRO_PRD_CLCD(+)
           AND A.NOTI_ITM_ID        = G.NOTI_ITM_ID(+)
           AND A.PRD_CLCD           = H.PRD_CLCD(+)
           AND G.USE_YN(+)          = 'Y'
           AND A.REGPSN_ID          = J.OPRTR_ID(+)
           AND A.UPDPSN_ID          = K.OPRTR_ID(+)
           AND A.PRD_CLCD           = #{PRD_CLCD}
	 	   AND A.MALL_SPR_CD        = #{MALL_SPR_CD}
    </select>  
    
    <select id="selectRdCategoryDuplicateCheck" parameterType="HashMap" resultType="String">
     /* selectRdCategoryDuplicateCheck    RdCategory_SQL.xml */
     SELECT
            COUNT(*)
       FROM SSP_APP.TB_PR_PRD_CLSF_INFO 
      WHERE 0=0
        AND SUBSTR(HRNK_PRD_CLCD,0,4) = SUBSTR(#{PRD_CLCD},0,4)
        AND MALL_SPR_CD               = '20' /*몰구분코드*/
        AND (CO_CD,PRD_CLCD) NOT IN ((#{CO_CD},#{PRD_CLCD}))
        AND PRD_CLSF_NM               = #{PRD_CLSF_NM}
    </select>
    
    <select id="selectRdCategoryDuplicateCheckNull" parameterType="HashMap" resultType="String">
     /* selectRdCategoryDuplicateCheckNull    RdCategory_SQL.xml */
     SELECT
            COUNT(*)
       FROM  SSP_APP.TB_PR_PRD_CLSF_INFO 
      WHERE 0=0
        AND SUBSTR(HRNK_PRD_CLCD,0,4) = SUBSTR(#{PRD_CLCD},0,4) 
        AND MALL_SPR_CD               = '20' /*몰구분코드*/
        AND PRD_CLSF_NM               = #{PRD_CLSF_NM}
    </select>

    <select id="selectAttcFileDtlsInq" parameterType="HashMap" resultType="HashMap">
        /* RdCategory.selectAttcFileDtlsInq 첨부파일내역 조회 */
        <![CDATA[
        SELECT A.DOC_REG_ID                  /* 문서등록ID */
             , A.DOC_REG_SEQ                 /* 문서등록순번 */
             , A.ATFL_NM                     /* 첨부파일명 */
             , A.ATFL_LEN                    /* 첨부파일길이 */
             , A.ATFL_STOR_PATH              /* 첨부파일저장경로 */
             , A.STOR_PLC_SPR_CD             /* 저장장소구분코드 */
             , A.ORI_ATFL_NM                 /* 원첨부파일명 */
             , A.SAP_DOC_ID                  /* SAP문서ID */
             , A.RMKS_CTS                    /* 비고내용 */
             , A.ETC_FDS_1                   /* 기타필드1 */
             , A.ETC_FDS_2                   /* 기타필드2 */
             , A.ETC_FDS_3                   /* 기타필드3 */
             , A.ETC_FDS_4                   /* 기타필드4 */
             , A.ETC_FDS_5                   /* 기타필드5 */
             , A.REG_DTM                     /* 등록일시 */
             , A.REGPSN_ID                   /* 등록자ID */
             , A.UPD_DTM                     /* 수정일시 */
             , A.UPDPSN_ID                   /* 수정자ID */
          FROM SSP_APP.TB_CO_ATFL_DTLS A
         WHERE 1=1
        ]]>
        <if test="DOC_REG_ID != null and DOC_REG_ID != ''">
            <![CDATA[
               AND A.DOC_REG_ID  = #{DOC_REG_ID}
            ]]>
        </if>
        <if test="DOC_REG_SEQ != null and DOC_REG_SEQ != ''">
            <![CDATA[
               AND A.DOC_REG_SEQ = #{DOC_REG_SEQ}
            ]]>
        </if>
    </select>

    <update id="updateCategory" parameterType="HashMap">
      /* RdCategory.updateCategory */
      BEGIN
      <![CDATA[
	      UPDATE SSP_APP.TB_PR_PRD_CLSF_INFO
	         SET PRD_CLSF_NM           = #{PRD_CLSF_NM}
	           , USE_YN                = #{USE_YN} 
	           , FRT_EXPS_YN           = #{FRT_EXPS_YN}
	           , MRO_PRD_CLCD          = #{MRO_PRD_CLCD}
	           , NOTI_ITM_ID           = #{NOTI_ITM_ID}
	           , MCND_PRD_YN           = #{MCND_PRD_YN}
	           , SEL_MTHD_CD           = #{SEL_MTHD_CD}
	           , DISP_PRD_FILE_ATTC_ID = #{DISP_PRD_FILE_ATTC_ID}
	           , UPD_RSN               = #{UPD_RSN}
	           , UPDPSN_ID             = #{USER_ID}
	           , UPD_DTM               = SYSDATE
	       WHERE CO_CD                 = #{CO_CD}
	         AND PRD_CLCD              = #{PRD_CLCD};

          UPDATE SSP_APP.TB_PR_MRO_PRD_INFO A
             SET A.MRO_PRD_CLCD = #{MRO_PRD_CLCD}
               , A.UPDPSN_ID    = #{USER_ID}
               , A.UPD_DTM      = SYSDATE
           WHERE (A.CO_CD, A.PRD_ID) IN (
                                         SELECT S1.CO_CD, S1.PRD_ID
                                           FROM SSP_APP.TB_PR_PRD_INFO S1
                                          WHERE S1.CO_CD       = #{CO_CD}
                                            AND S1.PRD_CLCD    = #{PRD_CLCD}
                                            AND S1.MALL_SPR_CD = '20'
                                        )
             AND A.MALL_SPR_CD       = '20';

          UPDATE SSP_APP.TB_PR_PRD_INFO A
             SET A.MRO_CRT_YN  = 'U'
               , A.UPDPSN_ID   = #{USER_ID}
               , A.UPD_DTM     = SYSDATE
           WHERE A.CO_CD       = #{CO_CD}
             AND A.PRD_CLCD    = #{PRD_CLCD}
             AND A.MRO_CRT_YN  = 'S'
             AND A.MALL_SPR_CD = '20';
	  ]]>
	  END;    
    </update>

    <delete id="deleteCategory" parameterType="HashMap">
       /* RdCategory.deleteCategory */
       UPDATE SSP_APP.TB_PR_PRD_CLSF_INFO
          SET DEL_YN         = 'Y'
            , UPD_RSN        = #{UPD_RSN}
            , UPDPSN_ID      = #{USER_ID}
            , UPD_DTM        = SYSDATE
        WHERE CO_CD          = #{CO_CD}
          AND PRD_CLCD       = #{PRD_CLCD}      
    </delete>
    
    <select id="selectPrdClcdSeq1" parameterType="HashMap" resultType="String">
        /* RdCategory.selectPrdClcdSeq1 */
        SELECT 'RC' || LPAD(TO_CHAR(NVL(MAX(SUBSTR(PRD_CLCD,3)), 0) + 1), 2, '0') 
          FROM TB_PR_PRD_CLSF_INFO 
         WHERE HIER_LVL    = 1
           AND CO_CD       = #{CO_CD}
           AND MALL_SPR_CD = #{MALL_SPR_CD}
    </select>
    
    <select id="selectPrdClcdSeq2" parameterType="HashMap" resultType="String">
        /* RdCategory.selectPrdClcdSeq2 */
        SELECT SUBSTR(#{HRNK_PRD_CLCD},0,4) || LPAD(TO_CHAR(NVL(MAX(SUBSTR(PRD_CLCD,5,5)), 0) + 1), 5, '0') 
          FROM TB_PR_PRD_CLSF_INFO 
         WHERE HRNK_PRD_CLCD LIKE SUBSTR(#{HRNK_PRD_CLCD},0,4) ||'%' 
           AND CO_CD       = #{CO_CD}
           AND MALL_SPR_CD = #{MALL_SPR_CD}
    </select>
	
	<update id="updateCategorySrtSo" parameterType="HashMap">
        /* RdCategory.updateCategorySrtSo */
        UPDATE SSP_APP.TB_PR_PRD_CLSF_INFO
           SET SRT_SO   = #{SRT_SO}
             , UPD_RSN  = #{UPD_RSN}
             , UPDPSN_ID= #{USER_ID}
             , UPD_DTM  = SYSDATE
         WHERE CO_CD    = #{CO_CD}
           AND PRD_CLCD = #{PRD_CLCD}
    </update>
    <insert id="insertCategory" parameterType="HashMap">
        /* RdCategory.insertCategory */
        INSERT INTO SSP_APP.TB_PR_PRD_CLSF_INFO 
        (
		      CO_CD
		    , PRD_CLCD
		    , MALL_SPR_CD
		    , HRNK_PRD_CLCD
		    , HIER_LVL
		    , PRD_CLSF_NM
		    , DISP_PRD_FILE_ATTC_ID
		    , LWST_CD_YN
		    , USE_YN
		    , FRT_EXPS_YN
		    , MRO_PRD_CLCD
		    , NOTI_ITM_ID
		    , MCND_PRD_YN
		    , SRT_SO
		    , DEL_YN
		    , SEL_MTHD_CD
		    , REGPSN_ID
		    , REG_DTM
		) VALUES 
		(
		      #{CO_CD}
		    , #{PRD_CLCD}
		    , #{MALL_SPR_CD}
		    , #{HRNK_PRD_CLCD}
		    , #{HIER_LVL}
		    , #{PRD_CLSF_NM}
		    , #{DISP_PRD_FILE_ATTC_ID}
		    , #{LWST_CD_YN}
		    , #{USE_YN}
		    , #{FRT_EXPS_YN}
		    , #{MRO_PRD_CLCD}
		    , #{NOTI_ITM_ID}
		    , #{MCND_PRD_YN}
		    , (SELECT NVL(MAX(SRT_SO),0)+1 FROM SSP_APP.TB_PR_PRD_CLSF_INFO 
                 WHERE CO_CD         = #{CO_CD} 
                   AND MALL_SPR_CD   = #{MALL_SPR_CD}
                   <if test="HRNK_PRD_CLCD != null and HRNK_PRD_CLCD != ''">
                   AND HRNK_PRD_CLCD = #{HRNK_PRD_CLCD} 
                   </if>
                )   
		    , 'N'
		    , #{SEL_MTHD_CD}
		    , #{USER_ID}
		    , SYSDATE
		)
    </insert>
   
    <insert id="insertPrdClsfChrpsn" parameterType="HashMap">
        /* RdCategory.insertPrdClsfChrpsn */
		INSERT INTO SSP_APP.TB_PR_PRD_CLSF_CHRPSN_INFO 
		(
		      CO_CD
		    , PRD_CLSF_CHRPSN_ID
		    , PRD_CLCD
		    , MNFR_NO
		    , PRD_CLSF_CHRPSN_SEQ
		    , MALL_SPR_CD
		    , PRD_CLSF_CHRPSN_TP_CD
		    , PRD_CLSF_CHRPSN_USEYN
		    , PRD_CLSF_CHRPSN_SPR_CD
		    , UPD_RSN
		    , REG_DTM
		    , REGPSN_ID
		) VALUES 
		(
		      #{CO_CD}
		    , #{PRD_CLSF_CHRPSN_ID}
		    , #{PRD_CLCD}
		    , #{MNFR_NO}
		    , (
		          SELECT NVL(MAX(PRD_CLSF_CHRPSN_SEQ),0)+1 
		            FROM SSP_APP.TB_PR_PRD_CLSF_CHRPSN_INFO
		      )
		    , #{MALL_SPR_CD}
		    , #{PRD_CLSF_CHRPSN_TP_CD}
		    , 'Y'
		    , '10'                                              /*상품분류담당자구분코드 10:정, 20:부*/
		    , #{UPD_RSN}
		    , SYSDATE
		    , #{USER_ID}
		)    
    </insert>
    
    
    <sql id="PlnPrfrtWhere">
		<choose>
			<when test="prdClcd != null and prdClcd != ''.toString()">
				AND	A.PRD_CLCD = #{prdClcd}
			</when>
			<otherwise>
				AND	A.PRD_CLCD != '*'
			</otherwise>
		</choose>
		<if test="strDtm != null and strDtm != ''.toString()">
			<![CDATA[
		    AND TO_CHAR(A.REG_DTM,'YYYY-MM-DD HH24:MI:SS') >= TO_CHAR(TO_DATE(#{strDtm},'YYYYMMDD'),'YYYY-MM-DD') || ' 00:00:00' 
		     
		    ]]>
		</if>
		<if test="endDtm != null and endDtm != ''.toString()">
		    <![CDATA[
		    AND TO_CHAR(A.REG_DTM,'YYYY-MM-DD HH24:MI:SS') < TO_CHAR(TO_DATE(#{endDtm},'YYYYMMDD'),'YYYY-MM-DD') || ' 00:00:00' 
		    ]]>
		</if>
		<if test="useYn != null and useYn != ''.toString()">
		    AND	A.USE_YN = #{useYn}
		</if>
	</sql>
    <!-- 카테고리 계획 매익률 목록 -->
    <select id="selectPlnPrfrtDetail" parameterType="HashMap" resultType="HashMap">
        /* RdCategory_SQL.xml selectPlnPrfrtDetail */
        SELECT A.CO_CD                                         AS CO_CD
             , A.PRD_CLCD                                      AS PRD_CLCD
             , A.PRD_CLCD                                      AS PRD_CLCD_NM
             , A.PLN_PRFRT                                     AS PLN_PRFRT
             , A.PLN_PRFRT||'%'                                AS PLN_PRFRT_NM
             , A.REG_RSN                                       AS REG_RSN
             , A.SEQ                                           AS SEQ
             , DECODE(A.USE_YN, 'Y', '사용', 'N', '미사용','') AS USE_YN_NM
             , A.USE_YN                                        AS USE_YN      
             , A.VLD_STR_DTM                                   AS VLD_STR_DTM 
             , A.VLD_END_DTM                                   AS VLD_END_DTM 
             , A.REGPSN_ID                                     AS REGPSN_ID   
             , TO_CHAR(UPD_DTM,'YYYY.MM.DD HH24:MI:SS')        AS REG_DTM
		FROM TB_PC_PLN_PRFRT_INFO A
		<where>
		 	<include refid="PlnPrfrtWhere" />
		</where>
    </select>
    
    
    <insert id="insertPlnPrfrt" parameterType="HashMap">
    	/* RdCategory_SQL.xml 계획매익률 등록 - insertPlnPrfrt ex) PcPlnPrfrtServiceImpl.java */
        INSERT INTO TB_PC_PLN_PRFRT_INFO
	    ( 
	          CO_CD
			, MNFR_NO
			, SEQ
			, PRD_CLCD
			, PLN_PRFRT
			, REG_RSN
			, USE_YN
			, VLD_STR_DTM
			, VLD_END_DTM
			, RND_PRFRT_SPR_CD                /*RND매익율구분코드*/
			, REGPSN_ID
			, REG_DTM
			, UPDPSN_ID
			, UPD_DTM
		) VALUES
		(
			  #{CO_CD}
			, '*'  
			, NVL((SELECT MAX(SEQ)+1 FROM TB_PC_PLN_PRFRT_INFO),0)
			, #{PRD_CLCD}
			, #{PLN_PRFRT}
			, #{REG_RSN}
			, 'Y'
			, TO_CHAR(SYSDATE,'YYYYMMDDHH24MISS')
			, '99991231235959'
			, '30'
			, #{USER_ID}
			, SYSDATE
			, #{USER_ID}
			, SYSDATE
		)
    </insert>
       
    <!-- 카테고리 계획 매익률 수정 -->
    <update id="updatePlnPrfrt" parameterType="HashMap">
        /*  RdCategory_SQL.xml PcDetrInfo.updatePlnPrfrt  ex) PcPlnPrfrtServiceImpl.java*/
        UPDATE TB_PC_PLN_PRFRT_INFO 
		   SET UPDPSN_ID = #{USER_ID}
		 	 , UPD_DTM   = SYSDATE
	 	<if test="USE_YN != null and USE_YN != ''.toString()">
		     , USE_YN  = #{USE_YN}
		</if>
		WHERE PRD_CLCD = #{PRD_CLCD}
		  AND USE_YN   = 'Y'
    </update>
    
    <select id="selectPrdAttrList" parameterType="HashMap" resultType="HashMap">
        /* RdCategory.selectPrdAttrList */
		SELECT 0            AS CHK
		     , PRD_ATTR_CD  AS PRD_ATTR_CD
		     , PRNM         AS PRNM
		 FROM SSP_APP.TB_PR_PRD_ATTR_INFO  
		WHERE 1=1
		  AND CO_CD = #{CO_CD}
	<if test="PRNM != null and PRNM != ''">
		  AND PRNM LIKE '%'|| #{PRNM} ||'%'
	</if>
		  AND MALL_SPR_CD = #{MALL_SPR_CD}
		  AND USE_YN      = 'Y'
		ORDER BY PRD_ATTR_CD ASC
    </select>    
    
    <select id="selectClsfAttrMappList" parameterType="HashMap" resultType="HashMap">
        /* RdCategory.selectClsfAttrMappList */
		SELECT 0             AS CHK
             , A.CO_CD       AS CO_CD      
             , A.PRD_CLCD    AS PRD_CLCD   
             , A.PRD_ATTR_CD AS PRD_ATTR_CD
             , B.PRNM        AS PRNM       
             , A.MAND_YN     AS MAND_YN    
             , NVL(SRT.SRT_SO, A.SRT_SO)  AS SRT_SO  
             , NVL(SRT.EXPS_YN, 'Y') EXPS_YN  
             , '20' INTG_ATTR_SPR_CD 
         FROM SSP_APP.TB_PR_PRD_CLSF_ATTR_MAPP A
            , SSP_APP.TB_PR_PRD_ATTR_INFO      B
            , SSP_APP.TB_PR_PRD_CLSF_ATTR_SRT_INFO SRT 
        WHERE 1=1
          AND A.PRD_ATTR_CD = B.PRD_ATTR_CD
          AND A.CO_CD       = #{CO_CD}
          AND A.PRD_CLCD    = #{PRD_CLCD}
          AND A.CO_CD = SRT.CO_CD(+)
          AND A.PRD_CLCD = SRT.PRD_CLCD(+)
          AND A.PRD_ATTR_CD = SRT.INTG_ATTR_CD(+)
        ORDER BY NVL(SRT.SRT_SO, A.SRT_SO)
    </select>    
    
     <insert id="insertClsfAttrMapp" parameterType="HashMap">
        /* RdCategory.insertClsfAttrMapp */
		INSERT INTO SSP_APP.TB_PR_PRD_CLSF_ATTR_MAPP 
		(
		      CO_CD
		    , PRD_CLCD
		    , PRD_ATTR_CD
		    , MAND_YN
		    , SRT_SO
		    , REGPSN_ID
		    , REG_DTM
		) VALUES 
		(
		      #{CO_CD}
		    , #{PRD_CLCD}
		    , #{PRD_ATTR_CD}
		    , #{MAND_YN}
		    , #{SRT_SO}
		    , #{USER_ID}
		    , SYSDATE
		)     
     </insert>
     
     <update id="updateClsfAttrMapp" parameterType="HashMap">
        /* RdCategory.updateClsfAttrMapp */
		UPDATE SSP_APP.TB_PR_PRD_CLSF_ATTR_MAPP
		   SET MAND_YN      = #{MAND_YN}
		     , SRT_SO       = #{SRT_SO}
		     , UPDPSN_ID    = #{USER_ID}
		     , UPD_DTM      = SYSDATE
		 WHERE CO_CD        = #{CO_CD}
		   AND PRD_CLCD     = #{PRD_CLCD}
		   AND PRD_ATTR_CD  = #{PRD_ATTR_CD}      
     </update>
     
     <delete id="deleteClsfAttrMapp" parameterType="HashMap">
        /* RdCategory.deleteClsfAttrMapp */
		DELETE FROM SSP_APP.TB_PR_PRD_CLSF_ATTR_MAPP
		 WHERE CO_CD        = #{CO_CD}
		   AND PRD_CLCD     = #{PRD_CLCD}
		   AND PRD_ATTR_CD  = #{PRD_ATTR_CD}     
     </delete>
     
     <select id="selectPrdClsfNm" parameterType="HashMap" resultType="Integer">
        /* RdCategory.selectPrdClsfNm */
        SELECT COUNT(0) 
          FROM SSP_APP.TB_PR_PRD_CLSF_INFO 
         WHERE PRD_CLSF_NM = #{PRD_CLSF_NM} 
           AND MALL_SPR_CD = #{MALL_SPR_CD} 
           AND NVL(DEL_YN,'N') != 'Y'
     </select>
     
   	 <select id="selectCodeChkYn" parameterType="HashMap" resultType="HashMap">
        /* RdCategory.selectCodeChkYn  저장 코드체크여부 조회  */
        <![CDATA[
            SELECT MAX(MRO_PRD_CLCD_YN) AS MRO_PRD_CLCD_YN       /*S-MRO카테고리 매핑*/
                 , MAX(PR_EMP_NO_YN)    AS PR_EMP_NO_YN          /*상품담당자(정) 코드*/
                 , MAX(MD_EMP_NO_YN)    AS MD_EMP_NO_YN          /*구매담당자(정) 코드*/
              FROM (
                       SELECT CASE WHEN COUNT(1) > 0
                                   THEN 'Y'
                                   ELSE 'N'
                              END                     AS MRO_PRD_CLCD_YN
                            , ''                      AS PR_EMP_NO_YN
                            , ''                      AS MD_EMP_NO_YN
                         FROM SSP_APP.TB_PR_MRO_PRD_CLSF_INFO
                        WHERE CO_CD        = #{CO_CD}
                          AND MRO_PRD_CLCD = #{MRO_PRD_CLCD}
                        UNION ALL
                       SELECT ''                      AS MRO_PRD_CLCD_YN
                            , CASE WHEN COUNT(1) > 0
                                   THEN 'Y'
                                   ELSE 'N'
                              END                     AS PR_EMP_NO_YN
                            , ''                      AS MD_EMP_NO_YN   
                         FROM SSP_APP.TB_CO_MBR_OPRTR_INFO
                        WHERE CO_CD         = #{CO_CD}
                          AND UPPER(EMP_NO) = UPPER(#{PR_EMP_NO})
                        UNION ALL
                       SELECT ''                      AS MRO_PRD_CLCD_YN
                            ,  ''                     AS PR_EMP_NO_YN
                            , CASE WHEN COUNT(1) > 0
                                   THEN 'Y'
                                   ELSE 'N'
                              END                     AS MD_EMP_NO_YN
                         FROM SSP_APP.TB_CO_MBR_OPRTR_INFO
                        WHERE CO_CD        = #{CO_CD}
                         AND UPPER(EMP_NO) = UPPER(#{MD_EMP_NO})
                   )
        ]]>
    </select>
    
    
     <select id="selectUpCodeChkYn" parameterType="HashMap" resultType="HashMap">
        /* RdCategory.selectUpCodeChkYn  수정 코드체크여부 조회  */
        <![CDATA[
            SELECT MAX(MRO_PRD_CLCD_YN) AS MRO_PRD_CLCD_YN       /*S-MRO카테고리 매핑*/
                 , MAX(NOTI_ITM_ID_YN)    AS NOTI_ITM_ID_YN      /*고시품목 매핑*/
              FROM (
                       SELECT CASE WHEN COUNT(1) > 0
                                   THEN 'Y'
                                   ELSE 'N'
                              END                     AS MRO_PRD_CLCD_YN
                            , ''                      AS NOTI_ITM_ID_YN
                         FROM SSP_APP.TB_PR_MRO_PRD_CLSF_INFO
                        WHERE CO_CD        = #{CO_CD}
                          AND MRO_PRD_CLCD = #{MRO_PRD_CLCD}
                        UNION ALL
                       SELECT ''                      AS MRO_PRD_CLCD_YN
                            , CASE WHEN COUNT(1) > 0
                                   THEN 'Y'
                                   ELSE 'N'
                              END                     AS NOTI_ITM_ID_YN
                         FROM SSP_APP.TB_PR_NOTI_ITM_BASIS
                        WHERE CO_CD       = #{CO_CD}
                         AND NOTI_ITM_ID  = #{NOTI_ITM_ID}

                   )
        ]]>
    </select>
    
    <update id="updateClsfAttrSrtInfo" parameterType="HashMap">
        MERGE INTO SSP_APP.TB_PR_PRD_CLSF_ATTR_SRT_INFO USING DUAL
            ON (CO_CD=#{CO_CD} AND PRD_CLCD=#{PRD_CLCD} AND INTG_ATTR_CD=#{PRD_ATTR_CD})
        WHEN MATCHED THEN 
        UPDATE SET
            EXPS_YN = #{EXPS_YN},
            SRT_SO = #{SRT_SO},
            INTG_ATTR_SPR_CD = #{INTG_ATTR_SPR_CD},
            UPDPSN_ID = #{USER_ID},
            UPD_DTM = SYSDATE
        WHEN NOT MATCHED THEN
        INSERT
            (CO_CD,
            PRD_CLCD,
            MRO_PRD_CLCD,
            INTG_ATTR_CD,
            EXPS_YN,
            SRT_SO,
            INTG_ATTR_SPR_CD,
            REGPSN_ID,
            REG_DTM)
        VALUES (#{CO_CD},
            #{PRD_CLCD},
            #{MRO_PRD_CLCD},
            #{PRD_ATTR_CD},
            #{EXPS_YN},
            #{SRT_SO},
            #{INTG_ATTR_SPR_CD},
            #{USER_ID},
            SYSDATE)
     </update>
     
     <delete id="deletePrdClsfAttrSrtInfo" parameterType="HashMap">
        /* PrCategory.deletePrdClsfAttrSrtInfo */
        DELETE FROM SSP_APP.TB_PR_PRD_CLSF_ATTR_SRT_INFO
        WHERE CO_CD = #{CO_CD}
            AND PRD_CLCD = #{PRD_CLCD}
            AND INTG_ATTR_CD = #{PRD_ATTR_CD}
     </delete>
</mapper>