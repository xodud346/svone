<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="ChmMtlInfoMng">

    <select id="selectChmMtlInfoMng" parameterType="HashMap" resultType="HashMap">
        /* ChmMtlInfoMng.selectChmMtlInfoMng 화학물질정보관리 목록 조회 */
        <![CDATA[
             SELECT CO_CD                   AS CO_CD                    /*회사코드*/
                  , PRD_ID                  AS PRD_ID                   /*상품코드*/
                  , PRD_NM                  AS PRD_NM                   /*상품명*/
                  , MNFR_NO                 AS MNFR_NO                  /*제조원*/
                  , MNFR_NM                 AS MNFR_NM                  /*제조사명*/
                  , PRD_CLCD                AS PRD_CLCD                 /*카테고리ID*/
                  , PRD_CLSF_NM             AS PRD_CLSF_NM              /*카테고리*/
                  , MTL_GRAVITY             AS MTL_GRAVITY              /*물질비중*/
                  , PHASE_SPR_CD            AS PHASE_SPR_CD             /*성상*/
                  , VAL_LIST                AS VAL_LIST                 /*대표규격*/
                  , REG_DTM                 AS REG_DTM                  /*등록일*/
                  , UPD_DTM                 AS UPD_DTM                  /*수정일*/
                  , UPDPSN_ID               AS UPDPSN_ID                /*수정자ID*/
                  , NEW_CHM_MTL             AS NEW_CHM_MTL              /*신규화학물질*/
                  , REG_TGT_EXST_CHM_MTL    AS REG_TGT_EXST_CHM_MTL     /*등록대상기존화학물질*/
                  , TOXIC_MTL1              AS TOXIC_MTL1               /*유독물질*/
                  , PERMIT_MTL1             AS PERMIT_MTL1              /*허가물질*/
                  , LMT_MTL1                AS LMT_MTL1                 /*제한물질*/
                  , PHBT_MTL1               AS PHBT_MTL1                /*금지물질*/
                  , ACCD_PSB_MTL1           AS ACCD_PSB_MTL1            /*사고대비물질*/
                  , PRT_INV_TGT_MTL1        AS PRT_INV_TGT_MTL1         /*배출량조사대상물질*/
                  , WRK_ENV_TGT_HRM_ARG2    AS WRK_ENV_TGT_HRM_ARG2     /*작업환경측정대상유해인자*/
                  , SPC_HLTH_TGT_HRM_ARG2   AS SPC_HLTH_TGT_HRM_ARG2    /*특수건강진단대상유해인자*/
                  , EXPS_BSS_SET_MTL2       AS EXPS_BSS_SET_MTL2        /*노출기준설정물질*/
                  , MNG_TGT_HRM_MTL2        AS MNG_TGT_HRM_MTL2         /*관리대상유해물질*/
                  , PERMIT_MTL2             AS PERMIT_MTL2              /*허가물질*/
                  , PHBT_MTL2               AS PHBT_MTL2                /*금지물질*/
                  , SPCL_MNG_TGT_MTL2       AS SPCL_MNG_TGT_MTL2        /*특별관리대상물질*/
                  , PSM_TGT_MTL2            AS PSM_TGT_MTL2             /*PSM 대상물질*/
                  , TOXIC_MTL13             AS TOXIC_MTL13              /*마약*/
                  , TOXIC_MTL23             AS TOXIC_MTL23              /*향정신성의약품*/
                  , TOXIC_MTL33             AS TOXIC_MTL33              /*화학적합성품*/
                  , TOXIC_MTL43             AS TOXIC_MTL43              /*마약류원료*/
                  , TOXIC_MTL53             AS TOXIC_MTL53              /*임시마약류*/
                   ${LIST_CAS_NO}
		      FROM (
		               SELECT A2.CO_CD                  AS CO_CD
		                    , A2.PRD_ID                 AS PRD_ID
		                    , A2.PRD_NM                 AS PRD_NM
		                    , A2.MNFR_NO                AS MNFR_NO
		                    , A2.MNFR_NM                AS MNFR_NM
		                    , A2.PRD_CLCD               AS PRD_CLCD
		                    , A2.PRD_CLSF_NM            AS PRD_CLSF_NM
		                    , A2.MTL_GRAVITY            AS MTL_GRAVITY
		                    , A2.PHASE_SPR_CD           AS PHASE_SPR_CD
		                    , A2.VAL_LIST               AS VAL_LIST
		                    , A2.REG_DTM                AS REG_DTM
		                    , A2.UPD_DTM                AS UPD_DTM
		                    , A2.UPDPSN_ID              AS UPDPSN_ID
		                    , A2.NEW_CHM_MTL            AS NEW_CHM_MTL
		                    , A2.REG_TGT_EXST_CHM_MTL   AS REG_TGT_EXST_CHM_MTL
		                    , A2.TOXIC_MTL1             AS TOXIC_MTL1
		                    , A2.PERMIT_MTL1            AS PERMIT_MTL1
		                    , A2.LMT_MTL1               AS LMT_MTL1
		                    , A2.PHBT_MTL1              AS PHBT_MTL1
		                    , A2.ACCD_PSB_MTL1          AS ACCD_PSB_MTL1
		                    , A2.PRT_INV_TGT_MTL1       AS PRT_INV_TGT_MTL1
		                    , A2.WRK_ENV_TGT_HRM_ARG2   AS WRK_ENV_TGT_HRM_ARG2
		                    , A2.SPC_HLTH_TGT_HRM_ARG2  AS SPC_HLTH_TGT_HRM_ARG2
		                    , A2.EXPS_BSS_SET_MTL2      AS EXPS_BSS_SET_MTL2
		                    , A2.MNG_TGT_HRM_MTL2       AS MNG_TGT_HRM_MTL2
		                    , A2.PERMIT_MTL2            AS PERMIT_MTL2
		                    , A2.PHBT_MTL2              AS PHBT_MTL2
		                    , A2.SPCL_MNG_TGT_MTL2      AS SPCL_MNG_TGT_MTL2
		                    , A2.PSM_TGT_MTL2           AS PSM_TGT_MTL2
		                    , A2.TOXIC_MTL13            AS TOXIC_MTL13
		                    , A2.TOXIC_MTL23            AS TOXIC_MTL23
		                    , A2.TOXIC_MTL33            AS TOXIC_MTL33
		                    , A2.TOXIC_MTL43            AS TOXIC_MTL43
		                    , A2.TOXIC_MTL53            AS TOXIC_MTL53
		                    , A2.CAS_RN_DUP_ORDER       AS CAS_RN_DUP_ORDER
		                    , A2.NO                     AS NO
		                    , A2.CAS_NO                 AS CAS_NO
		                    , A2.CHM_MTL_NM             AS CHM_MTL_NM
		                    , A2.MIN_CONTENT            AS MIN_CONTENT
		                    , A2.MAX_CONTENT            AS MAX_CONTENT
		                    , A2.B1_ORDER               AS B1_ORDER
		                 FROM (
		                          SELECT A1.CO_CD                                                                                 AS CO_CD
		                               , A1.PRD_ID                                                                                AS PRD_ID
		                               , A1.PRD_NM                                                                                AS PRD_NM
		                               , A1.MNFR_NO                                                                               AS MNFR_NO
		                               , A1.MNFR_NM                                                                               AS MNFR_NM
		                               , A1.PRD_CLCD                                                                              AS PRD_CLCD
		                               , A1.PRD_CLSF_NM                                                                           AS PRD_CLSF_NM
		                               , A1.MTL_GRAVITY                                                                           AS MTL_GRAVITY
		                               , A1.PHASE_SPR_CD                                                                          AS PHASE_SPR_CD
		                               , A1.VAL_LIST                                                                              AS VAL_LIST
		                               , A1.REG_DTM                                                                               AS REG_DTM
		                               , A1.UPD_DTM                                                                               AS UPD_DTM
		                               , A1.UPDPSN_ID                                                                             AS UPDPSN_ID
		                               , A1.NEW_CHM_MTL                                                                           AS NEW_CHM_MTL
		                               , A1.REG_TGT_EXST_CHM_MTL                                                                  AS REG_TGT_EXST_CHM_MTL
		                               , A1.TOXIC_MTL1                                                                            AS TOXIC_MTL1
		                               , A1.PERMIT_MTL1                                                                           AS PERMIT_MTL1
		                               , A1.LMT_MTL1                                                                              AS LMT_MTL1
		                               , A1.PHBT_MTL1                                                                             AS PHBT_MTL1
		                               , A1.ACCD_PSB_MTL1                                                                         AS ACCD_PSB_MTL1
		                               , A1.PRT_INV_TGT_MTL1                                                                      AS PRT_INV_TGT_MTL1
		                               , A1.WRK_ENV_TGT_HRM_ARG2                                                                  AS WRK_ENV_TGT_HRM_ARG2
		                               , A1.SPC_HLTH_TGT_HRM_ARG2                                                                 AS SPC_HLTH_TGT_HRM_ARG2
		                               , A1.EXPS_BSS_SET_MTL2                                                                     AS EXPS_BSS_SET_MTL2
		                               , A1.MNG_TGT_HRM_MTL2                                                                      AS MNG_TGT_HRM_MTL2
		                               , A1.PERMIT_MTL2                                                                           AS PERMIT_MTL2
		                               , A1.PHBT_MTL2                                                                             AS PHBT_MTL2
		                               , A1.SPCL_MNG_TGT_MTL2                                                                     AS SPCL_MNG_TGT_MTL2
		                               , A1.PSM_TGT_MTL2                                                                          AS PSM_TGT_MTL2
		                               , A1.TOXIC_MTL13                                                                           AS TOXIC_MTL13
		                               , A1.TOXIC_MTL23                                                                           AS TOXIC_MTL23
		                               , A1.TOXIC_MTL33                                                                           AS TOXIC_MTL33
		                               , A1.TOXIC_MTL43                                                                           AS TOXIC_MTL43
		                               , A1.TOXIC_MTL53                                                                           AS TOXIC_MTL53
		                               , A1.CAS_RN_DUP_ORDER                                                                      AS CAS_RN_DUP_ORDER
		                               , A1.NO                                                                                    AS NO
		                               , MAX(DECODE(A1.NO,A1.CAS_RN,A1.CAS_NO)) OVER (PARTITION BY A1.CO_CD,A1.PRD_ID,A1.NO)      AS CAS_NO
		                               , MAX(DECODE(A1.NO,A1.CAS_RN,A1.CHM_MTL_NM)) OVER (PARTITION BY A1.CO_CD,A1.PRD_ID,A1.NO)  AS CHM_MTL_NM
		                               , MAX(DECODE(A1.NO,A1.CAS_RN,A1.MIN_CONTENT)) OVER (PARTITION BY A1.CO_CD,A1.PRD_ID,A1.NO) AS MIN_CONTENT
		                               , MAX(DECODE(A1.NO,A1.CAS_RN,A1.MAX_CONTENT)) OVER (PARTITION BY A1.CO_CD,A1.PRD_ID,A1.NO) AS MAX_CONTENT
		                               , ROW_NUMBER() OVER (PARTITION BY A1.CO_CD,A1.PRD_ID,A1.NO ORDER BY 1)                     AS B1_ORDER
		                            FROM (
		                                     SELECT /*+ USE_INDEX(A TB_PR_PRD_CHM_MTL_DTLS_PK) */
		                                            A.CO_CD                                                                                                                 AS CO_CD                  /*회사코드*/
		                                          , TO_CHAR(TO_NUMBER(A.PRD_ID))                                                                                            AS PRD_ID                 /*상품코드*/
		                                          , A.CAS_NO                                                                                                                AS CAS_NO                 /*CAS-NO*/
		                                          , A.CHM_MTL_NM                                                                                                            AS CHM_MTL_NM             /*물질명*/
		                                          , A.MIN_CONTENT                                                                                                           AS MIN_CONTENT            /*최소함량*/
		                                          , A.MAX_CONTENT                                                                                                           AS MAX_CONTENT            /*최대함량*/
		                                          , C.PRD_NM                                                                                                                AS PRD_NM                 /*상품명*/
		                                          , C.MNFR_NO                                                                                                               AS MNFR_NO                /*제조원*/
		                                          , E.MNFR_NM                                                                                                               AS MNFR_NM                /*제조사명*/
		                                          , G.PRD_CLCD                                                                                                              AS PRD_CLCD               /*카테고리ID*/
		                                          , (
		                                             SELECT SSP_APP.FN_PR_FULL_CLSF_NM
		                                                    (
		                                                      G.CO_CD
		                                                    , G.PRD_CLCD
		                                                    )
		                                               FROM DUAL
		                                            )                                                                                                                       AS PRD_CLSF_NM            /*카테고리명*/
		                                          , C.MTL_GRAVITY                                                                                                           AS MTL_GRAVITY            /*물질비중*/
		                                          , (
		                                             SELECT SSP_APP.FN_COM_DTL_CDNM
		                                                    (
		                                                      #{LANG_CD}
		                                                    , 'PHASE_SPR_CD'
		                                                    , C.PHASE_SPR_CD
		                                                    )
		                                               FROM DUAL
		                                            )                                                                                                                       AS PHASE_SPR_CD           /*성상*/
		                                          , (
                                                     SELECT SSP_APP.FN_PR_ATTR_VAL_LIST
                                                            (
                                                              A.CO_CD
                                                            , A.PRD_ID
                                                            )
                                                       FROM DUAL
                                                    )                                                                                                                       AS VAL_LIST               /*대표규격*/
		                                          , TO_CHAR(MIN(A.REG_DTM) OVER (PARTITION BY A.CO_CD,A.PRD_ID),'YYYY.MM.DD HH24:MI:SS')                                    AS REG_DTM                /*등록일*/
		                                          , TO_CHAR(MAX(A.UPD_DTM) OVER (PARTITION BY A.CO_CD,A.PRD_ID),'YYYY.MM.DD HH24:MI:SS')                                    AS UPD_DTM                /*수정일*/
		                                          , LAST_VALUE(A.UPDPSN_ID) OVER (PARTITION BY A.CO_CD,A.PRD_ID)                                                            AS UPDPSN_ID              /*수정자ID*/
		                                          , MIN(CASE WHEN (NVL(DECODE(I.MNG_CD,'101','Y'),'N')='Y' AND B.CAS_NO IS NULL) OR INSTR(B.CAS_NO,'-') = 0
		                                                     THEN 'Y'
		                                                     ELSE 'N'
		                                            END) OVER (PARTITION BY A.CO_CD, A.PRD_ID)                                                                              AS NEW_CHM_MTL           /*신규화학물질*/
		                                          , NVL(MAX(CASE WHEN I.MNG_CD='102' AND NVL(I.HAMRYANG,0) <= A.MAX_CONTENT THEN 'Y' END) OVER (PARTITION BY A.CO_CD,A.PRD_ID),'N') AS REG_TGT_EXST_CHM_MTL  /*등록대상기존화학물질*/
		                                          , NVL(MAX(CASE WHEN I.MNG_CD='103' AND NVL(I.HAMRYANG,0) <= A.MAX_CONTENT THEN 'Y' END) OVER (PARTITION BY A.CO_CD,A.PRD_ID),'N') AS TOXIC_MTL1            /*유독물질*/
		                                          , NVL(MAX(CASE WHEN I.MNG_CD='104' AND NVL(I.HAMRYANG,0) <= A.MAX_CONTENT THEN 'Y' END) OVER (PARTITION BY A.CO_CD,A.PRD_ID),'N') AS PERMIT_MTL1           /*허가물질*/
		                                          , NVL(MAX(CASE WHEN I.MNG_CD='105' AND NVL(I.HAMRYANG,0) <= A.MAX_CONTENT THEN 'Y' END) OVER (PARTITION BY A.CO_CD,A.PRD_ID),'N') AS LMT_MTL1              /*제한물질*/
		                                          , NVL(MAX(CASE WHEN I.MNG_CD='106' AND NVL(I.HAMRYANG,0) <= A.MAX_CONTENT THEN 'Y' END) OVER (PARTITION BY A.CO_CD,A.PRD_ID),'N') AS PHBT_MTL1             /*금지물질*/
		                                          , NVL(MAX(CASE WHEN I.MNG_CD='107' AND NVL(I.HAMRYANG,0) <= A.MAX_CONTENT THEN 'Y' END) OVER (PARTITION BY A.CO_CD,A.PRD_ID),'N') AS ACCD_PSB_MTL1         /*사고대비물질*/
		                                          , NVL(MAX(CASE WHEN I.MNG_CD='108' AND NVL(I.HAMRYANG,0) <= A.MAX_CONTENT THEN 'Y' END) OVER (PARTITION BY A.CO_CD,A.PRD_ID),'N') AS PRT_INV_TGT_MTL1      /*배출량조사대상물질*/
		                                          , NVL(MAX(CASE WHEN I.MNG_CD='201' AND NVL(I.HAMRYANG,0) <= A.MAX_CONTENT THEN 'Y' END) OVER (PARTITION BY A.CO_CD,A.PRD_ID),'N') AS WRK_ENV_TGT_HRM_ARG2  /*작업환경측정대상유해인자*/
		                                          , NVL(MAX(CASE WHEN I.MNG_CD='202' AND NVL(I.HAMRYANG,0) <= A.MAX_CONTENT THEN 'Y' END) OVER (PARTITION BY A.CO_CD,A.PRD_ID),'N') AS SPC_HLTH_TGT_HRM_ARG2 /*특수건강진단대상유해인자*/
		                                          , NVL(MAX(CASE WHEN I.MNG_CD='203' AND NVL(I.HAMRYANG,0) <= A.MAX_CONTENT THEN 'Y' END) OVER (PARTITION BY A.CO_CD,A.PRD_ID),'N') AS EXPS_BSS_SET_MTL2     /*노출기준설정물질*/
		                                          , NVL(MAX(CASE WHEN I.MNG_CD='204' AND NVL(I.HAMRYANG,0) <= A.MAX_CONTENT THEN 'Y' END) OVER (PARTITION BY A.CO_CD,A.PRD_ID),'N') AS MNG_TGT_HRM_MTL2      /*관리대상유해물질*/
		                                          , NVL(MAX(CASE WHEN I.MNG_CD='205' AND NVL(I.HAMRYANG,0) <= A.MAX_CONTENT THEN 'Y' END) OVER (PARTITION BY A.CO_CD,A.PRD_ID),'N') AS PERMIT_MTL2           /*허가물질*/
		                                          , NVL(MAX(CASE WHEN I.MNG_CD='206' AND NVL(I.HAMRYANG,0) <= A.MAX_CONTENT THEN 'Y' END) OVER (PARTITION BY A.CO_CD,A.PRD_ID),'N') AS PHBT_MTL2             /*금지물질*/
		                                          , NVL(MAX(CASE WHEN I.MNG_CD='207' AND NVL(I.HAMRYANG,0) <= A.MAX_CONTENT THEN 'Y' END) OVER (PARTITION BY A.CO_CD,A.PRD_ID),'N') AS SPCL_MNG_TGT_MTL2     /*특별관리대상물질*/
		                                          , NVL(MAX(CASE WHEN I.MNG_CD='208' AND NVL(I.HAMRYANG,0) <= A.MAX_CONTENT THEN 'Y' END) OVER (PARTITION BY A.CO_CD,A.PRD_ID),'N') AS PSM_TGT_MTL2          /*PSM 대상물질*/
		                                          , NVL(MAX(CASE WHEN I.MNG_CD='301' AND NVL(I.HAMRYANG,0) <= A.MAX_CONTENT THEN 'Y' END) OVER (PARTITION BY A.CO_CD,A.PRD_ID),'N') AS TOXIC_MTL13           /*마약*/
		                                          , NVL(MAX(CASE WHEN I.MNG_CD='301' AND NVL(I.HAMRYANG,0) <= A.MAX_CONTENT THEN 'Y' END) OVER (PARTITION BY A.CO_CD,A.PRD_ID),'N') AS TOXIC_MTL23           /*향정신성의약품*/
		                                          , NVL(MAX(CASE WHEN I.MNG_CD='302' AND NVL(I.HAMRYANG,0) <= A.MAX_CONTENT THEN 'Y' END) OVER (PARTITION BY A.CO_CD,A.PRD_ID),'N') AS TOXIC_MTL33           /*화학적합성품*/
		                                          , NVL(MAX(CASE WHEN I.MNG_CD='303' AND NVL(I.HAMRYANG,0) <= A.MAX_CONTENT THEN 'Y' END) OVER (PARTITION BY A.CO_CD,A.PRD_ID),'N') AS TOXIC_MTL43           /*마약류원료*/
		                                          , NVL(MAX(CASE WHEN I.MNG_CD='304' AND NVL(I.HAMRYANG,0) <= A.MAX_CONTENT THEN 'Y' END) OVER (PARTITION BY A.CO_CD,A.PRD_ID),'N') AS TOXIC_MTL53           /*임시마약류*/
		                                          , DENSE_RANK() OVER (PARTITION BY A.CO_CD,A.PRD_ID ORDER BY A.CAS_NO)                                                      AS CAS_RN
		                                          , DENSE_RANK() OVER (PARTITION BY A.CO_CD,A.PRD_ID ORDER BY A.CAS_NO)                                                      AS NO
		                                          , ROW_NUMBER() OVER (PARTITION BY A.CO_CD,A.PRD_ID,A.CAS_NO ORDER BY 1)                                                    AS CAS_RN_DUP_ORDER
		                                       FROM SSP_APP.TB_PR_PRD_CHM_MTL_DTLS         A
		                                       LEFT JOIN SSP_CMS.SCT_CHEM                  B
		                                         ON 0=0
		                                        AND B.CAS_NO         = A.CAS_NO
		                                        AND B.IS_DELETE      = 0
		                                        AND B.IS_ENABLE      = 1
		                                        AND B.CLOSE_DATE     = '99991231235959'
		                                       LEFT JOIN SSP_APP.TB_PR_MRO_PRD_INFO        C
		                                         ON 0=0
		                                        AND C.CO_CD          = A.CO_CD
		                                        AND C.PRD_ID         = A.PRD_ID
		                                       LEFT JOIN SSP_APP.TB_PR_MNFR_INFO           E
		                                         ON 0=0
		                                        AND E.CO_CD          = C.CO_CD
		                                        AND E.MNFR_NO        = C.MNFR_NO
		                                       LEFT JOIN SSP_APP.TB_PR_PRD_INFO            G
		                                         ON 0=0
		                                        AND G.CO_CD          = C.CO_CD
		                                        AND G.PRD_ID         = C.PRD_ID
		                                       LEFT JOIN SSP_CMS.CVW_FV_CHEM_RESTRICT_INFO I
		                                         ON 0=0
			                                    AND I.CAS_NO         = A.CAS_NO
		]]>
							  	              <if test="PRD_ID_CNT > 0">
						                      INNER JOIN SSP_APP.TB_OD_ODR_INQ_TGT_DTLS            S2
						                         ON 0=0
							                    AND S2.SES_ID                   = #{SES_ID}
							                    AND S2.INQ_COND_DTLS            = #{INQ_COND_DTLS}
							                    AND S2.COL_ITM                  = 'PRD_ID'
							                    AND LPAD(S2.COND_DATA_VAL,18,0) = A.PRD_ID
						                      </if>
						                      <if test="CAS_NO_CNT > 0">
						                      INNER JOIN SSP_APP.TB_OD_ODR_INQ_TGT_DTLS            S3
						                         ON 0=0
							                    AND S3.SES_ID        = #{SES_ID}
							                    AND S3.INQ_COND_DTLS = #{INQ_COND_DTLS}
							                    AND S3.COL_ITM       = 'CAS_NO'
							                    AND S3.COND_DATA_VAL = A.CAS_NO
						                      </if>
						                     <if test="MNFR_NO_CNT > 0">
						                      INNER JOIN SSP_APP.TB_OD_ODR_INQ_TGT_DTLS            S4
						                         ON 0=0
							                    AND S4.SES_ID        = #{SES_ID}
							                    AND S4.INQ_COND_DTLS = #{INQ_COND_DTLS}
							                    AND S4.COL_ITM       = 'MNFR_NO'
							                    AND S4.COND_DATA_VAL = C.MNFR_NO
						                     </if>
						                     <if test="PRD_CLCD_CNT > 0">
						                      INNER JOIN SSP_APP.TB_OD_ODR_INQ_TGT_DTLS            S5
						                         ON 0=0
							                    AND S5.SES_ID        = #{SES_ID}
							                    AND S5.INQ_COND_DTLS = #{INQ_COND_DTLS}
							                    AND S5.COL_ITM       = 'PRD_CLCD'
							                    AND S5.COND_DATA_VAL = G.PRD_CLCD
						                     </if>
			                                  WHERE 0=0
                                            <if test="CO_CD != null and CO_CD != ''">
					                            <![CDATA[
					                            AND A.CO_CD          = #{CO_CD}
					                            ]]>
					                        </if>
        <![CDATA[
	                 	                        AND C.MALL_SPR_CD    = '20'
		                                 ) A1
                                   WHERE A1.CAS_RN_DUP_ORDER = 1
        ]]>
                               <if test="DT_SPR != null and DT_SPR != ''">
	           	                     <if test="DT_SPR == 'REG_DTM'">
	         	                     AND A1.REG_DTM BETWEEN TO_CHAR(TO_DATE(#{DATE_FR_DT},'YYYYMMDD'),'YYYY.MM.DD') || ' 00:00:00'
	         	                                        AND TO_CHAR(TO_DATE(#{DATE_TO_DT},'YYYYMMDD'),'YYYY.MM.DD') || ' 23:59:59'
	                                 </if>
	                                 <if test="DT_SPR == 'UPD_DTM'">
	         	                     AND A1.UPD_DTM BETWEEN TO_CHAR(TO_DATE(#{DATE_FR_DT},'YYYYMMDD'),'YYYY.MM.DD') || ' 00:00:00'
	         	                                        AND TO_CHAR(TO_DATE(#{DATE_TO_DT},'YYYYMMDD'),'YYYY.MM.DD') || ' 23:59:59'
	                                 </if>
                               </if>
                  <![CDATA[
		                      ) A2
                        WHERE A2.B1_ORDER = 1
		           ) A3
             PIVOT (
                     MAX(A3.CAS_NO)      AS CAS_NO
                   , MAX(A3.CHM_MTL_NM)  AS CHM_MTL_NM
                   , MAX(A3.MIN_CONTENT) AS MIN_CONTENT
                   , MAX(A3.MAX_CONTENT) AS MAX_CONTENT
                     FOR NO IN (
                                ${CAS_NO_LIST}
                               )
                  )
                  ]]>
<!--  2022-07-26 속도가 안나와서 SROT 기능 뺌.
       <choose>
           <when test='(SORT_COLUMN != null and SORT_COLUMN != "") and (SORT_TYPE != null and SORT_TYPE != "")'>
            ORDER BY A.${SORT_COLUMN} ${SORT_TYPE}
           </when>
           <otherwise>
            ORDER BY A.CO_CD
                   , A.PRD_CLCD
                   , A.MNFR_NO
           </otherwise>
        </choose>
-->
            OFFSET #{START_NUM} ROWS FETCH FIRST #{ROW_COUNT} ROWS ONLY
    </select>

    <select id="selectChmMtlInfoMngCount" parameterType="HashMap" resultType="Integer">
        /* ChmMtlInfoMng.selectChmMtlInfoMngCount 화학물질정보관리 카운트 조회 */
        <![CDATA[
            SELECT COUNT(1) AS CNT
			  FROM (
			        SELECT /*+ USE_INDEX(A TB_PR_PRD_CHM_MTL_DTLS_PK) */
			               TO_CHAR(MIN(A.REG_DTM) OVER (PARTITION BY A.CO_CD,A.PRD_ID),'YYYY.MM.DD HH24:MI:SS') AS REG_DTM                /*등록일*/
                         , TO_CHAR(MAX(A.UPD_DTM) OVER (PARTITION BY A.CO_CD,A.PRD_ID),'YYYY.MM.DD HH24:MI:SS') AS UPD_DTM                /*수정일*/
                         , DENSE_RANK() OVER (PARTITION BY A.CO_CD,A.PRD_ID ORDER BY A.CAS_NO)                  AS CAS_RN
                         , ROW_NUMBER() OVER (PARTITION BY A.CO_CD,A.PRD_ID,A.CAS_NO ORDER BY 1)                AS CAS_RN_DUP_ORDER
			          FROM SSP_APP.TB_PR_PRD_CHM_MTL_DTLS         A
			          LEFT JOIN SSP_CMS.SCT_CHEM                  B
			            ON 0=0
			           AND B.CAS_NO         = A.CAS_NO
			           AND B.IS_DELETE      = 0
			           AND B.IS_ENABLE      = 1
			           AND B.CLOSE_DATE     = '99991231235959'
			          LEFT JOIN SSP_APP.TB_PR_MRO_PRD_INFO        C
			            ON 0=0
			           AND C.CO_CD          = A.CO_CD
			           AND C.PRD_ID         = A.PRD_ID
			          LEFT JOIN SSP_APP.TB_PR_MNFR_INFO           E
			            ON 0=0
			           AND E.CO_CD          = C.CO_CD
			           AND E.MNFR_NO        = C.MNFR_NO
			          LEFT JOIN SSP_APP.TB_PR_PRD_INFO            G
			            ON 0=0
			           AND G.CO_CD          = C.CO_CD
			           AND G.PRD_ID         = C.PRD_ID
			          LEFT JOIN SSP_CMS.CVW_FV_CHEM_RESTRICT_INFO I
			            ON 0=0
			           AND I.CAS_NO = A.CAS_NO
		]]>
		           <if test="PRD_ID_CNT > 0">
		             INNER JOIN SSP_APP.TB_OD_ODR_INQ_TGT_DTLS    S2
		                ON 0=0
		               AND S2.SES_ID                   = #{SES_ID}
		               AND S2.INQ_COND_DTLS            = #{INQ_COND_DTLS}
		               AND S2.COL_ITM                  = 'PRD_ID'
		               AND LPAD(S2.COND_DATA_VAL,18,0) = A.PRD_ID
		           </if>
		           <if test="CAS_NO_CNT > 0">
		             INNER JOIN SSP_APP.TB_OD_ODR_INQ_TGT_DTLS    S3
		                ON 0=0
		               AND S3.SES_ID        = #{SES_ID}
		               AND S3.INQ_COND_DTLS = #{INQ_COND_DTLS}
		               AND S3.COL_ITM       = 'CAS_NO'
		               AND S3.COND_DATA_VAL = A.CAS_NO
		           </if>
		           <if test="MNFR_NO_CNT > 0">
		            INNER JOIN SSP_APP.TB_OD_ODR_INQ_TGT_DTLS     S4
		               ON 0=0
		              AND S4.SES_ID        = #{SES_ID}
		              AND S4.INQ_COND_DTLS = #{INQ_COND_DTLS}
		              AND S4.COL_ITM       = 'MNFR_NO'
		              AND S4.COND_DATA_VAL = C.MNFR_NO
		           </if>
		           <if test="PRD_CLCD_CNT > 0">
		            INNER JOIN SSP_APP.TB_OD_ODR_INQ_TGT_DTLS     S5
		               ON 0=0
		              AND S5.SES_ID        = #{SES_ID}
		              AND S5.INQ_COND_DTLS = #{INQ_COND_DTLS}
		              AND S5.COL_ITM       = 'PRD_CLCD'
		              AND S5.COND_DATA_VAL = G.PRD_CLCD
		           </if>
		            WHERE 0=0
              <if test="CO_CD != null and CO_CD != ''">
		          <![CDATA[
		              AND A.CO_CD       = #{CO_CD}
		          ]]>
		      </if>
		<![CDATA[
			          AND C.MALL_SPR_CD = '20'
			       ) A1
             WHERE 1=1
               AND A1.CAS_RN_DUP_ORDER = 1
               AND A1.CAS_RN           = 1
        ]]>
       <if test="DT_SPR != null and DT_SPR != ''">
	        <if test="DT_SPR == 'REG_DTM'">
	           AND A1.REG_DTM BETWEEN TO_CHAR(TO_DATE(#{DATE_FR_DT},'YYYYMMDD'),'YYYY.MM.DD') || ' 00:00:00'
	                              AND TO_CHAR(TO_DATE(#{DATE_TO_DT},'YYYYMMDD'),'YYYY.MM.DD') || ' 23:59:59'
	        </if>
	        <if test="DT_SPR == 'UPD_DTM'">
	           AND A1.UPD_DTM BETWEEN TO_CHAR(TO_DATE(#{DATE_FR_DT},'YYYYMMDD'),'YYYY.MM.DD') || ' 00:00:00'
	                              AND TO_CHAR(TO_DATE(#{DATE_TO_DT},'YYYYMMDD'),'YYYY.MM.DD') || ' 23:59:59'
	        </if>
        </if>
    </select>

    <select id="selectChmMtlInfoMngCasNoCount" parameterType="HashMap" resultType="Integer">
        /* ChmMtlInfoMng.selectChmMtlInfoMngCasNoCount 화학물질정보관리카스정보 카운트 조회 */
        <![CDATA[
            SELECT NVL(MAX(A1.CAS_RN),1) AS CAS_RN 
			  FROM (
			        SELECT /*+ USE_INDEX(A TB_PR_PRD_CHM_MTL_DTLS_PK) */
			               TO_CHAR(MIN(A.REG_DTM) OVER (PARTITION BY A.CO_CD,A.PRD_ID),'YYYY.MM.DD HH24:MI:SS') AS REG_DTM                /*등록일*/
                         , TO_CHAR(MAX(A.UPD_DTM) OVER (PARTITION BY A.CO_CD,A.PRD_ID),'YYYY.MM.DD HH24:MI:SS') AS UPD_DTM                /*수정일*/
                         , DENSE_RANK() OVER (PARTITION BY A.CO_CD,A.PRD_ID ORDER BY A.CAS_NO)                  AS CAS_RN
                         , ROW_NUMBER() OVER (PARTITION BY A.CO_CD,A.PRD_ID,A.CAS_NO ORDER BY 1)                AS CAS_RN_DUP_ORDER
			          FROM SSP_APP.TB_PR_PRD_CHM_MTL_DTLS         A
			          LEFT JOIN SSP_CMS.SCT_CHEM                  B
			            ON 0=0
			           AND B.CAS_NO         = A.CAS_NO
			           AND B.IS_DELETE      = 0
			           AND B.IS_ENABLE      = 1
			           AND B.CLOSE_DATE     = '99991231235959'
			          LEFT JOIN SSP_APP.TB_PR_MRO_PRD_INFO        C
			            ON 0=0
			           AND C.CO_CD          = A.CO_CD
			           AND C.PRD_ID         = A.PRD_ID
			          LEFT JOIN SSP_APP.TB_PR_MNFR_INFO           E
			            ON 0=0
			           AND E.CO_CD          = C.CO_CD
			           AND E.MNFR_NO        = C.MNFR_NO
			          LEFT JOIN SSP_APP.TB_PR_PRD_INFO            G
			            ON 0=0
			           AND G.CO_CD          = C.CO_CD
			           AND G.PRD_ID         = C.PRD_ID
			          LEFT JOIN SSP_CMS.CVW_FV_CHEM_RESTRICT_INFO I
			            ON 0=0
			           AND I.CAS_NO = A.CAS_NO
		]]>
		           <if test="PRD_ID_CNT > 0">
		             INNER JOIN SSP_APP.TB_OD_ODR_INQ_TGT_DTLS    S2
		                ON 0=0
		               AND S2.SES_ID                   = #{SES_ID}
		               AND S2.INQ_COND_DTLS            = #{INQ_COND_DTLS}
		               AND S2.COL_ITM                  = 'PRD_ID'
		               AND LPAD(S2.COND_DATA_VAL,18,0) = A.PRD_ID
		           </if>
		           <if test="CAS_NO_CNT > 0">
		             INNER JOIN SSP_APP.TB_OD_ODR_INQ_TGT_DTLS    S3
		                ON 0=0
		               AND S3.SES_ID        = #{SES_ID}
		               AND S3.INQ_COND_DTLS = #{INQ_COND_DTLS}
		               AND S3.COL_ITM       = 'CAS_NO'
		               AND S3.COND_DATA_VAL = A.CAS_NO
		           </if>
		           <if test="MNFR_NO_CNT > 0">
		            INNER JOIN SSP_APP.TB_OD_ODR_INQ_TGT_DTLS     S4
		               ON 0=0
		              AND S4.SES_ID        = #{SES_ID}
		              AND S4.INQ_COND_DTLS = #{INQ_COND_DTLS}
		              AND S4.COL_ITM       = 'MNFR_NO'
		              AND S4.COND_DATA_VAL = C.MNFR_NO
		           </if>
		           <if test="PRD_CLCD_CNT > 0">
		            INNER JOIN SSP_APP.TB_OD_ODR_INQ_TGT_DTLS     S5
		               ON 0=0
		              AND S5.SES_ID        = #{SES_ID}
		              AND S5.INQ_COND_DTLS = #{INQ_COND_DTLS}
		              AND S5.COL_ITM       = 'PRD_CLCD'
		              AND S5.COND_DATA_VAL = G.PRD_CLCD
		           </if>
		            WHERE 0=0
              <if test="CO_CD != null and CO_CD != ''">
		          <![CDATA[
		              AND A.CO_CD       = #{CO_CD}
		          ]]>
		      </if>
		<![CDATA[
			          AND C.MALL_SPR_CD = '20'
			       ) A1
             WHERE 1=1
               AND A1.CAS_RN_DUP_ORDER = 1
        ]]>
       <if test="DT_SPR != null and DT_SPR != ''">
	        <if test="DT_SPR == 'REG_DTM'">
	           AND A1.REG_DTM BETWEEN TO_CHAR(TO_DATE(#{DATE_FR_DT},'YYYYMMDD'),'YYYY.MM.DD') || ' 00:00:00'
	                              AND TO_CHAR(TO_DATE(#{DATE_TO_DT},'YYYYMMDD'),'YYYY.MM.DD') || ' 23:59:59'
	        </if>
	        <if test="DT_SPR == 'UPD_DTM'">
	           AND A1.UPD_DTM BETWEEN TO_CHAR(TO_DATE(#{DATE_FR_DT},'YYYYMMDD'),'YYYY.MM.DD') || ' 00:00:00'
	                              AND TO_CHAR(TO_DATE(#{DATE_TO_DT},'YYYYMMDD'),'YYYY.MM.DD') || ' 23:59:59'
	        </if>
        </if>
    </select>

    <select id="selectChmMtlInfoMngCasno" parameterType="HashMap" resultType="HashMap">
        /* ChmMtlInfoMng.selectChmMtlInfoMngCasno 화학물질정보관리 목록 조회 CAS NO */
        <![CDATA[
            SELECT CO_CD                  AS CO_CD                  /*회사코드*/
                 , PRD_ID                 AS PRD_ID                /*상품코드*/
                 , PRD_NM                 AS PRD_NM                /*상품명*/
                 , MNFR_NO                AS MNFR_NO               /*제조원*/
                 , MNFR_NM                AS MNFR_NM               /*제조사명*/
                 , PRD_CLCD               AS PRD_CLCD              /*카테고리ID*/
                 , PRD_CLSF_NM            AS PRD_CLSF_NM           /*카테고리*/
                 , MTL_GRAVITY            AS MTL_GRAVITY           /*물질비중*/
                 , PHASE_SPR_CD           AS PHASE_SPR_CD          /*성상*/
                 , REG_DTM                AS REG_DTM               /*등록일*/
                 , UPD_DTM                AS UPD_DTM               /*수정일*/
                 , UPDPSN_ID              AS UPDPSN_ID             /*수정자ID*/
                 , NEW_CHM_MTL            AS NEW_CHM_MTL           /*신규화학물질*/
                 , REG_TGT_EXST_CHM_MTL   AS REG_TGT_EXST_CHM_MTL  /*등록대상기존화학물질*/
                 , TOXIC_MTL1             AS TOXIC_MTL1            /*유독물질*/
                 , PERMIT_MTL1            AS PERMIT_MTL1           /*허가물질*/
                 , LMT_MTL1               AS LMT_MTL1              /*제한물질*/
                 , PHBT_MTL1              AS PHBT_MTL1             /*금지물질*/
                 , ACCD_PSB_MTL1          AS ACCD_PSB_MTL1         /*사고대비물질*/
                 , PRT_INV_TGT_MTL1       AS PRT_INV_TGT_MTL1      /*배출량조사대상물질*/
                 , WRK_ENV_TGT_HRM_ARG2   AS WRK_ENV_TGT_HRM_ARG2  /*작업환경측정대상유해인자*/
                 , SPC_HLTH_TGT_HRM_ARG2  AS SPC_HLTH_TGT_HRM_ARG2 /*특수건강진단대상유해인자*/
                 , EXPS_BSS_SET_MTL2      AS EXPS_BSS_SET_MTL2     /*노출기준설정물질*/
                 , MNG_TGT_HRM_MTL2       AS MNG_TGT_HRM_MTL2      /*관리대상유해물질*/
                 , PERMIT_MTL2            AS PERMIT_MTL2           /*허가물질*/
                 , PHBT_MTL2              AS PHBT_MTL2             /*금지물질*/
                 , SPCL_MNG_TGT_MTL2      AS SPCL_MNG_TGT_MTL2     /*특별관리대상물질*/
                 , PSM_TGT_MTL2           AS PSM_TGT_MTL2          /*PSM 대상물질*/
                 , TOXIC_MTL13            AS TOXIC_MTL13           /*마약*/
                 , TOXIC_MTL23            AS TOXIC_MTL23           /*향정신성의약품*/
                 , TOXIC_MTL33            AS TOXIC_MTL33           /*화학적합성품*/
                 , TOXIC_MTL43            AS TOXIC_MTL43           /*마약류원료*/
                 , TOXIC_MTL53            AS TOXIC_MTL53           /*임시마약류*/
                 , CAS_RN                 AS CAS_RN                /*CAS NO 표시순서*/
                 , CAS_RN_DUP_ORDER       AS CAS_RN_DUP_ORDER      /*CAS NO 중복 ORDER*/
                 , CAS_ORDER              AS CAS_ORDER             /*ORDER*/
                 , CAS_NO                 AS CAS_NO                /*CAS NO*/
                 , CHM_MTL_NM             AS CHM_MTL_NM            /*화학물질명*/
                 , MIN_CONTENT            AS MIN_CONTENT           /*함량From*/
                 , MAX_CONTENT            AS MAX_CONTENT           /*함량To*/
		         , AVG_CONTENT            AS AVG_CONTENT           /*함량평균*/
		         , CAS_ORDER              AS CAS_ORDER             /*CAS NO 순서*/
              FROM (
                       SELECT A1.CO_CD                                                                  AS CO_CD
                            , A1.PRD_ID                                                                 AS PRD_ID
                            , A1.PRD_NM                                                                 AS PRD_NM
                            , A1.MNFR_NO                                                                AS MNFR_NO
                            , A1.MNFR_NM                                                                AS MNFR_NM
                            , A1.PRD_CLCD                                                               AS PRD_CLCD
                            , A1.PRD_CLSF_NM                                                            AS PRD_CLSF_NM
                            , A1.MTL_GRAVITY                                                            AS MTL_GRAVITY
                            , A1.PHASE_SPR_CD                                                           AS PHASE_SPR_CD
                            , A1.REG_DTM                                                                AS REG_DTM
                            , A1.UPD_DTM                                                                AS UPD_DTM
                            , A1.UPDPSN_ID                                                              AS UPDPSN_ID
                            , A1.NEW_CHM_MTL                                                            AS NEW_CHM_MTL
                            , A1.REG_TGT_EXST_CHM_MTL                                                   AS REG_TGT_EXST_CHM_MTL
                            , A1.TOXIC_MTL1                                                             AS TOXIC_MTL1
                            , A1.PERMIT_MTL1                                                            AS PERMIT_MTL1
                            , A1.LMT_MTL1                                                               AS LMT_MTL1
                            , A1.PHBT_MTL1                                                              AS PHBT_MTL1
                            , A1.ACCD_PSB_MTL1                                                          AS ACCD_PSB_MTL1
                            , A1.PRT_INV_TGT_MTL1                                                       AS PRT_INV_TGT_MTL1
                            , A1.WRK_ENV_TGT_HRM_ARG2                                                   AS WRK_ENV_TGT_HRM_ARG2
                            , A1.SPC_HLTH_TGT_HRM_ARG2                                                  AS SPC_HLTH_TGT_HRM_ARG2
                            , A1.EXPS_BSS_SET_MTL2                                                      AS EXPS_BSS_SET_MTL2
                            , A1.MNG_TGT_HRM_MTL2                                                       AS MNG_TGT_HRM_MTL2
                            , A1.PERMIT_MTL2                                                            AS PERMIT_MTL2
                            , A1.PHBT_MTL2                                                              AS PHBT_MTL2
                            , A1.SPCL_MNG_TGT_MTL2                                                      AS SPCL_MNG_TGT_MTL2
                            , A1.PSM_TGT_MTL2                                                           AS PSM_TGT_MTL2
                            , A1.TOXIC_MTL13                                                            AS TOXIC_MTL13
                            , A1.TOXIC_MTL23                                                            AS TOXIC_MTL23
                            , A1.TOXIC_MTL33                                                            AS TOXIC_MTL33
                            , A1.TOXIC_MTL43                                                            AS TOXIC_MTL43
                            , A1.TOXIC_MTL53                                                            AS TOXIC_MTL53
                            , A1.CAS_RN                                                                 AS CAS_RN
                            , A1.CAS_RN_DUP_ORDER                                                       AS CAS_RN_DUP_ORDER
                            , A1.CAS_NO                                                                 AS CAS_NO
                            , MAX(A1.CHM_MTL_NM) OVER (PARTITION BY A1.CO_CD,A1.PRD_ID,A1.CAS_NO)       AS CHM_MTL_NM
                            , MAX(A1.MIN_CONTENT) OVER (PARTITION BY A1.CO_CD,A1.PRD_ID,A1.CAS_NO)      AS MIN_CONTENT
                            , MAX(A1.MAX_CONTENT) OVER (PARTITION BY A1.CO_CD,A1.PRD_ID,A1.CAS_NO)      AS MAX_CONTENT
                            , (MAX(A1.MIN_CONTENT) OVER (PARTITION BY A1.CO_CD,A1.PRD_ID,A1.CAS_NO) +
                              MAX(A1.MAX_CONTENT) OVER (PARTITION BY A1.CO_CD,A1.PRD_ID,A1.CAS_NO))/2   AS AVG_CONTENT
                            , ROW_NUMBER() OVER (PARTITION BY A1.CO_CD,A1.PRD_ID,A1.CAS_NO ORDER BY 1)  AS CAS_ORDER
                         FROM (
                                  SELECT /*+ USE_INDEX(A TB_PR_PRD_CHM_MTL_DTLS_PK) */
                                         A.CO_CD                                                                                                                          AS CO_CD                   /*회사코드*/
                                       , TO_CHAR(TO_NUMBER(A.PRD_ID))                                                                                                     AS PRD_ID                  /*상품코드*/
                                       , A.CAS_NO                                                                                                                         AS CAS_NO                  /*CAS-NO*/
                                       , A.CHM_MTL_NM                                                                                                                     AS CHM_MTL_NM              /*물질명*/
                                       , A.MIN_CONTENT                                                                                                                    AS MIN_CONTENT             /*최소함량*/
                                       , A.MAX_CONTENT                                                                                                                    AS MAX_CONTENT             /*최대함량*/
                                       , C.PRD_NM                                                                                                                         AS PRD_NM                  /*상품명*/
                                       , C.MNFR_NO                                                                                                                        AS MNFR_NO                 /*제조원*/
                                       , E.MNFR_NM                                                                                                                        AS MNFR_NM                 /*제조사명*/
                                       , G.PRD_CLCD                                                                                                                       AS PRD_CLCD                /*카테고리ID*/
                                       , H.PRD_CLSF_NM                                                                                                                    AS PRD_CLSF_NM             /*카테고리*/
                                       , C.MTL_GRAVITY                                                                                                                    AS MTL_GRAVITY             /*물질비중*/
                                       , C.PHASE_SPR_CD                                                                                                                   AS PHASE_SPR_CD            /*성상*/
                                       , TO_CHAR(A.REG_DTM,'YYYY.MM.DD HH24:MI:SS')                                                                                       AS REG_DTM                 /*등록일*/
                                       , TO_CHAR(A.UPD_DTM,'YYYY.MM.DD HH24:MI:SS')                                                                                       AS UPD_DTM                 /*수정일*/
                                       , A.UPDPSN_ID                                                                                                                      AS UPDPSN_ID               /*수정자ID*/
                                       /* 신규화학물질: CVW_FV_CHEM_RESTRICT_INFO는 없고 SCT_CHEM에는 있는경우*/
                                       , CASE WHEN NVL(MAX(DECODE(I.MNG_CD,'101','Y')) OVER (PARTITION BY A.CO_CD,A.PRD_ID),'N')='N' AND B.CAS_NO IS NOT NULL
                                              THEN 'Y' ELSE 'N' END                                                                                                       AS NEW_CHM_MTL            /*신규화학물질*/
                                       , NVL(MAX(CASE WHEN I.MNG_CD='102'AND NVL(I.HAMRYANG,0) <= A.MAX_CONTENT THEN 'Y' END) OVER (PARTITION BY A.CO_CD,A.PRD_ID,A.CAS_NO),'N') AS REG_TGT_EXST_CHM_MTL   /*등록대상기존화학물질*/
                                       , NVL(MAX(CASE WHEN I.MNG_CD='103'AND NVL(I.HAMRYANG,0) <= A.MAX_CONTENT THEN 'Y' END) OVER (PARTITION BY A.CO_CD,A.PRD_ID,A.CAS_NO),'N') AS TOXIC_MTL1             /*유독물질*/
                                       , NVL(MAX(CASE WHEN I.MNG_CD='104'AND NVL(I.HAMRYANG,0) <= A.MAX_CONTENT THEN 'Y' END) OVER (PARTITION BY A.CO_CD,A.PRD_ID,A.CAS_NO),'N') AS PERMIT_MTL1            /*허가물질*/
                                       , NVL(MAX(CASE WHEN I.MNG_CD='105'AND NVL(I.HAMRYANG,0) <= A.MAX_CONTENT THEN 'Y' END) OVER (PARTITION BY A.CO_CD,A.PRD_ID,A.CAS_NO),'N') AS LMT_MTL1               /*제한물질*/
                                       , NVL(MAX(CASE WHEN I.MNG_CD='106'AND NVL(I.HAMRYANG,0) <= A.MAX_CONTENT THEN 'Y' END) OVER (PARTITION BY A.CO_CD,A.PRD_ID,A.CAS_NO),'N') AS PHBT_MTL1              /*금지물질*/
                                       , NVL(MAX(CASE WHEN I.MNG_CD='107'AND NVL(I.HAMRYANG,0) <= A.MAX_CONTENT THEN 'Y' END) OVER (PARTITION BY A.CO_CD,A.PRD_ID,A.CAS_NO),'N') AS ACCD_PSB_MTL1          /*사고대비물질*/
                                       , NVL(MAX(CASE WHEN I.MNG_CD='108'AND NVL(I.HAMRYANG,0) <= A.MAX_CONTENT THEN 'Y' END) OVER (PARTITION BY A.CO_CD,A.PRD_ID,A.CAS_NO),'N') AS PRT_INV_TGT_MTL1       /*배출량조사대상물질*/
                                       , NVL(MAX(CASE WHEN I.MNG_CD='201'AND NVL(I.HAMRYANG,0) <= A.MAX_CONTENT THEN 'Y' END) OVER (PARTITION BY A.CO_CD,A.PRD_ID,A.CAS_NO),'N') AS WRK_ENV_TGT_HRM_ARG2   /*작업환경측정대상유해인자*/
                                       , NVL(MAX(CASE WHEN I.MNG_CD='202'AND NVL(I.HAMRYANG,0) <= A.MAX_CONTENT THEN 'Y' END) OVER (PARTITION BY A.CO_CD,A.PRD_ID,A.CAS_NO),'N') AS SPC_HLTH_TGT_HRM_ARG2  /*특수건강진단대상유해인자*/
                                       , NVL(MAX(CASE WHEN I.MNG_CD='203'AND NVL(I.HAMRYANG,0) <= A.MAX_CONTENT THEN 'Y' END) OVER (PARTITION BY A.CO_CD,A.PRD_ID,A.CAS_NO),'N') AS EXPS_BSS_SET_MTL2      /*노출기준설정물질*/
                                       , NVL(MAX(CASE WHEN I.MNG_CD='204'AND NVL(I.HAMRYANG,0) <= A.MAX_CONTENT THEN 'Y' END) OVER (PARTITION BY A.CO_CD,A.PRD_ID,A.CAS_NO),'N') AS MNG_TGT_HRM_MTL2       /*관리대상유해물질*/
                                       , NVL(MAX(CASE WHEN I.MNG_CD='205'AND NVL(I.HAMRYANG,0) <= A.MAX_CONTENT THEN 'Y' END) OVER (PARTITION BY A.CO_CD,A.PRD_ID,A.CAS_NO),'N') AS PERMIT_MTL2            /*허가물질*/
                                       , NVL(MAX(CASE WHEN I.MNG_CD='206'AND NVL(I.HAMRYANG,0) <= A.MAX_CONTENT THEN 'Y' END) OVER (PARTITION BY A.CO_CD,A.PRD_ID,A.CAS_NO),'N') AS PHBT_MTL2              /*금지물질*/
                                       , NVL(MAX(CASE WHEN I.MNG_CD='207'AND NVL(I.HAMRYANG,0) <= A.MAX_CONTENT THEN 'Y' END) OVER (PARTITION BY A.CO_CD,A.PRD_ID,A.CAS_NO),'N') AS SPCL_MNG_TGT_MTL2      /*특별관리대상물질*/
                                       , NVL(MAX(CASE WHEN I.MNG_CD='208'AND NVL(I.HAMRYANG,0) <= A.MAX_CONTENT THEN 'Y' END) OVER (PARTITION BY A.CO_CD,A.PRD_ID,A.CAS_NO),'N') AS PSM_TGT_MTL2           /*PSM 대상물질*/
                                       , NVL(MAX(CASE WHEN I.MNG_CD='301'AND NVL(I.HAMRYANG,0) <= A.MAX_CONTENT THEN 'Y' END) OVER (PARTITION BY A.CO_CD,A.PRD_ID,A.CAS_NO),'N') AS TOXIC_MTL13            /*마약*/
                                       , NVL(MAX(CASE WHEN I.MNG_CD='301'AND NVL(I.HAMRYANG,0) <= A.MAX_CONTENT THEN 'Y' END) OVER (PARTITION BY A.CO_CD,A.PRD_ID,A.CAS_NO),'N') AS TOXIC_MTL23            /*향정신성의약품*/
                                       , NVL(MAX(CASE WHEN I.MNG_CD='302'AND NVL(I.HAMRYANG,0) <= A.MAX_CONTENT THEN 'Y' END) OVER (PARTITION BY A.CO_CD,A.PRD_ID,A.CAS_NO),'N') AS TOXIC_MTL33            /*화학적합성품*/
                                       , NVL(MAX(CASE WHEN I.MNG_CD='303'AND NVL(I.HAMRYANG,0) <= A.MAX_CONTENT THEN 'Y' END) OVER (PARTITION BY A.CO_CD,A.PRD_ID,A.CAS_NO),'N') AS TOXIC_MTL43            /*마약류원료*/
                                       , NVL(MAX(CASE WHEN I.MNG_CD='304'AND NVL(I.HAMRYANG,0) <= A.MAX_CONTENT THEN 'Y' END) OVER (PARTITION BY A.CO_CD,A.PRD_ID,A.CAS_NO),'N') AS TOXIC_MTL53            /*임시마약류*/
                                       , DENSE_RANK() OVER (PARTITION BY A.CO_CD,A.PRD_ID ORDER BY A.CAS_NO)                                                              AS CAS_RN
                                       , ROW_NUMBER() OVER (PARTITION BY A.CO_CD,A.PRD_ID,A.CAS_NO ORDER BY 1)                                                            AS CAS_RN_DUP_ORDER
                                    FROM SSP_APP.TB_PR_PRD_CHM_MTL_DTLS         A
                                    LEFT JOIN SSP_CMS.SCT_CHEM                  B
                                      ON 0=0
                                     AND B.CAS_NO         = A.CAS_NO
                                     AND B.IS_DELETE      = 0
                                     AND B.IS_ENABLE      = 1
                                     AND B.CLOSE_DATE     = '99991231235959'
                                    LEFT JOIN SSP_APP.TB_PR_MRO_PRD_INFO        C
                                      ON 0=0
                                     AND C.CO_CD          = A.CO_CD
                                     AND C.PRD_ID         = A.PRD_ID
                                    LEFT JOIN SSP_APP.TB_PR_MNFR_INFO           E
                                      ON 0=0
                                     AND E.CO_CD         = C.CO_CD
                                     AND E.MNFR_NO       = C.MNFR_NO
                                    LEFT JOIN SSP_APP.TB_PR_PRD_INFO            G
                                      ON 0=0
                                     AND G.CO_CD          = C.CO_CD
                                     AND G.PRD_ID         = C.PRD_ID
                                    LEFT JOIN SSP_APP.TB_PR_PRD_CLSF_INFO       H
                                      ON 0=0
                                     AND H.CO_CD          = G.CO_CD
                                     AND H.PRD_CLCD       = G.PRD_CLCD
                                    LEFT JOIN SSP_CMS.CVW_FV_CHEM_RESTRICT_INFO I
                                      ON 0=0
                                     AND I.CAS_NO = A.CAS_NO
   ]]>
                               <if test="PRD_ID_CNT > 0">
		                           INNER JOIN SSP_APP.TB_OD_ODR_INQ_TGT_DTLS    S2
		                              ON 0=0
		                             AND S2.SES_ID        = #{SES_ID}
		                             AND S2.INQ_COND_DTLS = #{INQ_COND_DTLS}
		                             AND S2.COL_ITM       = 'PRD_ID'
		                             AND A.PRD_ID         = LPAD(S2.COND_DATA_VAL,18,0)
		                      </if>
		                      <if test="CAS_NO_CNT > 0">
		                           INNER JOIN SSP_APP.TB_OD_ODR_INQ_TGT_DTLS    S3
		                              ON 0=0
		                             AND S3.SES_ID        = #{SES_ID}
		                             AND S3.INQ_COND_DTLS = #{INQ_COND_DTLS}
		                             AND S3.COL_ITM       = 'CAS_NO'
		                             AND S3.COND_DATA_VAL = A.CAS_NO
		                      </if>
		                      <if test="MNFR_NO_CNT > 0">
		                          INNER JOIN SSP_APP.TB_OD_ODR_INQ_TGT_DTLS     S4
		                             ON 0=0
		                            AND S4.SES_ID        = #{SES_ID}
		                            AND S4.INQ_COND_DTLS = #{INQ_COND_DTLS}
		                            AND S4.COL_ITM       = 'MNFR_NO'
		                            AND S4.COND_DATA_VAL = C.MNFR_NO
		                      </if>
		                      <if test="PRD_CLCD_CNT > 0">
		                          INNER JOIN SSP_APP.TB_OD_ODR_INQ_TGT_DTLS     S5
		                             ON 0=0
		                            AND S5.SES_ID        = #{SES_ID}
		                            AND S5.INQ_COND_DTLS = #{INQ_COND_DTLS}
		                            AND S5.COL_ITM       = 'PRD_CLCD'
		                            AND S5.COND_DATA_VAL = G.PRD_CLCD
		                      </if>
			                      WHERE 0=0
			               <if test="CO_CD != null and CO_CD != ''">
			                   <![CDATA[
			                        AND A.CO_CD          = #{CO_CD}
			                   ]]>
			               </if>
                   <![CDATA[
                                    AND C.MALL_SPR_CD    = '20'
                              ) A1
                        WHERE 1=1
                          AND A1.CAS_RN_DUP_ORDER=1
                    ]]>
   		            <if test="DT_SPR != null and DT_SPR != ''">
		                <if test="DT_SPR == 'REG_DTM'">
		   	              AND A1.REG_DTM BETWEEN TO_CHAR(TO_DATE(#{DATE_FR_DT},'YYYYMMDD'),'YYYY.MM.DD') || ' 00:00:00' AND TO_CHAR(TO_DATE(#{DATE_TO_DT},'YYYYMMDD'),'YYYY.MM.DD') || ' 23:59:59'
		                </if>
		                <if test="DT_SPR == 'UPD_DTM'">
		   	              AND A1.UPD_DTM BETWEEN TO_CHAR(TO_DATE(#{DATE_FR_DT},'YYYYMMDD'),'YYYY.MM.DD') || ' 00:00:00' AND TO_CHAR(TO_DATE(#{DATE_TO_DT},'YYYYMMDD'),'YYYY.MM.DD') || ' 23:59:59'
		                </if>
                      </if>
                   ) A
<!--  2022-07-26 속도가 안나와서 SROT 기능 뺌.
              <choose>
                   <when test='(SORT_COLUMN != null and SORT_COLUMN != "") and (SORT_TYPE != null and SORT_TYPE != "")'>
               ORDER BY A.${SORT_COLUMN} ${SORT_TYPE}
                   </when>
                   <otherwise>
               ORDER BY A.CO_CD
                      , A.PRD_CLCD
                      , A.MNFR_NO
                   </otherwise>
               </choose>
-->
              OFFSET #{START_NUM} ROWS FETCH FIRST #{ROW_COUNT} ROWS ONLY
    </select>

    <select id="selectChmMtlInfoMngCasnoCount" parameterType="HashMap" resultType="Integer">
        /* ChmMtlInfoMng.selectChmMtlInfoMngCasnoCount 화학물질정보관리 목록 count 조회 CAS NO */
        <![CDATA[
            SELECT COUNT(1) AS CNT
              FROM (
                       SELECT A1.CO_CD                                                                 AS CO_CD
                            , A1.PRD_ID                                                                AS PRD_ID
                            , A1.PRD_NM                                                                AS PRD_NM
                            , A1.MNFR_NO                                                               AS MNFR_NO
                            , A1.MNFR_NM                                                               AS MNFR_NM
                            , A1.PRD_CLCD                                                              AS PRD_CLCD
                            , A1.PRD_CLSF_NM                                                           AS PRD_CLSF_NM
                            , A1.MTL_GRAVITY                                                           AS MTL_GRAVITY
                            , A1.PHASE_SPR_CD                                                          AS PHASE_SPR_CD
                            , A1.REG_DTM                                                               AS REG_DTM
                            , A1.UPD_DTM                                                               AS UPD_DTM
                            , A1.UPDPSN_ID                                                             AS UPDPSN_ID
                            , A1.NEW_CHM_MTL                                                           AS NEW_CHM_MTL
                            , A1.REG_TGT_EXST_CHM_MTL                                                  AS REG_TGT_EXST_CHM_MTL
                            , A1.TOXIC_MTL1                                                            AS TOXIC_MTL1
                            , A1.PERMIT_MTL1                                                           AS PERMIT_MTL1
                            , A1.LMT_MTL1                                                              AS LMT_MTL1
                            , A1.PHBT_MTL1                                                             AS PHBT_MTL1
                            , A1.ACCD_PSB_MTL1                                                         AS ACCD_PSB_MTL1
                            , A1.PRT_INV_TGT_MTL1                                                      AS PRT_INV_TGT_MTL1
                            , A1.WRK_ENV_TGT_HRM_ARG2                                                  AS WRK_ENV_TGT_HRM_ARG2
                            , A1.SPC_HLTH_TGT_HRM_ARG2                                                 AS SPC_HLTH_TGT_HRM_ARG2
                            , A1.EXPS_BSS_SET_MTL2                                                     AS EXPS_BSS_SET_MTL2
                            , A1.MNG_TGT_HRM_MTL2                                                      AS MNG_TGT_HRM_MTL2
                            , A1.PERMIT_MTL2                                                           AS PERMIT_MTL2
                            , A1.PHBT_MTL2                                                             AS PHBT_MTL2
                            , A1.SPCL_MNG_TGT_MTL2                                                     AS SPCL_MNG_TGT_MTL2
                            , A1.PSM_TGT_MTL2                                                          AS PSM_TGT_MTL2
                            , A1.TOXIC_MTL13                                                           AS TOXIC_MTL13
                            , A1.TOXIC_MTL23                                                           AS TOXIC_MTL23
                            , A1.TOXIC_MTL33                                                           AS TOXIC_MTL33
                            , A1.TOXIC_MTL43                                                           AS TOXIC_MTL43
                            , A1.TOXIC_MTL53                                                           AS TOXIC_MTL53
                            , A1.CAS_RN                                                                AS CAS_RN
                            , A1.CAS_RN_DUP_ORDER                                                      AS CAS_RN_DUP_ORDER
                            , A1.CAS_NO                                                                AS CAS_NO
                            , MAX(A1.CHM_MTL_NM) OVER (PARTITION BY A1.CO_CD,A1.PRD_ID,A1.CAS_NO)      AS CHM_MTL_NM
                            , MAX(A1.MIN_CONTENT) OVER (PARTITION BY A1.CO_CD,A1.PRD_ID,A1.CAS_NO)     AS MIN_CONTENT
                            , MAX(A1.MAX_CONTENT) OVER (PARTITION BY A1.CO_CD,A1.PRD_ID,A1.CAS_NO)     AS MAX_CONTENT
                            , (MAX(A1.MIN_CONTENT) OVER (PARTITION BY A1.CO_CD,A1.PRD_ID,A1.CAS_NO) +
                               MAX(A1.MAX_CONTENT) OVER (PARTITION BY A1.CO_CD,A1.PRD_ID,A1.CAS_NO))/2 AS AVG_CONTENT
                            , ROW_NUMBER() OVER (PARTITION BY A1.CO_CD,A1.PRD_ID,A1.CAS_NO ORDER BY 1) AS CAS_ORDER
                         FROM (
                                  SELECT /*+ USE_INDEX(A TB_PR_PRD_CHM_MTL_DTLS_PK) */
                                         A.CO_CD                                                                                                                          AS CO_CD                 /*회사코드*/
                                       , A.PRD_ID                                                                                                                         AS PRD_ID                /*상품코드*/
                                       , A.CAS_NO                                                                                                                         AS CAS_NO                /*CAS-NO*/
                                       , A.CHM_MTL_NM                                                                                                                     AS CHM_MTL_NM            /*물질명*/
                                       , A.MIN_CONTENT                                                                                                                    AS MIN_CONTENT           /*최소함량*/
                                       , A.MAX_CONTENT                                                                                                                    AS MAX_CONTENT           /*최대함량*/
                                       , C.PRD_NM                                                                                                                         AS PRD_NM                /*상품명*/
                                       , C.MNFR_NO                                                                                                                        AS MNFR_NO               /*제조원*/
                                       , E.MNFR_NM                                                                                                                        AS MNFR_NM               /*제조사명*/
                                       , G.PRD_CLCD                                                                                                                       AS PRD_CLCD              /*카테고리ID*/
                                       , H.PRD_CLSF_NM                                                                                                                    AS PRD_CLSF_NM           /*카테고리*/
                                       , C.MTL_GRAVITY                                                                                                                    AS MTL_GRAVITY           /*물질비중*/
                                       , C.PHASE_SPR_CD                                                                                                                   AS PHASE_SPR_CD          /*성상*/
                                       , TO_CHAR(A.REG_DTM,'YYYY.MM.DD HH24:MI:SS')                                                                                       AS REG_DTM               /*등록일*/
                                       , TO_CHAR(A.UPD_DTM,'YYYY.MM.DD HH24:MI:SS')                                                                                       AS UPD_DTM               /*수정일*/
                                       , A.UPDPSN_ID                                                                                                                      AS UPDPSN_ID             /*수정자ID*/
                                       /* 신규화학물질: CVW_FV_CHEM_RESTRICT_INFO는 없고 SCT_CHEM에는 있는경우 */
                                       , CASE WHEN NVL(MAX(DECODE(I.MNG_CD,'101','Y')) OVER (PARTITION BY A.CO_CD,A.PRD_ID),'N')='N' AND B.CAS_NO IS NOT NULL
                                              THEN 'Y' ELSE 'N' END                                                                                                       AS NEW_CHM_MTL           /*신규화학물질*/
                                       , NVL(MAX(CASE WHEN I.MNG_CD='102'AND NVL(I.HAMRYANG,0) <= A.MAX_CONTENT THEN 'Y' END) OVER (PARTITION BY A.CO_CD,A.PRD_ID,A.CAS_NO),'N') AS REG_TGT_EXST_CHM_MTL  /*등록대상기존화학물질*/
                                       , NVL(MAX(CASE WHEN I.MNG_CD='103'AND NVL(I.HAMRYANG,0) <= A.MAX_CONTENT THEN 'Y' END) OVER (PARTITION BY A.CO_CD,A.PRD_ID,A.CAS_NO),'N') AS TOXIC_MTL1            /*유독물질*/
                                       , NVL(MAX(CASE WHEN I.MNG_CD='104'AND NVL(I.HAMRYANG,0) <= A.MAX_CONTENT THEN 'Y' END) OVER (PARTITION BY A.CO_CD,A.PRD_ID,A.CAS_NO),'N') AS PERMIT_MTL1           /*허가물질*/
                                       , NVL(MAX(CASE WHEN I.MNG_CD='105'AND NVL(I.HAMRYANG,0) <= A.MAX_CONTENT THEN 'Y' END) OVER (PARTITION BY A.CO_CD,A.PRD_ID,A.CAS_NO),'N') AS LMT_MTL1              /*제한물질*/
                                       , NVL(MAX(CASE WHEN I.MNG_CD='106'AND NVL(I.HAMRYANG,0) <= A.MAX_CONTENT THEN 'Y' END) OVER (PARTITION BY A.CO_CD,A.PRD_ID,A.CAS_NO),'N') AS PHBT_MTL1             /*금지물질*/
                                       , NVL(MAX(CASE WHEN I.MNG_CD='107'AND NVL(I.HAMRYANG,0) <= A.MAX_CONTENT THEN 'Y' END) OVER (PARTITION BY A.CO_CD,A.PRD_ID,A.CAS_NO),'N') AS ACCD_PSB_MTL1         /*사고대비물질*/
                                       , NVL(MAX(CASE WHEN I.MNG_CD='108'AND NVL(I.HAMRYANG,0) <= A.MAX_CONTENT THEN 'Y' END) OVER (PARTITION BY A.CO_CD,A.PRD_ID,A.CAS_NO),'N') AS PRT_INV_TGT_MTL1      /*배출량조사대상물질*/
                                       , NVL(MAX(CASE WHEN I.MNG_CD='201'AND NVL(I.HAMRYANG,0) <= A.MAX_CONTENT THEN 'Y' END) OVER (PARTITION BY A.CO_CD,A.PRD_ID,A.CAS_NO),'N') AS WRK_ENV_TGT_HRM_ARG2  /*작업환경측정대상유해인자*/
                                       , NVL(MAX(CASE WHEN I.MNG_CD='202'AND NVL(I.HAMRYANG,0) <= A.MAX_CONTENT THEN 'Y' END) OVER (PARTITION BY A.CO_CD,A.PRD_ID,A.CAS_NO),'N') AS SPC_HLTH_TGT_HRM_ARG2 /*특수건강진단대상유해인자*/
                                       , NVL(MAX(CASE WHEN I.MNG_CD='203'AND NVL(I.HAMRYANG,0) <= A.MAX_CONTENT THEN 'Y' END) OVER (PARTITION BY A.CO_CD,A.PRD_ID,A.CAS_NO),'N') AS EXPS_BSS_SET_MTL2     /*노출기준설정물질*/
                                       , NVL(MAX(CASE WHEN I.MNG_CD='204'AND NVL(I.HAMRYANG,0) <= A.MAX_CONTENT THEN 'Y' END) OVER (PARTITION BY A.CO_CD,A.PRD_ID,A.CAS_NO),'N') AS MNG_TGT_HRM_MTL2      /*관리대상유해물질*/
                                       , NVL(MAX(CASE WHEN I.MNG_CD='205'AND NVL(I.HAMRYANG,0) <= A.MAX_CONTENT THEN 'Y' END) OVER (PARTITION BY A.CO_CD,A.PRD_ID,A.CAS_NO),'N') AS PERMIT_MTL2           /*허가물질*/
                                       , NVL(MAX(CASE WHEN I.MNG_CD='206'AND NVL(I.HAMRYANG,0) <= A.MAX_CONTENT THEN 'Y' END) OVER (PARTITION BY A.CO_CD,A.PRD_ID,A.CAS_NO),'N') AS PHBT_MTL2             /*금지물질*/
                                       , NVL(MAX(CASE WHEN I.MNG_CD='207'AND NVL(I.HAMRYANG,0) <= A.MAX_CONTENT THEN 'Y' END) OVER (PARTITION BY A.CO_CD,A.PRD_ID,A.CAS_NO),'N') AS SPCL_MNG_TGT_MTL2     /*특별관리대상물질*/
                                       , NVL(MAX(CASE WHEN I.MNG_CD='208'AND NVL(I.HAMRYANG,0) <= A.MAX_CONTENT THEN 'Y' END) OVER (PARTITION BY A.CO_CD,A.PRD_ID,A.CAS_NO),'N') AS PSM_TGT_MTL2          /*PSM 대상물질*/
                                       , NVL(MAX(CASE WHEN I.MNG_CD='301'AND NVL(I.HAMRYANG,0) <= A.MAX_CONTENT THEN 'Y' END) OVER (PARTITION BY A.CO_CD,A.PRD_ID,A.CAS_NO),'N') AS TOXIC_MTL13           /*마약*/
                                       , NVL(MAX(CASE WHEN I.MNG_CD='301'AND NVL(I.HAMRYANG,0) <= A.MAX_CONTENT THEN 'Y' END) OVER (PARTITION BY A.CO_CD,A.PRD_ID,A.CAS_NO),'N') AS TOXIC_MTL23           /*향정신성의약품*/
                                       , NVL(MAX(CASE WHEN I.MNG_CD='302'AND NVL(I.HAMRYANG,0) <= A.MAX_CONTENT THEN 'Y' END) OVER (PARTITION BY A.CO_CD,A.PRD_ID,A.CAS_NO),'N') AS TOXIC_MTL33           /*화학적합성품*/
                                       , NVL(MAX(CASE WHEN I.MNG_CD='303'AND NVL(I.HAMRYANG,0) <= A.MAX_CONTENT THEN 'Y' END) OVER (PARTITION BY A.CO_CD,A.PRD_ID,A.CAS_NO),'N') AS TOXIC_MTL43           /*마약류원료*/
                                       , NVL(MAX(CASE WHEN I.MNG_CD='304'AND NVL(I.HAMRYANG,0) <= A.MAX_CONTENT THEN 'Y' END) OVER (PARTITION BY A.CO_CD,A.PRD_ID,A.CAS_NO),'N') AS TOXIC_MTL53           /*임시마약류*/
                                       , DENSE_RANK() OVER (PARTITION BY A.CO_CD,A.PRD_ID ORDER BY A.CAS_NO)                                                              AS CAS_RN
                                       , ROW_NUMBER() OVER (PARTITION BY A.CO_CD,A.PRD_ID,A.CAS_NO ORDER BY 1)                                                            AS CAS_RN_DUP_ORDER
                                    FROM SSP_APP.TB_PR_PRD_CHM_MTL_DTLS         A
                                    LEFT JOIN SSP_CMS.SCT_CHEM                  B
                                      ON 0=0
                                     AND B.CAS_NO         = A.CAS_NO
                                     AND B.IS_DELETE      = 0
                                     AND B.IS_ENABLE      = 1
                                     AND B.CLOSE_DATE     = '99991231235959'
                                    LEFT JOIN SSP_APP.TB_PR_MRO_PRD_INFO        C
                                      ON 0=0
                                     AND C.CO_CD          = A.CO_CD
                                     AND C.PRD_ID         = A.PRD_ID
                                    LEFT JOIN SSP_APP.TB_PR_MNFR_INFO           E
                                      ON 0=0
                                     AND E.CO_CD          = C.CO_CD
                                     AND E.MNFR_NO        = C.MNFR_NO
                                    LEFT JOIN SSP_APP.TB_PR_PRD_INFO            G
                                      ON 0=0
                                     AND G.CO_CD          = C.CO_CD
                                     AND G.PRD_ID         = C.PRD_ID
                                    LEFT JOIN SSP_APP.TB_PR_PRD_CLSF_INFO       H
                                      ON 0=0
                                     AND H.CO_CD          = G.CO_CD
                                     AND H.PRD_CLCD       = G.PRD_CLCD
                                    LEFT JOIN SSP_CMS.CVW_FV_CHEM_RESTRICT_INFO I
                                      ON 0=0
                                     AND I.CAS_NO = A.CAS_NO
   ]]>
                             <if test="PRD_ID_CNT > 0">
	                  		       INNER JOIN SSP_APP.TB_OD_ODR_INQ_TGT_DTLS    S2
	                  		          ON 0=0
	                  		         AND S2.SES_ID        = #{SES_ID}
	                  		         AND S2.INQ_COND_DTLS = #{INQ_COND_DTLS}
	                  		         AND S2.COL_ITM       = 'PRD_ID'
	                  		         AND A.PRD_ID         = LPAD(S2.COND_DATA_VAL,18,0)
	                  		  </if>
	                  		  <if test="CAS_NO_CNT > 0">
	                  		       INNER JOIN SSP_APP.TB_OD_ODR_INQ_TGT_DTLS    S3
	                  		          ON 0=0
	                  		         AND S3.SES_ID        = #{SES_ID}
	                  		         AND S3.INQ_COND_DTLS = #{INQ_COND_DTLS}
	                  		         AND S3.COL_ITM       = 'CAS_NO'
	                  		         AND S3.COND_DATA_VAL = A.CAS_NO
	                  		  </if>
	                  		  <if test="MNFR_NO_CNT > 0">
	                  		      INNER JOIN SSP_APP.TB_OD_ODR_INQ_TGT_DTLS     S4
	                  		         ON 0=0
	                  		        AND S4.SES_ID        = #{SES_ID}
	                  		        AND S4.INQ_COND_DTLS = #{INQ_COND_DTLS}
	                  		        AND S4.COL_ITM       = 'MNFR_NO'
	                  		        AND S4.COND_DATA_VAL = C.MNFR_NO
	                  		  </if>
	                  		  <if test="PRD_CLCD_CNT > 0">
	                  		      INNER JOIN SSP_APP.TB_OD_ODR_INQ_TGT_DTLS     S5
	                  		         ON 0=0
	                  		        AND S5.SES_ID        = #{SES_ID}
	                  		        AND S5.INQ_COND_DTLS = #{INQ_COND_DTLS}
	                  		        AND S5.COL_ITM       = 'PRD_CLCD'
	                  		        AND S5.COND_DATA_VAL = G.PRD_CLCD
	                  		  </if>
	                  		      WHERE 0=0
	                  		  <if test="CO_CD != null and CO_CD != ''">
	                  		      <![CDATA[
	                  		       AND A.CO_CD           = #{CO_CD}
	                  		      ]]>
	                  		  </if>
         <![CDATA[
                                   AND C.MALL_SPR_CD     = '20'
                              ) A1
                        WHERE 1=1
                          AND A1.CAS_RN_DUP_ORDER=1
         ]]>
  	    	         <if test="DT_SPR != null and DT_SPR != ''">
  	    	             <if test="DT_SPR == 'REG_DTM'">
  	    	   	          AND A1.REG_DTM BETWEEN TO_CHAR(TO_DATE(#{DATE_FR_DT},'YYYYMMDD'),'YYYY.MM.DD') || ' 00:00:00' AND TO_CHAR(TO_DATE(#{DATE_TO_DT},'YYYYMMDD'),'YYYY.MM.DD') || ' 23:59:59'
  	    	             </if>
  	    	             <if test="DT_SPR == 'UPD_DTM'">
  	    	   	          AND A1.UPD_DTM BETWEEN TO_CHAR(TO_DATE(#{DATE_FR_DT},'YYYYMMDD'),'YYYY.MM.DD') || ' 00:00:00' AND TO_CHAR(TO_DATE(#{DATE_TO_DT},'YYYYMMDD'),'YYYY.MM.DD') || ' 23:59:59'
  	    	             </if>
                     </if>
                   )
    </select>

	<select id="selectChmMtlPrdInfoInq" parameterType="HashMap" resultType="HashMap">
        /* ChmMtlInfoMng.selectChmMtlPrdInfoInq 화학물질상품정보 조회 */
        <![CDATA[
            SELECT A.CO_CD                                                           AS CO_CD                 /*회사코드 PK*/
                 , TO_CHAR(TO_NUMBER(A.PRD_ID))                                      AS PRD_ID                /*상품ID PK*/
                 , A.PRD_NM                                                          AS PRD_NM                /*상품명*/
                 , A.MNFR_NO                                                         AS MNFR_NO               /*제조원NO */
                 , B.MNFR_NM                                                         AS MNFR_NM               /*제조원*/
                 , (
                    SELECT SSP_APP.FN_PR_ATTR_VAL_LIST
                           (
                             A.CO_CD
                           , A.PRD_ID
                           )
                      FROM DUAL
                   )                                                                 AS VAL_LIST              /*대표규격*/
                 , A.MTL_GRAVITY                                                     AS MTL_GRAVITY           /*물질비중*/
                 , A.PHASE_SPR_CD                                                    AS PHASE_SPR_CD          /*성상구분코드*/
                 , (
                    SELECT SSP_APP.FN_COM_DTL_CDNM
                           (
                             #{LANG_CD}
                           , 'PHASE_SPR_CD'
                           , A.PHASE_SPR_CD
                           )
                      FROM DUAL
                   )                                                                 AS PHASE_SPR_NM          /*성상명*/
                 , TO_CHAR(A.REG_DTM,'YYYY.MM.DD HH24:MI:SS')                        AS REG_DTM               /*등록일*/
                 , A.REGPSN_ID                                                       AS REGPSN_ID             /*등록자ID*/
                 , CASE WHEN A.REGPSN_ID IS NOT NULL
                        THEN '(' || A.REGPSN_ID || ') ' ||
                             (
                              SELECT B.OPRTR_NM
                                FROM SSP_APP.TB_CO_MBR_OPRTR_INFO B
                               WHERE B.CO_CD    = A.CO_CD
                                 AND B.OPRTR_ID = A.REGPSN_ID
                             )
                        ELSE ''
                   END                                                               AS REGPSN_NM             /*등록자*/
                 , TO_CHAR(A.UPD_DTM,'YYYY.MM.DD HH24:MI:SS')                        AS UPD_DTM               /*변경일*/
                 , A.UPDPSN_ID                                                       AS UPDPSN_ID             /*변경자ID*/
                 , CASE WHEN A.UPDPSN_ID IS NOT NULL
                        THEN '(' || A.UPDPSN_ID || ') ' ||
                             (
                              SELECT B.OPRTR_NM
                                FROM SSP_APP.TB_CO_MBR_OPRTR_INFO B
                               WHERE B.CO_CD    = A.CO_CD
                                 AND B.OPRTR_ID = A.UPDPSN_ID
                             )
                        ELSE ''
                   END                                                               AS UPDPSN_NM             /*변경자*/
                 , C.DOC_REG_ID                                                      AS PRD_DOC_REG_ID        /*상품 문서등록ID*/
                 , C.PRD_CLCD                                                        AS PRD_CLCD              /*카테고리ID*/
                 , D.PRD_CLSF_NM                                                     AS PRD_CLSF_NM           /*캍고리명*/
              FROM SSP_APP.TB_PR_MRO_PRD_INFO       A
              LEFT JOIN SSP_APP.TB_PR_MNFR_INFO     B
                ON 1=1
               AND B.CO_CD   = A.CO_CD
               AND B.MNFR_NO = A.MNFR_NO
              LEFT JOIN SSP_APP.TB_PR_PRD_INFO      C
                ON 1=1
               AND C.CO_CD  = A.CO_CD
               AND C.PRD_ID = A.PRD_ID
              LEFT JOIN SSP_APP.TB_PR_PRD_CLSF_INFO D
                ON 1=1
               AND D.CO_CD          = C.CO_CD
               AND D.PRD_CLCD       = C.PRD_CLCD
             WHERE 1=1
               AND A.CO_CD  = #{CO_CD}
               AND A.PRD_ID = LPAD(#{PRD_ID},18,0)
        ]]>
    </select>

	<select id="selectChmMtlInfoInq" parameterType="HashMap" resultType="HashMap">
		/* ChmMtlInfoMng.selectChmMtlInfoInq 화학물질정보 조회 */
		<![CDATA[
            SELECT '0'                                AS CHK                  /*CHK*/
                 , A1.CO_CD                           AS CO_CD                /*회사코드*/
                 , A1.PRD_ID                          AS PRD_ID               /*상품ID*/
                 , A1.CHM_MTL_ID                      AS CHM_MTL_ID           /*화학물질ID*/
                 , A1.ENG_CHM_MTL_NM                  AS ENG_CHM_MTL_NM       /*화학물질영문명*/
                 , A1.CHM_MTL_NM                      AS CHM_MTL_NM           /*화학물질명*/
                 , A1.CAS_NO                          AS CAS_NO               /*CAS_NO*/
                 , A1.CAS_NO                          AS OLD_CAS_NO           /*OLD_CAS_NO*/
                 , A1.TOXIC_MTL1                      AS TOXIC_MTL1           /*유독물질*/
                 , A1.LMT_MTL1                        AS LMT_MTL1             /*제한물질*/
                 , A1.ACCD_PSB_MTL1                   AS ACCD_PSB_MTL1        /*사고대비물질*/
                 , A1.PHBT_MTL1                       AS PHBT_MTL1            /*금지물질*/
                 , A1.PERMIT_MTL1                     AS PERMIT_MTL1          /*허가물질*/
                 , A1.MIN_CONTENT                     AS MIN_CONTENT          /*FROM*/
                 , A1.MAX_CONTENT                     AS MAX_CONTENT          /*TO*/
                 , A1.AVG_CONTENT                                            /*평균*/
                 , A1.CAS_RN                          AS CAS_RN
                 , A1.CAS_RN_DUP_ORDER                AS CAS_RN_DUP_ORDER
              FROM (
                       SELECT A.CO_CD                                                                                AS CO_CD                  /*회사코드*/
                            , TO_CHAR(TO_NUMBER(A.PRD_ID))                                                           AS PRD_ID                 /*상품코드*/
                            , A.CAS_NO                                                                               AS CAS_NO                 /*CAS-NO*/
                            , A.CHM_MTL_ID                                                                           AS CHM_MTL_ID             /*화학물질ID*/
                            , NVL(A.CHM_MTL_NM,'미식별 물질')                                                        AS CHM_MTL_NM             /*화학물질명*/
                            , NVL(A.ENG_CHM_MTL_NM,'UNIDENTIFIED CHEMICAL SUBSTANCES')                               AS ENG_CHM_MTL_NM         /*화학물질영문명*/
                            , A.MIN_CONTENT                                                                          AS MIN_CONTENT            /*최소함량*/
                            , A.MAX_CONTENT                                                                          AS MAX_CONTENT            /*최대함량*/
                            , A.AVG_CONTENT
                            , NVL(MAX(CASE WHEN I.MNG_CD='103' AND NVL(I.HAMRYANG,0) <= A.MAX_CONTENT THEN 'Y' END) OVER (PARTITION BY A.CO_CD,A.PRD_ID,A.CAS_NO),'N') AS TOXIC_MTL1            /*유독물질*/
                            , NVL(MAX(CASE WHEN I.MNG_CD='104' AND NVL(I.HAMRYANG,0) <= A.MAX_CONTENT THEN 'Y' END) OVER (PARTITION BY A.CO_CD,A.PRD_ID,A.CAS_NO),'N') AS PERMIT_MTL1           /*허가물질*/
                            , NVL(MAX(CASE WHEN I.MNG_CD='105' AND NVL(I.HAMRYANG,0) <= A.MAX_CONTENT THEN 'Y' END) OVER (PARTITION BY A.CO_CD,A.PRD_ID,A.CAS_NO),'N') AS LMT_MTL1              /*제한물질*/
                            , NVL(MAX(CASE WHEN I.MNG_CD='106' AND NVL(I.HAMRYANG,0) <= A.MAX_CONTENT THEN 'Y' END) OVER (PARTITION BY A.CO_CD,A.PRD_ID,A.CAS_NO),'N') AS PHBT_MTL1             /*금지물질*/
                            , NVL(MAX(CASE WHEN I.MNG_CD='107' AND NVL(I.HAMRYANG,0) <= A.MAX_CONTENT THEN 'Y' END) OVER (PARTITION BY A.CO_CD,A.PRD_ID,A.CAS_NO),'N') AS ACCD_PSB_MTL1         /*사고대비물질*/
                            , DENSE_RANK() OVER (PARTITION BY A.CO_CD,A.PRD_ID ORDER BY A.CAS_NO)                    AS CAS_RN
                            , ROW_NUMBER() OVER (PARTITION BY A.CO_CD,A.PRD_ID,A.CAS_NO ORDER BY 1)                  AS CAS_RN_DUP_ORDER
                         FROM SSP_APP.TB_PR_PRD_CHM_MTL_DTLS         A
                         LEFT JOIN SSP_CMS.CVW_FV_CHEM_RESTRICT_INFO I
                           ON 0=0
                          AND I.CAS_NO = A.CAS_NO
                        WHERE 0=0
                          AND A.CO_CD  = #{CO_CD}
                          AND A.PRD_ID = LPAD(#{PRD_ID},18,0)
                   ) A1
             WHERE 1=1
               AND A1.CAS_RN_DUP_ORDER = 1
        ]]>
    </select>

    <select id="selectChmMtlAddInfoInq" parameterType="HashMap" resultType="HashMap">
        /* ChmMtlInfoMng.selectChmMtlAddInfoInq 화학물질추가정보 조회 */
        <![CDATA[
            WITH T1 AS
            (
                SELECT CO_CD                      AS CO_CD
                     , TO_CHAR(TO_NUMBER(PRD_ID)) AS PRD_ID
                     , MNG_CD                     AS MNG_CD
                     , 1                          AS MNG_VAL
                  FROM SSP_APP.TB_PR_PRD_CHM_MTL_DTLS C
                  LEFT JOIN SSP_CMS.CVW_FV_CHEM_RESTRICT_INFO D
                    ON 0=0
                   AND D.CAS_NO    = C.CAS_NO
                   AND NVL(D.HAMRYANG,0) <= C.MAX_CONTENT
                 WHERE 1=1
                   AND C.CO_CD  = #{CO_CD}
                   AND C.PRD_ID = LPAD(#{PRD_ID},18,0)
                 GROUP BY CO_CD
                        , PRD_ID
                        , MNG_CD
                 UNION
                SELECT CO_CD     AS CO_CD
                     , PRD_ID    AS PRD_ID
                     , '101'     AS MNG_CD
                     , 1         AS MNG_VAL
                  FROM SSP_APP.TB_PR_PRD_CHM_MTL_DTLS C
                 WHERE C.CO_CD  = #{CO_CD}
                   AND C.PRD_ID = LPAD(#{PRD_ID},18,0)
                   AND (
                        NOT EXISTS
                        (
                         SELECT 'X'
                            FROM SSP_CMS.SCT_CHEM D
                           WHERE 1=1
                             AND D.CAS_NO     = C.CAS_NO
                             AND D.CLOSE_DATE = '99991231235959'
                        )
                        OR INSTR(C.CAS_NO,'-') = 0
                       )
            )
            SELECT CO_CD        AS CO_CD
                 , PRD_ID       AS PRD_ID
                 , LAW2_ORDER   AS LAW2_ORDER
                 , A_LAW2_VAL   AS A_LAW2_VAL
                 , A_LAW2_NM    AS A_LAW2_NM
                 , B_LAW2_VAL   AS B_LAW2_VAL
                 , B_LAW2_NM    AS B_LAW2_NM
                 , C_LAW2_VAL   AS C_LAW2_VAL
                 , C_LAW2_NM    AS C_LAW2_NM
                 , D_LAW2_VAL   AS D_LAW2_VAL
                 , D_LAW2_NM    AS D_LAW2_NM
              FROM (
                       SELECT D.CO_CD                                                             AS CO_CD
                            , TO_CHAR(TO_NUMBER(D.PRD_ID))                                        AS PRD_ID
                            , A.COM_DTL_CD                                                        AS LAW1
                            , CASE WHEN B.COM_DTL_CD = '104' /*허가물질*/
                                     OR B.COM_DTL_CD = '106' /*금지물질*/
                                     OR B.COM_DTL_CD = '206' /*금지물질*/
                                     OR B.COM_DTL_CD = '301' /*마약*/
                                     OR B.COM_DTL_CD = '302' /*향정신성의약품*/
                                     OR B.COM_DTL_CD = '305' /*임시마약류*/
                                   THEN B.COM_DTL_CD_NM || ' <fc v=''red''><b v=''true''>*</b></fc>'
                                   ELSE B.COM_DTL_CD_NM
                              END                                                                 AS LAW2_NM
                            , NVL(C.MNG_VAL,0)                                                    AS LAW2_VAL
                            , DENSE_RANK() OVER (PARTITION BY A.COM_DTL_CD ORDER BY B.COM_DTL_CD) AS LAW2_ORDER
                         FROM SSP_APP.TB_CO_COM_CD_DTL      A
                         LEFT JOIN SSP_APP.TB_CO_COM_CD_DTL B
                           ON 0=0
                          AND B.LANG_CD           = #{LANG_CD}
                          AND B.COM_CLSF_CD       = 'CHM_MTL_LMT_CD'
                          AND B.COM_USR_DEFN_NM_1 = A.COM_DTL_CD
                         LEFT JOIN T1               C
                           ON 1=1
                          AND C.MNG_CD IS NOT NULL
                          AND C.MNG_CD = B.COM_DTL_CD
                        CROSS JOIN
                              (
                                  SELECT DISTINCT
                                         CO_CD
                                       , PRD_ID
                                    FROM T1
                              ) D
                        WHERE 1=1
                          AND A.COM_CLSF_CD = 'CHM_MTL_CD'
                          AND A.COM_DTL_CD IN ('1','2','3')
                   ) A1
             PIVOT (
                     MAX(LAW2_VAL) LAW2_VAL
                   , MAX(LAW2_NM)  LAW2_NM FOR LAW1 IN (
                                                         '1' AS "A"
                                                       , '2' AS "B"
                                                       , '3' AS "C"
                                                       , '4' AS "D"
                                                       )
                   )
             ORDER BY LAW2_ORDER
        ]]>
    </select>

    <select id="selectAttcFileDtlsInq" parameterType="HashMap" resultType="HashMap">
        /* ChmMtlInfoMng.selectAttcFileDtlsInq 첨부파일내역 조회 */
        <![CDATA[
            SELECT A.DOC_REG_ID        AS DOC_REG_ID            /*문서등록ID*/
                 , A.DOC_REG_SEQ       AS DOC_REG_SEQ           /*문서등록순번*/
                 , A.ATFL_NM           AS ATFL_NM               /*첨부파일명*/
                 , A.ATFL_LEN          AS ATFL_LEN              /*첨부파일길이*/
                 , A.ATFL_STOR_PATH    AS ATFL_STOR_PATH        /*첨부파일저장경로*/
                 , A.STOR_PLC_SPR_CD   AS STOR_PLC_SPR_CD       /*저장장소구분코드*/
                 , A.ORI_ATFL_NM       AS ORI_ATFL_NM           /*원첨부파일명*/
                 , A.SAP_DOC_ID        AS SAP_DOC_ID            /*SAP문서ID*/
                 , A.RMKS_CTS          AS RMKS_CTS              /*비고내용*/
                 , A.ETC_FDS_1         AS ETC_FDS_1             /*기타필드1*/
                 , A.ETC_FDS_2         AS ETC_FDS_2             /*기타필드2*/
                 , A.ETC_FDS_3         AS ETC_FDS_3             /*기타필드3*/
                 , A.ETC_FDS_4         AS ETC_FDS_4             /*기타필드4*/
                 , A.ETC_FDS_5         AS ETC_FDS_5             /*기타필드5*/
                 , A.REG_DTM           AS REG_DTM               /*등록일시*/
                 , A.REGPSN_ID         AS REGPSN_ID             /*등록자ID*/
                 , A.UPD_DTM           AS UPD_DTM               /*수정일시*/
                 , A.UPDPSN_ID         AS UPDPSN_ID             /*수정자ID*/
              FROM SSP_APP.TB_CO_ATFL_DTLS A
             WHERE 1=1
               AND A.DOC_REG_ID = #{DOC_REG_ID}
               AND A.ETC_FDS_2  = 'S2'
               AND ROWNUM       = 1
        ]]>
    </select>

    <select id="selectRegulationInfoCnfYn" parameterType="java.util.List" resultType="HashMap">
        /* ChmMtlInfoMng.selectRegulationInfoCnfYn 규제정보확인여부 리스트 조회 */
        WITH T1 AS
        (
         <foreach collection="list" item="item" separator="UNION ALL ">
        	 SELECT #{item.CAS_NO} AS CAS_NO FROM DUAL
         </foreach>
        )
        <![CDATA[
        SELECT CAS_NO
             , (
                SELECT SSP_APP.FN_RD_CAS_NO_YN
                       (
                        CAS_NO
                       )
                  FROM DUAL
               ) AS CAS_YN
          FROM T1
        ]]>
    </select>

    <select id="selectChmMtlVldtInfoListInq" parameterType="java.util.List" resultType="HashMap">
        /* ChmMtlInfoMng.selectChmMtlVldtInfoListInq 화학물질검증정보 리스트 조회 */
        WITH T1 AS
        (
         <foreach collection="list" item="item" separator="UNION ALL ">
          SELECT  #{item.OLD_CAS_NO}  AS OLD_CAS_NO
                , #{item.CAS_NO}      AS CAS_NO
                , #{item.MIN_CONTENT} AS MIN_CONTENT
                , #{item.MAX_CONTENT} AS MAX_CONTENT
                , ROWNUM              AS ORDER_NO
             FROM DUAL
        </foreach>
        )
        SELECT '0'                               AS CHK                  /*CHK*/
             , A1.CHM_MTL_ID                     AS CHM_MTL_ID           /*화학물질ID*/
             , A1.ENG_CHM_MTL_NM                 AS ENG_CHM_MTL_NM       /*화학물질영문명*/
             , A1.CHM_MTL_NM                     AS CHM_MTL_NM           /*화학물질명*/
             , A1.CAS_NO                         AS CAS_NO               /*CAS_NO*/
             , A1.OLD_CAS_NO                     AS OLD_CAS_NO           /*OLD_CAS_NO*/
             , A1.TOXIC_MTL1                     AS TOXIC_MTL1           /*유독물질*/
             , A1.LMT_MTL1                       AS LMT_MTL1             /*제한물질*/
             , A1.ACCD_PSB_MTL1                  AS ACCD_PSB_MTL1        /*사고대비물질*/
             , A1.PHBT_MTL1                      AS PHBT_MTL1            /*금지물질*/
             , A1.PERMIT_MTL1                    AS PERMIT_MTL1          /*허가물질*/
             , A1.MIN_CONTENT                    AS MIN_CONTENT          /*FROM*/
             , A1.MAX_CONTENT                    AS MAX_CONTENT          /*TO*/
             , (A1.MIN_CONTENT+A1.MAX_CONTENT)/2 AS AVG_CONTENT          /*평균*/
             , A1.CAS_RN                         AS CAS_RN
             , A1.CAS_RN_DUP_ORDER               AS CAS_RN_DUP_ORDER
             , A1.ORDER_NO                       AS ORDER_NO
          FROM (
                   SELECT A.CAS_NO                                                              AS CAS_NO             /*CAS-NO*/
                        , A.OLD_CAS_NO                                                          AS OLD_CAS_NO         /*OLD_CAS_NO*/
                        , B.CHEM_ID                                                             AS CHM_MTL_ID         /*화학물질ID*/
                        , NVL(C.NAME,'미식별 물질')                                             AS CHM_MTL_NM         /*화학물질명*/
                        , NVL(D.NAME,'UNIDENTIFIED CHEMICAL SUBSTANCES')                        AS ENG_CHM_MTL_NM     /*화학물질영문명*/
                        , A.MIN_CONTENT                                                         AS MIN_CONTENT        /*최소함량*/
                        , A.MAX_CONTENT                                                         AS MAX_CONTENT        /*최대함량*/
<![CDATA[
	                    , NVL(MAX(CASE WHEN I.MNG_CD='103' AND NVL(I.HAMRYANG,0) <= A.MAX_CONTENT THEN 'Y' END) OVER (PARTITION BY A.CAS_NO,B.CHEM_ID),'N') AS TOXIC_MTL1            /*유독물질*/
						, NVL(MAX(CASE WHEN I.MNG_CD='104' AND NVL(I.HAMRYANG,0) <= A.MAX_CONTENT THEN 'Y' END) OVER (PARTITION BY A.CAS_NO,B.CHEM_ID),'N') AS PERMIT_MTL1           /*허가물질*/
						, NVL(MAX(CASE WHEN I.MNG_CD='105' AND NVL(I.HAMRYANG,0) <= A.MAX_CONTENT THEN 'Y' END) OVER (PARTITION BY A.CAS_NO,B.CHEM_ID),'N') AS LMT_MTL1              /*제한물질*/
						, NVL(MAX(CASE WHEN I.MNG_CD='106' AND NVL(I.HAMRYANG,0) <= A.MAX_CONTENT THEN 'Y' END) OVER (PARTITION BY A.CAS_NO,B.CHEM_ID),'N') AS PHBT_MTL1             /*금지물질*/
						, NVL(MAX(CASE WHEN I.MNG_CD='107' AND NVL(I.HAMRYANG,0) <= A.MAX_CONTENT THEN 'Y' END) OVER (PARTITION BY A.CAS_NO,B.CHEM_ID),'N') AS ACCD_PSB_MTL1         /*사고대비물질*/
]]>
                        , DENSE_RANK() OVER (ORDER BY A.CAS_NO)                                 AS CAS_RN
                        , ROW_NUMBER() OVER (PARTITION BY A.CAS_NO ORDER BY 1)                  AS CAS_RN_DUP_ORDER
                        , A.ORDER_NO                                                            AS ORDER_NO
                     FROM T1 A
                     LEFT JOIN SSP_CMS.SCT_CHEM B
                       ON 1=1
                      AND B.CAS_NO     = A.CAS_NO
                      AND B.IS_ENABLE  = 1
                      AND B.CLOSE_DATE = '99991231235959'
                     LEFT JOIN SSP_CMS.SCT_MULTILINGUAL_DATA C
                       ON 1=1
                      AND C.ARC_ID = B.CHEM_ID
                      AND C.LOCALE = 'ko_KR'
                     LEFT JOIN SSP_CMS.SCT_MULTILINGUAL_DATA D
                       ON 1=1
                      AND D.ARC_ID = B.CHEM_ID
                      AND D.LOCALE = 'en_US'
                     LEFT JOIN SSP_CMS.CVW_FV_CHEM_RESTRICT_INFO I
                       ON 0=0
                      AND I.CAS_NO = A.CAS_NO
               )A1
         WHERE 1=1
           AND A1.CAS_RN_DUP_ORDER = 1
         ORDER BY ORDER_NO
    </select>

    <select id="selectChmMtlVldtAddInfoListInq" parameterType="java.util.List" resultType="HashMap">
        /* ChmMtlInfoMng.selectChmMtlVldtAddInfoListInq 화학물질검증추가정보 리스트 조회 */
        WITH T1 AS
        (
         <foreach collection="list" item="item" separator="UNION ALL ">
          SELECT  #{item.CAS_NO}      AS CAS_NO
                , #{item.MIN_CONTENT} AS MIN_CONTENT
                , #{item.MAX_CONTENT} AS MAX_CONTENT
             FROM DUAL
        </foreach>
        )
        SELECT PK_ORDER      AS PK_ORDER
             , LAW2_ORDER    AS LAW2_ORDER
             , A_LAW2_VAL    AS A_LAW2_VAL        /*항목값*/
             , A_LAW2_NM     AS A_LAW2_NM         /*항목명*/
             , B_LAW2_VAL    AS B_LAW2_VAL        /*항목값*/
             , B_LAW2_NM     AS B_LAW2_NM         /*항목명*/
             , C_LAW2_VAL    AS C_LAW2_VAL        /*항목값*/
             , C_LAW2_NM     AS C_LAW2_NM         /*항목명*/
             , D_LAW2_VAL    AS D_LAW2_VAL        /*항목값*/
             , D_LAW2_NM     AS D_LAW2_NM         /*항목명*/
          FROM (
                   SELECT A2.LAW1       AS LAW1
                        , A2.LAW2_NM    AS LAW2_NM
                        , A2.LAW2_VAL   AS LAW2_VAL
                        , A2.PK_ORDER   AS PK_ORDER
                        , A2.LAW2_ORDER AS LAW2_ORDER
                     FROM (
                              SELECT A.COM_DTL_CD                                                                          AS LAW1
                              <![CDATA[
                                   , CASE WHEN B.COM_DTL_CD = '104' /*허가물질*/
                                            OR B.COM_DTL_CD = '106' /*금지물질*/
                                            OR B.COM_DTL_CD = '206' /*금지물질*/
                                            OR B.COM_DTL_CD = '301' /*마약*/
                                            OR B.COM_DTL_CD = '302' /*향정신성의약품*/
                                            OR B.COM_DTL_CD = '305' /*임시마약류*/
                                          THEN B.COM_DTL_CD_NM || ' <fc v=''red''><b v=''true''>*</b></fc>'
                                          ELSE B.COM_DTL_CD_NM
                                     END                                                                                   AS LAW2_NM
                              ]]>
                                   , MAX(CASE WHEN D.CAS_NO IS NOT NULL AND C.MAX_CONTENT >= NVL(D.HAMRYANG,0) THEN 1 ELSE 0 END)
                                     OVER (PARTITION BY A.COM_DTL_CD,B.COM_DTL_CD)                                         AS LAW2_VAL
                                   , ROW_NUMBER() OVER (PARTITION BY A.COM_DTL_CD,B.COM_DTL_CD ORDER BY 1)                 AS PK_ORDER
                                   , DENSE_RANK() OVER (PARTITION BY A.COM_DTL_CD ORDER BY B.COM_DTL_CD)                   AS LAW2_ORDER
                                FROM SSP_APP.TB_CO_COM_CD_DTL      A
                                LEFT JOIN SSP_APP.TB_CO_COM_CD_DTL B
                                  ON 0=0
                                 AND B.LANG_CD           = 'KO'
                                 AND B.COM_CLSF_CD       = 'CHM_MTL_LMT_CD'
                                 AND B.COM_USR_DEFN_NM_1 = A.COM_DTL_CD
                               CROSS JOIN T1                                C
                                LEFT JOIN SSP_CMS.CVW_FV_CHEM_RESTRICT_INFO D
                                  ON 0=0
                                 AND D.MNG_CD = B.COM_DTL_CD
                                 AND D.CAS_NO = C.CAS_NO
                               WHERE 0=0
                                 AND A.LANG_CD     = 'KO'
                                 AND A.COM_CLSF_CD = 'CHM_MTL_CD'
                                 AND A.COM_DTL_CD IN ('1','2','3')
                          ) A2
                    WHERE 0=0
                      AND A2.PK_ORDER = 1
               ) A3
         PIVOT (
                 MAX(LAW2_VAL) LAW2_VAL
               , MAX(LAW2_NM)  LAW2_NM FOR LAW1 IN (
                                                     '1' AS "A"
                                                    ,'2' AS "B"
                                                    ,'3' AS "C"
                                                    ,'4' AS "D"
                                                   )
               )
         ORDER BY LAW2_ORDER
    </select>

    <insert id="insertChmMtlInfoCnf" parameterType="HashMap">
        /* ChmMtlInfoMng.insertChmMtlInfoCnf 화학물질정보확인 저장 */
        <![CDATA[
            INSERT INTO SSP_APP.TB_PR_PRD_CHM_MTL_DTLS
            (
              CO_CD                       /*회사코드*/
            , PRD_ID                      /*상품ID*/
            , CAS_NO                      /*CAS_NO*/
            , CHM_MTL_ID                  /*화학물질ID*/
            , ENG_CHM_MTL_NM              /*영문화학물질명*/
            , CHM_MTL_NM                  /*화학물질명*/
            , MIN_CONTENT                 /*최소함량*/
            , MAX_CONTENT                 /*최대함량*/
            , AVG_CONTENT                 /*평균함량*/
            , REG_DTM                     /*등록일시*/
            , REGPSN_ID                   /*등록자ID*/
            , UPD_DTM                     /*수정일시*/
            , UPDPSN_ID                   /*수정자ID*/
            ) VALUES
            (
              #{CO_CD}
            , LPAD(#{PRD_ID},18,0)
            , #{CAS_NO}
            , #{CHM_MTL_ID}
            , #{ENG_CHM_MTL_NM}
            , #{CHM_MTL_NM}
            , #{MIN_CONTENT}
            , #{MAX_CONTENT}
            , #{AVG_CONTENT}
            , TO_DATE(#{REG_DTM},'YYYY-MM-DD HH24:MI:SS')
            , #{REGPSN_ID}
            , TO_DATE(#{UPD_DTM},'YYYY-MM-DD HH24:MI:SS')
            , #{UPDPSN_ID}
            )
        ]]>
    </insert>

    <update id="updateChmMtlInfoCnf" parameterType="HashMap">
        /* ChmMtlInfoMng.updateChmMtlInfoCnf 화학물질정보확인 수정 */
        <![CDATA[
             MERGE INTO SSP_APP.TB_PR_PRD_CHM_MTL_DTLS B
             USING DUAL A
                ON
                  (
                       B.CO_CD  = #{CO_CD}
                   AND B.PRD_ID = LPAD(#{PRD_ID},18,0)
                   AND B.CAS_NO = #{CAS_NO}
                  )
              WHEN MATCHED THEN
            UPDATE
               SET B.CHM_MTL_ID     = #{CHM_MTL_ID}                                  /*화학물질ID*/
                 , B.ENG_CHM_MTL_NM = #{ENG_CHM_MTL_NM}                              /*영문화학물질명*/
                 , B.CHM_MTL_NM     = #{CHM_MTL_NM}                                  /*화학물질명*/
                 , B.MIN_CONTENT    = #{MIN_CONTENT}                                 /*최소함량*/
                 , B.MAX_CONTENT    = #{MAX_CONTENT}                                 /*최대함량*/
                 , B.AVG_CONTENT    = #{AVG_CONTENT}                                 /*평균함량*/
                 , B.UPD_DTM        = TO_DATE(#{UPD_DTM},'YYYY-MM-DD HH24:MI:SS')    /*수정일시*/
                 , B.UPDPSN_ID      = #{UPDPSN_ID}                                   /*수정자ID*/
             WHEN NOT MATCHED THEN
           INSERT
           (
             B.CO_CD                                          /*회사코드*/
           , B.PRD_ID                                         /*상품ID*/
           , B.CAS_NO                                         /*CAS_NO*/
           , B.CHM_MTL_ID                                     /*화학물질ID*/
           , B.ENG_CHM_MTL_NM                                 /*영문화학물질명*/
           , B.CHM_MTL_NM                                     /*화학물질명*/
           , B.MIN_CONTENT                                    /*최소함량*/
           , B.MAX_CONTENT                                    /*최대함량*/
           , B.AVG_CONTENT                                    /*평균함량*/
           , B.UPD_DTM            							  /*수정일시*/
           , B.UPDPSN_ID                                      /*수정자ID*/
           )
           VALUES
           (
             #{CO_CD}                                       /*회사코드*/
           , LPAD(#{PRD_ID},18,0)                           /*상품ID*/
           , #{CAS_NO}                                      /*CAS_NO*/
           , #{CHM_MTL_ID}                                  /*화학물질ID*/
           , #{ENG_CHM_MTL_NM}                              /*영문화학물질명*/
           , #{CHM_MTL_NM}                                  /*화학물질명*/
           , #{MIN_CONTENT}                                 /*최소함량*/
           , #{MAX_CONTENT}                                 /*최대함량*/
           , #{AVG_CONTENT}                                 /*평균함량*/
           , TO_DATE(#{UPD_DTM},'YYYY-MM-DD HH24:MI:SS')    /*수정일시*/
           , #{UPDPSN_ID}                                   /*수정자ID*/
           )
        ]]>
    </update>

    <delete id="deleteChmMtlInfoDel" parameterType="HashMap">
        /* ChmMtlInfoMng.deleteChmMtlInfoDel 화학물질정보 삭제 */
        BEGIN
        <![CDATA[
            INSERT INTO SSP_APP.TB_PR_PRD_CHM_MTL_DTLS_HST
            (
              CO_CD	            /*회사코드*/
            , PRD_ID	        /*상품ID*/
            , CAS_NO	        /*CAS_NO*/
            , HST_SEQ	        /*이력순번*/
            , CHM_MTL_ID	    /*화학물질ID*/
            , ENG_CHM_MTL_NM	/*영문화학물질명*/
            , CHM_MTL_NM	    /*화학물질명*/
            , MIN_CONTENT	    /*최소함량*/
            , MAX_CONTENT	    /*최대함량*/
            , AVG_CONTENT	    /*평균함량*/
            , DATA_CHG_TP_CD	/*자료변경유형코드*/
            , REG_DTM	        /*등록일시*/
            , REGPSN_ID	        /*등록자ID*/
            , UPD_DTM	        /*수정일시*/
            , UPDPSN_ID	        /*수정자ID*/
            )
            SELECT A.CO_CD	                                    AS CO_CD	       /*회사코드*/
                 , A.PRD_ID	                                    AS PRD_ID          /*상품ID*/
                 , A.CAS_NO	                                    AS CAS_NO          /*CAS_NO*/
                 , (
                    SELECT NVL(MAX(HST_SEQ),0)+1
                      FROM SSP_APP.TB_PR_PRD_CHM_MTL_DTLS_HST S1
                     WHERE S1.CO_CD  = A.CO_CD
                       AND S1.PRD_ID = A.PRD_ID
                       AND S1.CAS_NO = A.CAS_NO
                   )                                            AS HST_SEQ         /*이력순번*/
                 , A.CHM_MTL_ID	                                AS CHM_MTL_ID	   /*화학물질ID*/
                 , A.ENG_CHM_MTL_NM	                            AS ENG_CHM_MTL_NM  /*영문화학물질명*/
                 , A.CHM_MTL_NM	                                AS CHM_MTL_NM	   /*화학물질명*/
                 , A.MIN_CONTENT	                            AS MIN_CONTENT	   /*최소함량*/
                 , A.MAX_CONTENT	                            AS MAX_CONTENT	   /*최대함량*/
                 , A.AVG_CONTENT	                            AS AVG_CONTENT	   /*평균함량*/
                 , 'D' 	                                        AS DATA_CHG_TP_CD  /*자료변경유형코드*/
                 , TO_DATE(#{REG_DTM},'YYYY-MM-DD HH24:MI:SS')  AS REG_DTM	       /*등록일시*/
                 , A.REGPSN_ID	                                AS REGPSN_ID       /*등록자ID*/
                 , TO_DATE(#{UPD_DTM},'YYYY-MM-DD HH24:MI:SS')  AS UPD_DTM	       /*수정일시*/
                 , A.UPDPSN_ID	                                AS UPDPSN_ID       /*수정자ID*/
              FROM SSP_APP.TB_PR_PRD_CHM_MTL_DTLS A
             WHERE A.CO_CD  = #{CO_CD}
               AND A.PRD_ID = LPAD(#{PRD_ID},18,0)
               AND A.CAS_NO = #{CAS_NO};

            DELETE FROM SSP_APP.TB_PR_PRD_CHM_MTL_DTLS
             WHERE CO_CD  = #{CO_CD}
               AND PRD_ID = LPAD(#{PRD_ID},18,0)
               AND CAS_NO = #{CAS_NO};
        ]]>
        END;
    </delete>

    <update id="updateSpRdChmMtlsProc" statementType="CALLABLE" parameterType="map">
        /* CprtcpEstmReqMng.updateSpRdChmMtlsProc 화학물질처리 저장 */
        <![CDATA[
         CALL SSP_APP.SP_RD_CHM_MTLS_PROC
              (
	            #{I_CO_CD,  mode=IN,  jdbcType=VARCHAR}	 /*회사코드*/
	          , #{I_PRD_ID, mode=IN,  jdbcType=VARCHAR}	 /*상품ID*/
              )
        ]]>
    </update>

    <update id="updateMroPrdInfoUpd" parameterType="HashMap">
        /* ChmMtlInfoMng.updateMroPrdInfoUpd MRO상품정보 수정 */
        BEGIN
        <![CDATA[
            UPDATE SSP_APP.TB_PR_MRO_PRD_INFO
               SET MTL_GRAVITY  = #{MTL_GRAVITY}
                 , PHASE_SPR_CD = #{PHASE_SPR_CD}
                 , UPDPSN_ID    = #{UPDPSN_ID}
                 , UPD_DTM      = SYSDATE
             WHERE CO_CD        = #{CO_CD}
               AND PRD_ID       = LPAD(#{PRD_ID},18,0);

            UPDATE SSP_APP.TB_PR_PRD_INFO
               SET DOC_REG_ID = #{PRD_DOC_REG_ID}
                 , UPDPSN_ID  = #{UPDPSN_ID}
                 , UPD_DTM    = SYSDATE
             WHERE CO_CD      = #{CO_CD}
               AND PRD_ID     = LPAD(#{PRD_ID},18,0);
        ]]>
        END;
    </update>

    <select id="selectCodeChkYn" parameterType="HashMap" resultType="HashMap">
        /* RdCategory.selectCodeChkYn  저장/수정 코드체크여부 조회  */
        <![CDATA[
            SELECT MAX(PRD_ID_YN) AS PRD_ID_YN       /*상품ID*/
              FROM (
                       SELECT CASE WHEN COUNT(1) > 0
                                   THEN 'Y'
                                   ELSE 'N'
                              END                     AS PRD_ID_YN
                         FROM SSP_APP.TB_PR_PRD_INFO
                        WHERE CO_CD        = #{CO_CD}
                          AND MALL_SPR_CD  = #{MALL_SPR_CD}
                          AND PRD_ID       = LPAD(#{PRD_ID}, 18, '0')
                   )
        ]]>
    </select>
</mapper>