<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="custDept">

   <!-- 
    ******************************************************************************
    * SELECT : custDept
    * 작성자 : moonjooh
    * 작성 일자 : 2022-02-10
    ******************************************************************************
    -->
    <select id="selectCustDept" parameterType="HashMap" resultType="HashMap">
        /* custDept.selectCustDept 부서조회목록 조회 */
        <include refid="com.ssp.bo.cc.common.sqlPrefixPagingCamel" /> 
    	SELECT LIST.CHK
    		 , LIST.CO_CD
    		 , LIST.BZPLC_ID
    		 , LIST.USE_YN
    		 , LIST.CUST_SPR
    		 , LIST.DEPT_SRT_SEQ
    		 , LIST.lv AS LVL
    		 , LIST.CCO_DEPT_CD
    		 , LIST.DEPT_ID
    		 , LIST.DEPT_NM
    		 , NVL(LIST.BGT_OVER_YN   ,'N') AS BGT_OVER_YN
    		 , NVL(LIST.BGT_TRANSF_YN ,'N') AS BGT_TRANSF_YN
    		 , LIST.HRNK_DEPT_ID
    		 , LIST.HRNK_DEPT_NM
    		 , LIST.OPR_UNIT_ID
    		 , LIST.OPR_UNIT_NM
		FROM(
			SELECT 0 AS CHK 
		        	 , D.CO_CD																	/* 회사코드 */
		        	 , D.BZPLC_ID																/* 사업장ID */
					 , D.USE_YN 																/* 사용여부 */
				 	 , U.CUST_SPR_CD AS CUST_SPR					     						/* 고객구분 명 */
				 	 , D.DEPT_SRT_SEQ 															/* 부서레벨 */
				 	 , D.lv																		/* 부서레벨 */ 
				 	 , D.CCO_DEPT_CD 															/* 부서코드 */
				 	 , D.DEPT_ID 																/* 부서ID */
				 	 , D.DEPT_NM 																/* 부서명 */	
				 	 , A.BGT_OVER_AGD_YN AS BGT_OVER_YN											/* 예산초과허용여부 */
				 	 , A.BGT_TRNSF_AGD_YN AS BGT_TRANSF_YN										/* 예산이체허용여부 */
				 	 , D.HRNK_DEPT_ID 															/* 상위부서ID */
				 	 , ( SELECT C.DEPT_NM 
						   FROM TB_CC_DEPT_BASIS C 
						  WHERE C.CO_CD = D.CO_CD 
						    AND C.DEPT_ID = D.HRNK_DEPT_ID ) AS HRNK_DEPT_NM					/* 상위부서명 */
				 	 , D.OPR_UNIT_ID 															/* 운영단위ID */
				 	 , U.OPR_UNIT_NM 															/* 운영단위명 */
				 	 , SORT_NUM																	/* 멀티조회인 경우 순서깨짐방지 */
				FROM (
		              SELECT B.*, LEVEL lv, rownum AS SORT_NUM
					    FROM TB_CC_DEPT_BASIS B
					  START WITH B.HRNK_DEPT_ID IS NULL 
					  CONNECT BY PRIOR B.DEPT_ID = B.HRNK_DEPT_ID
					  ORDER SIBLINGS BY OPR_UNIT_ID, DEPT_ID
				     ) D
				<if test=" bzplcId > 0 ">
		            JOIN
		            TB_OD_ODR_INQ_TGT_DTLS   T1
		            ON  T1.SES_ID = #{sesId}
		            AND T1.INQ_COND_DTLS = #{inqCondDtls}
		            AND T1.COL_ITM = 'BZPLC_ID'
		            AND T1.COND_DATA_VAL = D.BZPLC_ID
	            </if>
				<if test=" oprUnitId > 0 ">
		            JOIN
		            TB_OD_ODR_INQ_TGT_DTLS   T2
		            ON  T2.SES_ID = #{sesId}
		            AND T2.INQ_COND_DTLS = #{inqCondDtls}
		            AND T2.COL_ITM = 'OPR_UNIT_ID'
		            AND T2.COND_DATA_VAL = D.OPR_UNIT_ID
	            </if>
				<if test=" deptId > 0 ">
		            JOIN
		            TB_OD_ODR_INQ_TGT_DTLS   T3
		            ON  T3.SES_ID = #{sesId}
		            AND T3.INQ_COND_DTLS = #{inqCondDtls}
		            AND T3.COL_ITM = 'DEPT_ID'
		            AND T3.COND_DATA_VAL = D.DEPT_ID
	            </if>
				LEFT OUTER JOIN TB_CC_BZPLC_BASIS BZ
						ON BZ.CO_CD = D.CO_CD 
				 		AND BZ.BZPLC_ID = D.BZPLC_ID
				LEFT OUTER JOIN TB_CC_OPR_UNIT_BASIS U
						ON U.CO_CD = D.CO_CD
						AND U.OPR_UNIT_ID = D.OPR_UNIT_ID
				LEFT OUTER JOIN TB_CC_DEPT_CTL_AUTH_INFO A
						ON A.CO_CD = D.CO_CD 
						AND A.DEPT_ID = D.DEPT_ID	
				<where>
		            <if test="useYn != null and !useYn.equals('') ">
		                D.USE_YN = #{useYn}
		            </if>
		        </where>
		)LIST
		<if test="sortColumn != null and sortColumn != ''"> 
        ORDER BY ${sortColumn} ${sortType} 
        </if> 
		<if test="sortColumn == null or sortColumn == ''"> 
        ORDER BY SORT_NUM
        </if> 
        <include refid="com.ssp.bo.cc.common.sqlPostfixPagingCamel" />
    </select>
    
    <select id="selectCustDeptCount" parameterType="HashMap" resultType="int">
        /* custDept.selectCustDeptCount 부서조회목록 건수조회 - 미사용 */
        SELECT COUNT(*)
		FROM SSP_APP.TB_CC_DEPT_BASIS D
		<if test=" bzplcId > 0 ">
            JOIN
            TB_OD_ODR_INQ_TGT_DTLS   T1
            ON  T1.SES_ID = #{sesId}
            AND T1.INQ_COND_DTLS = #{inqCondDtls}
            AND T1.COL_ITM = 'BZPLC_ID'
            AND T1.COND_DATA_VAL = D.BZPLC_ID
        </if>
		<if test=" oprUnitId > 0 ">
            JOIN
            TB_OD_ODR_INQ_TGT_DTLS   T2
            ON  T2.SES_ID = #{sesId}
            AND T2.INQ_COND_DTLS = #{inqCondDtls}
            AND T2.COL_ITM = 'OPR_UNIT_ID'
	        AND T2.COND_DATA_VAL = D.OPR_UNIT_ID
        </if>
		<if test=" deptId > 0 ">
            JOIN
            TB_OD_ODR_INQ_TGT_DTLS   T3
            ON  T3.SES_ID = #{sesId}
            AND T3.INQ_COND_DTLS = #{inqCondDtls}
            AND T3.COL_ITM = 'DEPT_ID'
            AND T3.COND_DATA_VAL = D.DEPT_ID
        </if>
		<where>
            <if test="useYn != null and !useYn.equals('') ">
                D.USE_YN = #{useYn}
            </if>
        </where>
    </select>
    
    <update id="saveCustDeptState" parameterType="HashMap">
		/* custDept.saveCustDeptState 부서조회목록 일괄상태변경 update */
		UPDATE SSP_APP.TB_CC_DEPT_BASIS
		   SET USE_YN 	 = #{useYn}
		   	 , UPDPSN_ID = #{oprtrId}
		   	 , UPD_DTM 	 = SYSDATE
		 WHERE CO_CD   = #{coCd}
		   AND DEPT_ID = #{deptId}
	</update>
	
	<select id="selectCustDeptDetailInfo" parameterType="HashMap" resultType="HashMap">
		/* custDept.selectCustDeptDetailInfo 부서조회 상세조회 */
		SELECT DEPT.CO_CD																									/* 회사코드 */
			 , DEPT.BZPLC_ID																								/* 사업장ID */
		 	 , BZPLC.BZPLC_NM 																								/* 사업장명 */
		 	 , NVL2(DEPT.BZPLC_ID, NVL2(BZPLC.BZPLC_NM ,DEPT.BZPLC_ID || ' | ' || BZPLC.BZPLC_NM ,''), '') AS BZPLC			/* 사업장ID | 사업장명 */
		 	 , DEPT.OPR_UNIT_ID																								/* 운영단위ID */
		 	 , OPR.OPR_UNIT_NM																								/* 운영단위명 */
		 	 , NVL2(DEPT.OPR_UNIT_ID, NVL2(OPR.OPR_UNIT_NM ,DEPT.OPR_UNIT_ID || ' | ' || OPR.OPR_UNIT_NM ,''), '') AS OPR_UNIT /* 운영단위ID | 운영단위명 */
		 	 , OPR.CUST_SPR_CD																							/* 고객구분코드 */
		 	 , DEPT.USE_YN																									/* 사용여부 */ 
		 	 , DEPT.DEPT_NM																									/* 부서명 */ 
		 	 , DEPT.DEPT_ID																									/* 부서ID */ 
		 	 , DEPT.lv AS LVL																										/* 부서레벨 */ 
		 	 , DEPT.HRNK_DEPT_ID																							/* 상위부서 */ 
		 	 , ( SELECT A.DEPT_NM 
		 		   FROM TB_CC_DEPT_BASIS A
		 		  WHERE DEPT.CO_CD = A.CO_CD 
		 		    AND DEPT.HRNK_DEPT_ID = A.DEPT_ID ) HRNK_DEPT_NM														/* 상위부서명 */ 
		 	 , ( SELECT A.DEPT_NM 
		 		   FROM TB_CC_DEPT_BASIS A
		 		  WHERE DEPT.CO_CD = A.CO_CD 
		 		    AND A.DEPT_ID = DEPT.ROOT_ID
			 	) HGST_DEPT																									/* 최상위 부서명 */
		 	 , (SELECT LISTAGG(NVL((SELECT MBR.OPRTR_NM 
						 	 			  FROM TB_CO_MBR_OPRTR_INFO MBR 
						 	 			 WHERE MBR.CO_CD = DEPT.CO_CD 
						 	 			   AND MBR.OPRTR_ID = GIP.GI_CHRPSN_ID), NVL(( SELECT M.MBR_NM 
																 	 			         FROM TB_CC_MBR_BASIS M
																 	 			        WHERE M.CO_CD = DEPT.CO_CD 
																 	 			          AND M.MBR_ID = GIP.GI_CHRPSN_ID), GIP.GI_CHRPSN_ID)),',')
		 		 	  FROM TB_CC_BYDEPT_GI_CHRPSN_INFO GIP
		 		 	 WHERE GIP.CO_CD = DEPT.CO_CD 
					   AND GIP.DEPT_ID = DEPT.DEPT_ID
					 GROUP BY GIP.DEPT_ID) AS GI_CHRPSN_ID
		 	 , DEPT.CCO_DEPT_CD																								/* 고객사 부서 코드 */
		 	 , DEPT.ZPCD																									/* 우편번호 */
		 	 , DEPT.REPR_ADDR																								/* 주소 */
		 	 , DEPT.DTL_ADDR																								/* 상세주소 */
		 	 , CTLA.BGT_OVER_AGD_YN																							/* 예산 초과 허용 */
		 	 , CTLA.BGT_TRNSF_AGD_YN																						/* 예산 이체 허용 */
		  FROM ( SELECT B.*, LEVEL lv, CONNECT_BY_ROOT(DEPT_ID) AS ROOT_ID
				   FROM TB_CC_DEPT_BASIS B				
				 START WITH B.HRNK_DEPT_ID IS NULL 
				 CONNECT BY PRIOR B.DEPT_ID = B.HRNK_DEPT_ID
			   ) DEPT
		  LEFT OUTER JOIN TB_CC_BZPLC_BASIS BZPLC 
		 		 ON BZPLC.CO_CD = DEPT.CO_CD
		 		AND BZPLC.BZPLC_ID = DEPT.BZPLC_ID
		  LEFT OUTER JOIN TB_CC_OPR_UNIT_BASIS OPR 
		  		 ON OPR.CO_CD = DEPT.CO_CD
		  		AND OPR.OPR_UNIT_ID = DEPT.OPR_UNIT_ID
		  LEFT OUTER JOIN TB_CC_DEPT_CTL_AUTH_INFO CTLA 
		 		 ON CTLA.CO_CD = DEPT.CO_CD 
				AND CTLA.DEPT_ID = DEPT.DEPT_ID																				
		 WHERE DEPT.CO_CD = #{coCd}
		   AND DEPT.BZPLC_ID = #{bzplcId}
		   <if test="deptId != null and !deptId.equals('') ">
		   AND DEPT.DEPT_ID = #{deptId}
		   </if>
  		   AND DEPT.OPR_UNIT_ID = #{oprUnitId}
	</select>
	
	<update id="saveCustDeptDetailInfo" parameterType="HashMap">
		/* custDept.saveCustDeptDetailInfo 부서조회 상세 update */
		UPDATE TB_CC_DEPT_BASIS
		   SET USE_YN = #{useYn}
		   	 , OPR_UNIT_ID = #{oprUnitId}
		   	 , BZPLC_ID = #{bzplcId}
		   	 , DEPT_NM = #{deptNm}
		   	 , DEPT_SRT_SEQ = #{deptSrtSeq}
		   	 , HRNK_DEPT_ID = #{hrnkDeptId}
		   	 , CCO_DEPT_CD = #{ccoDeptCd}
		   	 , ZPCD = #{ZPCD}
		   	 , REPR_ADDR = (SELECT FN_CC_ADDR_REPR(#{reprAddr}, #{dtlAddr}) FROM DUAL)
		   	 , DTL_ADDR  = (SELECT FN_CC_ADDR_DTL(#{reprAddr}, #{dtlAddr}) FROM DUAL)
		   	 , UPDPSN_ID = #{oprtrId}
		   	 , UPD_DTM = SYSDATE
		 WHERE CO_CD = #{coCd}
		   AND DEPT_ID = #{deptId}
	</update>
	
	<update id="saveCustDeptDetailInfoAuth" parameterType="HashMap">
		/* custDept.saveCustDeptDetailInfoAuth 부서조회 상세 제어권한 update */
		MERGE INTO TB_CC_DEPT_CTL_AUTH_INFO
		USING DUAL 
		ON ( CO_CD = #{coCd}
		 AND DEPT_ID = #{deptId}
		)
		WHEN MATCHED THEN
		UPDATE SET BGT_OVER_AGD_YN = #{bgtOverAgdYn}
		     , BGT_TRNSF_AGD_YN = #{bgtTrnsfAgdYn}
		   	 , UPDPSN_ID = #{oprtrId}
		   	 , UPD_DTM = SYSDATE
		WHEN NOT MATCHED THEN
        INSERT(
        	CO_CD
		 	, DEPT_ID 
		 	, BGT_OVER_AGD_YN
		 	, BGT_TRNSF_AGD_YN
		 	, REGPSN_ID
			, REG_DTM
        )VALUES(
        	#{coCd}
        	, #{deptId}
        	, #{bgtOverAgdYn}
        	, #{bgtTrnsfAgdYn}
        	, #{oprtrId}
        	, SYSDATE
		)
	</update>
	
	<select id="selectCustSpr" parameterType="HashMap" resultType="HashMap">
        /* custDept.selectCustSpr 부서생성 고객구분 조회 */
        SELECT O.BZPLC_ID
			 , B.BZPLC_NM
			 , B.CUST_SPR_CD
		  FROM TB_CC_BZPLC_BASIS B
		  JOIN TB_CC_OPR_UNIT_BASIS O 
		    ON O.CO_CD = B.CO_CD 
		   AND O.BZPLC_ID = B.BZPLC_ID
		 WHERE O.CO_CD = #{coCd}
		   AND O.OPR_UNIT_ID = #{oprUnitId}
    </select>
    
    <select id="selectHgstDept" parameterType="HashMap" resultType="HashMap">
        /* custDept.selectHgstDept 부서생성 최상위부서, 부서레벨 조회 */
        SELECT ( SELECT A.DEPT_NM 
				 	 FROM TB_CC_DEPT_BASIS A
				 	WHERE LIST.CO_CD = A.CO_CD 
				 	  AND A.DEPT_ID = (
								 		SELECT CONNECT_BY_ROOT(DEPT_ID)
					 					  FROM TB_CC_DEPT_BASIS B
										 WHERE B.CO_CD = LIST.CO_CD 
										   AND B.DEPT_ID = LIST.DEPT_ID
										 START WITH B.HRNK_DEPT_ID IS NULL 
									   CONNECT BY PRIOR B.DEPT_ID = B.HRNK_DEPT_ID )) HGST_DEPT										/* 최상위 부서명 */
				, (
				 	 	SELECT LEVEL lv
						FROM TB_CC_DEPT_BASIS B
						WHERE B.CO_CD = LIST.CO_CD 
						AND B.DEPT_ID = LIST.DEPT_ID
						START WITH B.HRNK_DEPT_ID IS NULL 
						CONNECT BY PRIOR B.DEPT_ID = B.HRNK_DEPT_ID
				 	 )+1 AS LVL																										/* 부서 레벨 */
		FROM (
			SELECT DEPT.CO_CD
				 , DEPT.DEPT_ID
			  FROM TB_CC_DEPT_BASIS DEPT
			  LEFT OUTER JOIN TB_CC_BYDEPT_GI_CHRPSN_INFO GIP 
					ON GIP.CO_CD = DEPT.CO_CD 
				   AND GIP.DEPT_ID = DEPT.DEPT_ID
			 WHERE DEPT.CO_CD = #{coCd}
			   AND DEPT.DEPT_ID = #{hrnkDeptId}
		  GROUP BY DEPT.CO_CD
				 , DEPT.DEPT_ID
		)LIST
    </select>
	
	<insert id="insertCustDeptDetail" parameterType="HashMap">
        /* custDept.insertCustDeptDetail */
        INSERT INTO SSP_APP.TB_CC_DEPT_BASIS
        (
        	CO_CD
			, DEPT_ID
			, DEPT_NM
			, HRNK_DEPT_ID
			, DEPT_SRT_SEQ
			, CCO_DEPT_CD
			, ZPCD
			, REPR_ADDR
			, DTL_ADDR
			, USE_YN
			, BZPLC_ID
			, OPR_UNIT_ID
			, REGPSN_ID
			, REG_DTM
        ) 
        VALUES (
			#{oprtrCoCd}
			, #{seqDeptBasis}
			, #{deptNm}
			, #{hrnkDeptId}
			, #{deptSrtSeq}
			, #{ccoDeptCd}
			, #{ZPCD}
			, (SELECT FN_CC_ADDR_REPR(#{reprAddr}, #{dtlAddr}) FROM DUAL)
			, (SELECT FN_CC_ADDR_DTL(#{reprAddr}, #{dtlAddr}) FROM DUAL)
			, #{useYn}
			, #{bzplcId}
			, #{oprUnitId}
			, #{oprtrId}
         	, SYSDATE
        )
    </insert>
    
    <insert id="insertCustDeptDetailAuth" parameterType="HashMap">
        /* custDept.insertCustDeptDetailAuth */
        INSERT INTO SSP_APP.TB_CC_DEPT_CTL_AUTH_INFO
        (
        	CO_CD
        	, DEPT_ID
        	, BGT_OVER_AGD_YN
        	, BGT_TRNSF_AGD_YN
			, REGPSN_ID
			, REG_DTM
        ) 
        VALUES (
			#{oprtrCoCd}
			, #{seqDeptBasis}
			, #{bgtOverAgdYn}
			, #{bgtTrnsfAgdYn}
			, #{oprtrId}
         	, SYSDATE
        )
    </insert>
    
    <select id="selectSeqDeptId" parameterType="HashMap" resultType="String">
        /* custDept.selectSeqDeptId DEPT_ID 채번 */
        SELECT FN_CC_DEPT_ID_CRT() 
          FROM DUAL
    </select>
    
    <select id="selectOprUnituseYn" parameterType="HashMap" resultType="HashMap">
    	/* custDept.selectOprUnituseYn 소속된 운영단위의 사용상태 조회 */
    	SELECT OPR_UNIT_ID 
	    	, OPR_UNIT_NM 
	    	, USE_YN 
	    	, OPR_UNIT_REG_STATS_CD  
    	FROM TB_CC_OPR_UNIT_BASIS
    	WHERE CO_CD = #{coCd}
    		AND OPR_UNIT_ID = #{oprUnitId}
    </select>
    
    <select id="selectChkHrnkDeptUse" parameterType="HashMap" resultType="int">
        /* selectChkHrnkDeptUse.selectSeqDeptId 하위부서 중 사용중인 부서가 있는지 확인 */
	    SELECT NVL(COUNT(DECODE(USE_YN, 'Y', 1)), 0)
		  FROM TB_CC_DEPT_BASIS 
		 WHERE CO_CD        = #{coCd}
		   AND BZPLC_ID     = #{bzplcId}
		   AND OPR_UNIT_ID  = #{oprUnitId}
		   AND HRNK_DEPT_ID = #{deptId}
    </select>
    
    <select id="selectAuthByOprUnit" parameterType="HashMap" resultType="HashMap">
        /* selectChkHrnkDeptUse.selectAuthByOprUnit 선택한 운영단위의 권한을 조회 */
	    SELECT BGT_OVER_AGD_YN 		/* 예산초과허용여부 */
			 , COST_DEPT_CHG_PSB_YN /* 비용부서변경가능여부 이체구분 */
		  FROM TB_CC_OPR_UNIT_CTL_AUTH_INFO
		 WHERE CO_CD        = #{coCd}
		   AND BZPLC_ID     = #{bzplcId}
		   AND OPR_UNIT_ID  = #{oprUnitId}
    </select>
    
    <select id="chkMbrDeptUse" parameterType="HashMap" resultType="int">
        /* selectChkHrnkDeptUse.chkMbrDeptUse 부서의 하위 회원 존재여부 확인 */
        SELECT COUNT(*) 
		FROM TB_CC_MBR_BASIS
		WHERE CO_CD	 	 = #{coCd}
		  AND DEPT_ID 	 = #{deptId}
		  AND MBR_USE_CD = 'Y'
    </select>
    
    <select id="selectChkUpperHrnkDeptUse" parameterType="HashMap" resultType="int">
        /* selectChkHrnkDeptUse.selectChkUpperHrnkDeptUse 부서의 상위부서 미사용여부 확인 */
        SELECT COUNT(*) 
		  FROM TB_CC_DEPT_BASIS
		 WHERE DEPT_ID =    <if test="hrnkDeptId != null and !hrnkDeptId.equals('') ">
				                #{hrnkDeptId}
				            </if>
				            <if test="hrnkDeptId == null or hrnkDeptId.equals('') ">
				            ( SELECT HRNK_DEPT_ID 
								FROM TB_CC_DEPT_BASIS
							   WHERE CO_CD 	 = #{coCd}
							     AND DEPT_ID = #{deptId} )
				            </if>
		   AND USE_YN = 'N'
    </select>
    
    <select id="selectHrnkDeptIdCnt" parameterType="HashMap" resultType="int">
        /* selectChkHrnkDeptUse.selectHrnkDeptIdCnt 상위부서 변경 시 자신의 하위부서를 상위부서로 지정하는 것을 막음*/
	    SELECT COUNT(*) 
	    FROM ( SELECT LEVEL lv,B.* 
			   FROM TB_CC_DEPT_BASIS B
			   START WITH DEPT_ID = #{deptId}
			   CONNECT BY PRIOR B.DEPT_ID = B.HRNK_DEPT_ID )
		WHERE CO_CD	  = #{coCd}
		  AND DEPT_ID = #{hrnkDeptId}
    </select>
    <select id="selectOprUnitRegStatsCdChk" parameterType="HashMap" resultType="HashMap">
    	/* 운영단위등록상태코드 정보 조회 - custDept.selectOprUnitRegStatsCdChk */
   		SELECT OPR_UNIT_REG_STATS_CD
		  FROM TB_CC_OPR_UNIT_BASIS TCOUB
		 WHERE TCOUB.CO_CD       = #{oprtrCoCd}
		   AND TCOUB.BZPLC_ID    = #{bzplcId}
		   AND TCOUB.OPR_UNIT_ID = #{oprUnitId}
    </select>
</mapper>